// Файл с классами для формирования html-кода страниц КОНКУРСОВ на сайте. Файлы располагаются так:
// Материалы для конкурсов - 
// ~/files/competitionfiles/; 
// ~/files/competitionfiles/foto; 
// ~/files/competitionfiles/literary; 
// ~/files/competitionfiles/theatre
// База данных - ~/files/sqlitedb/konkurses.db

#region Using

using site.classesHelp;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Image = System.Web.UI.WebControls.Image;

#endregion

namespace site.classes
{
    #region Код формирования html-кода

    /// <summary>Класс формирует готовый htnl-код для страниц сайта.
    /// Стили для класса находятся в файле - competitions.css, competitionone.css, participantsmap.css.
    /// Javascript-файлы для класса находятся в файле adm_competitions.js
    /// Временная структура запроса будет храниться 
    /// в Session[EnumsHelper.GetSessionName(Photo.self)] ([EnumsHelper.GetSessionName(Literary.self)], [EnumsHelper.GetSessionName(Theatre.self)]) и 
    /// дублироваться во ViewState["TempRequest"]</summary>
    public class CompetitionsForm
    {
        #region Поля

        private Page _pag;
        private HttpContext _context = HttpContext.Current;

        // формирование ссылки вида http://localhost:6688/
        private string baseUrl;
        private string baseUrlNoPort;

        private string _pathToMainFolder;
        private string _pathToFotoFolder;
        private string _pathToLiteraryFolder;
        private string _pathToTheatreFolder;
        private string _pathToVmesteSilaFolder;
        private string _pathToClothesFolder;
        private string _pathToSportFolder;
        private string _pathToKulturaFolder;
        private string _pathToToponimFolder;
        private string _pathToProtocolFolder;
        private string _pathToTempFolder;
        private string _pathToMultimediaFolder;
        private string _pathToRobotechFolder;
        private string _pathToKorablikFolder;
        private string _pathToCrimrouteFolder;
        private string _pathToMathbattleFolder;
        private string _pathToKosmosFolder;
        private string _pathToScienceFolder;
        
        private string _imgUrlPathFoto;
        private string _imgUrlPathLiterary;
        private string _imgUrlPathTheatre;
        private string _imgUrlPathVmesteSila;
        private string _imgUrlPathClothes;
        private string _imgUrlPathSport;
        private string _imgUrlPathKultura;
        private string _imgUrlPathToponim;
        private string _imgUrlPathMultimedia;
        private string _imgUrlPathRobotech;
        private string _imgUrlPathProtocol;
        private string _imgUrlPathKorablik;
        private string _imgUrlPathCrimroute;
        private string _imgUrlPathMathbattle;
        private string _imgUrlPathKosmos;
        private string _imgUrlPathScience;
        private string _imgUrlPathThekvo;
        private string _imgUrlPathtMathbattle;

        //private string _pathToMainFolder_arch;
        //private string _pathToFotoFolder_arch;
        //private string _pathToLiteraryFolder_arch;
        //private string _pathToTheatreFolder_arch;
        //private string _pathToVmesteSilaFolder_arch;
        //private string _pathToSportFolder_arch;
        //private string _pathToKulturaFolder_arch;
        //private string _pathToToponimFolder_arch;
        //private string _pathToClothesFolder_arch;
        //private string _pathToMultimediaFolder_arch;
        //private string _pathToKorablikFolder_arch;
        //private string _pathToCrimrouteFolder_arch;
        //private string _pathToMathbattleFolder_arch;
        //private string _pathToKosmosFolder_arch;
        //private string _pathToScienceFolder_arch;

        //private string _imgUrlPathFoto_arch;
        //private string _imgUrlPathLiterary_arch;
        //private string _imgUrlPathTheatre_arch;
        //private string _imgUrlPathVmesteSila_arch;
        //private string _imgUrlPathClothes_arch;
        //private string _imgUrlPathSport_arch;
        //private string _imgUrlPathKultura_arch;
        //private string _imgUrlPathToponim_arch;
        //private string _imgUrlPathMultimedia_arch;
        //private string _imgUrlPathKorablik_arch;
        //private string _imgUrlPathCrimroute_arch;
        //private string _imgUrlPathMathbattle_arch;
        //private string _imgUrlPathKosmos_arch; 
        //private string _imgUrlPathScience_arch;

        private List<CompetitionRequest> _objIdsList;   //для работы выделения галочкой строк таблицы
        private List<CompetitionRequest_Arch> _objIdsList_Arch;   //для работы выделения галочкой строк архивной таблицы

        #endregion

        #region Конструктор класса

        /// <summary>Конструктор класс. Создаёт все необходимые для</summary>
        /// <param name="thisPage"></param>
        public CompetitionsForm(Page thisPage)
        {
            _pag = thisPage;
            _pathToTempFolder = _context.Server.MapPath("~") + @"files\temp\";
            _pathToMainFolder = _context.Server.MapPath("~") + @"files\competitionfiles\";

            baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" + _pag.Request.ServerVariables["SERVER_PORT"] + "/";
            baseUrlNoPort = "https://" + _pag.Request.ServerVariables["SERVER_NAME"];

            _pathToFotoFolder = _pathToMainFolder + @"foto\";
            _pathToLiteraryFolder = _pathToMainFolder + @"literary\";
            _pathToTheatreFolder = _pathToMainFolder + @"theatre\";
            _pathToVmesteSilaFolder = _pathToMainFolder + @"vmestesila\";
            _pathToClothesFolder = _pathToMainFolder + @"clothes\";
            _pathToSportFolder = _pathToMainFolder + @"sport\";
            _pathToKulturaFolder = _pathToMainFolder + @"kultura\";
            _pathToToponimFolder = _pathToMainFolder + @"toponim\";
            _pathToProtocolFolder = _pathToMainFolder + @"protocols\";
            _pathToMultimediaFolder = _pathToMainFolder + @"multimedia\";
            _pathToRobotechFolder = _pathToMainFolder + @"robotech\";
            _pathToKorablikFolder = _pathToMainFolder + @"korablik\";
            _pathToCrimrouteFolder = _pathToMainFolder + @"crimroute\";
            _pathToMathbattleFolder = _pathToMainFolder + @"mathbattle\";
            _pathToKosmosFolder = _pathToMainFolder + @"kosmos\";
            _pathToScienceFolder = _pathToMainFolder + @"science\";

            _imgUrlPathFoto = "~/files/competitionfiles/foto/";
            _imgUrlPathLiterary = "~/files/competitionfiles/literary/";
            _imgUrlPathTheatre = "~/files/competitionfiles/theatre/";
            _imgUrlPathVmesteSila = "~/files/competitionfiles/vmestesila/";
            _imgUrlPathClothes = "~/files/competitionfiles/clothes/";
            _imgUrlPathSport = "~/files/competitionfiles/sport/";
            _imgUrlPathKultura = "~/files/competitionfiles/kultura/";
            _imgUrlPathToponim = "~/files/competitionfiles/toponim/";
            _imgUrlPathProtocol = "~/files/competitionfiles/protocols/";
            _imgUrlPathMultimedia = "~/files/competitionfiles/multimedia/";
            _imgUrlPathRobotech = "~/files/competitionfiles/robotech/";
            _imgUrlPathKorablik = "~/files/competitionfiles/korablik/";
            _imgUrlPathCrimroute = "~/files/competitionfiles/crimroute/";
            _imgUrlPathMathbattle = "~/files/competitionfiles/mathbattle/";
            _imgUrlPathKosmos = "~/files/competitionfiles/kosmos/";
            _imgUrlPathScience = "~/files/competitionfiles/science/";

            //_pathToMainFolder_arch = _context.Server.MapPath("~") + @"files\competitionfiles_arch\";
            //_pathToFotoFolder_arch = _pathToMainFolder_arch + @"foto_arch\";
            //_pathToLiteraryFolder_arch = _pathToMainFolder_arch + @"literary_arch\";
            //_pathToTheatreFolder_arch = _pathToMainFolder_arch + @"theatre_arch\";
            //_pathToVmesteSilaFolder_arch = _pathToMainFolder_arch + @"vmestesila_arch\";
            //_pathToClothesFolder_arch = _pathToMainFolder_arch + @"clothes_arch\";
            //_pathToSportFolder_arch = _pathToMainFolder_arch + @"sport_arch\";
            //_pathToKulturaFolder_arch = _pathToMainFolder_arch + @"kultura_arch\";
            //_pathToToponimFolder_arch = _pathToMainFolder_arch + @"toponim_arch\";
            //_pathToMultimediaFolder_arch = _pathToMainFolder_arch + @"multimedia_arch\";
            //_pathToKorablikFolder_arch = _pathToMainFolder_arch + @"korablik_arch\";
            //_pathToCrimrouteFolder_arch = _pathToMainFolder_arch + @"crimroute_arch\";
            //_pathToMathbattleFolder_arch = _pathToMainFolder_arch + @"mathbattle_arch\";
            //_pathToKosmosFolder_arch = _pathToMainFolder_arch + @"kosmos_arch\";
            //_pathToScienceFolder_arch = _pathToMainFolder_arch + @"science_arch\";

            //_imgUrlPathFoto_arch = "~/files/competitionfiles_arch/foto_arch/";
            //_imgUrlPathLiterary_arch = "~/files/competitionfiles_arch/literary_arch/";
            //_imgUrlPathTheatre_arch = "~/files/competitionfiles_arch/theatre_arch/";
            //_imgUrlPathVmesteSila_arch = "~/files/competitionfiles_arch/vmestesila_arch/";
            //_imgUrlPathClothes_arch = "~/files/competitionfiles_arch/clothes_arch/";
            //_imgUrlPathSport_arch = "~/files/competitionfiles_arch/sport_arch/";
            //_imgUrlPathKultura_arch = "~/files/competitionfiles_arch/kultura_arch/";
            //_imgUrlPathToponim_arch = "~/files/competitionfiles_arch/toponim_arch/";
            //_imgUrlPathMultimedia_arch = "~/files/competitionfiles_arch/multimedia_arch/";
            //_imgUrlPathKorablik_arch = "~/files/competitionfiles_arch/korablik_arch/";
            //_imgUrlPathCrimroute_arch = "~/files/competitionfiles_arch/crimroute_arch/";
            //_imgUrlPathMathbattle_arch = "~/files/competitionfiles_arch/mathbattle_arch/";
            //_imgUrlPathKosmos_arch = "~/files/competitionfiles_arch/kosmos_arch/";
            //_imgUrlPathScience_arch = "~/files/competitionfiles_arch/science_arch/";

            _objIdsList = new List<CompetitionRequest>();
            _objIdsList_Arch = new List<CompetitionRequest_Arch>();

            if (!Directory.Exists(_pathToFotoFolder)) Directory.CreateDirectory(_pathToFotoFolder);
            if (!Directory.Exists(_pathToLiteraryFolder)) Directory.CreateDirectory(_pathToLiteraryFolder);
            if (!Directory.Exists(_pathToTheatreFolder)) Directory.CreateDirectory(_pathToTheatreFolder);
            if (!Directory.Exists(_pathToVmesteSilaFolder)) Directory.CreateDirectory(_pathToVmesteSilaFolder);
            if (!Directory.Exists(_pathToTempFolder)) Directory.CreateDirectory(_pathToTempFolder);
            if (!Directory.Exists(_pathToSportFolder)) Directory.CreateDirectory(_pathToSportFolder);
            if (!Directory.Exists(_pathToKulturaFolder)) Directory.CreateDirectory(_pathToKulturaFolder);
            if (!Directory.Exists(_pathToToponimFolder)) Directory.CreateDirectory(_pathToToponimFolder);
            if (!Directory.Exists(_pathToProtocolFolder)) Directory.CreateDirectory(_pathToProtocolFolder);
            if (!Directory.Exists(_pathToClothesFolder)) Directory.CreateDirectory(_pathToClothesFolder);
            if (!Directory.Exists(_pathToMultimediaFolder)) Directory.CreateDirectory(_pathToMultimediaFolder);
            if (!Directory.Exists(_pathToKorablikFolder)) Directory.CreateDirectory(_pathToKorablikFolder);
            if (!Directory.Exists(_pathToCrimrouteFolder)) Directory.CreateDirectory(_pathToCrimrouteFolder);
            if (!Directory.Exists(_pathToMathbattleFolder)) Directory.CreateDirectory(_pathToMathbattleFolder);
            if (!Directory.Exists(_pathToKosmosFolder)) Directory.CreateDirectory(_pathToKosmosFolder);
            if (!Directory.Exists(_pathToScienceFolder)) Directory.CreateDirectory(_pathToScienceFolder);
            if (!Directory.Exists(_pathToRobotechFolder)) Directory.CreateDirectory(_pathToRobotechFolder);
            

        //    if (!Directory.Exists(_pathToFotoFolder_arch)) Directory.CreateDirectory(_pathToFotoFolder_arch);
        //    if (!Directory.Exists(_pathToLiteraryFolder_arch)) Directory.CreateDirectory(_pathToLiteraryFolder_arch);
        //    if (!Directory.Exists(_pathToTheatreFolder_arch)) Directory.CreateDirectory(_pathToTheatreFolder_arch);
        //    if (!Directory.Exists(_pathToVmesteSilaFolder_arch)) Directory.CreateDirectory(_pathToVmesteSilaFolder_arch);
        //    if (!Directory.Exists(_pathToSportFolder_arch)) Directory.CreateDirectory(_pathToSportFolder_arch);
        //    if (!Directory.Exists(_pathToKulturaFolder_arch)) Directory.CreateDirectory(_pathToKulturaFolder_arch);
        //    if (!Directory.Exists(_pathToToponimFolder_arch)) Directory.CreateDirectory(_pathToToponimFolder_arch);
        //    if (!Directory.Exists(_pathToClothesFolder_arch)) Directory.CreateDirectory(_pathToClothesFolder_arch);
        //    if (!Directory.Exists(_pathToMultimediaFolder_arch)) Directory.CreateDirectory(_pathToMultimediaFolder_arch);
        //    if (!Directory.Exists(_pathToKorablikFolder_arch)) Directory.CreateDirectory(_pathToKorablikFolder_arch);
        //    if (!Directory.Exists(_pathToCrimrouteFolder_arch)) Directory.CreateDirectory(_pathToCrimrouteFolder_arch);
        //    if (!Directory.Exists(_pathToMathbattleFolder_arch)) Directory.CreateDirectory(_pathToMathbattleFolder_arch);
        //    if (!Directory.Exists(_pathToKosmosFolder_arch)) Directory.CreateDirectory(_pathToKosmosFolder_arch);
        //    if (!Directory.Exists(_pathToScienceFolder_arch)) Directory.CreateDirectory(_pathToScienceFolder_arch);

        }

        #endregion

        #region Для сайта

        #region Content_AddParty_Common
        public void Content_AddParty_Common(ref Panel panel, ref CompetitionRequest req, int protocolType = 2, bool needWeight = false)
        {
            string sessionName = EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName);
            string paramFio = "Fio", paramAge = "Age", paramSchool = "School", paramClassRoom = "ClassRoom", paramWeight = "Weight";
            string paramFioPlural = "Fios", paramAgePlural = "Agies", paramSchoolPlural = "Schools", paramClassRoomPlural = "ClassRooms", paramWeightPlural = "Weights";

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c' colspan=3' style='text-align:left;'><span class='subThemeTitle_participants'>" +
                (protocolType == 2 ? "Участники 2-го тура" : "Участники 1-го тура, не прошедшие во 2-й тур") +
                "</span></td></tr>"));
            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО / Дата рождения" + (needWeight ? " / Вес" : "") + "</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));                  // ФИО
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 223;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Ситников Андрей Игоревич");
            txtBox.Text = CompetitionsWork.GetPropertyValue(req, paramFio + (protocolType == 2 ? "" : "_" + protocolType));
            txtBox.ID = "txtBox_" + paramFio + (protocolType == 2 ? "" : "_" + protocolType);
            txtBox.MaxLength = 100;
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 80;                          // Дата рождения
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "04.11.2001");
            txtBox.Text = CompetitionsWork.GetPropertyValue(req, paramAge + (protocolType == 2 ? "" : "_" + protocolType));
            txtBox.ID = "txtBox_" + paramAge + (protocolType == 2 ? "" : "_" + protocolType);
            txtBox.MaxLength = 10;
            panel.Controls.Add(txtBox);

            if (needWeight)
            {
                panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
                txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 30;                      //Вес
                txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "40");
                if (CompetitionsWork.GetPropertyValue(req, paramWeight + (protocolType == 2 ? "" : "_" + protocolType)) == "0")
                    txtBox.Text = "";
                else
                    txtBox.Text = CompetitionsWork.GetPropertyValue(req, paramWeight + (protocolType == 2 ? "" : "_" + protocolType));
                txtBox.ID = "txtBox_" + paramWeight + (protocolType == 2 ? "" : "_" + protocolType);
                txtBox.MaxLength = 2;
                panel.Controls.Add(txtBox);
            }

            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Место учёбы / Класс с литерой|Курс</td>"));                          // ФИ / Дата рождения
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));

            panel.Controls.Add(new LiteralControl(
                     "<div style=\"display: block;\">"));

            panel.Controls.Add(new LiteralControl(
                     "<div class=\"typeahead__container js-typeahead-container-scholl\" style=\"display: inline-block;width: 250px;\">" +
                     "<div class=\"typeahead__field\">" +
                         "<div class=\"typeahead__query\">"));

            txtBox = new TextBox();
            txtBox.CssClass = "js-typeahead-scholl" + (protocolType == 2 ? "" : "_" + protocolType) + " txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "ГБОУ Школа №");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Attributes.Add("autocomplete", "off");
            txtBox.Text = CompetitionsWork.GetPropertyValue(req, paramSchool + (protocolType == 2 ? "" : "_" + protocolType));
            txtBox.ID = "txtBox_" + paramSchool + (protocolType == 2 ? "" : "_" + protocolType);
            panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</div></div></div>"));

            panel.Controls.Add(new LiteralControl("<div style=\"display: inline-block;padding:3px\">/</div>"));

            panel.Controls.Add(new LiteralControl(
                      "<div class=\"typeahead__container js-typeahead-container-classroom\" style=\"display: inline-block;width: 100px\">" +
                      "<div class=\"typeahead__field\">" +
                          "<div class=\"typeahead__query\">"));

            txtBox = new TextBox();
            txtBox.CssClass = "js-typeahead-classroom" + (protocolType == 2 ? "" : "_" + protocolType) + " txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "1-А");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Attributes.Add("autocomplete", "off");
            txtBox.Text = CompetitionsWork.GetPropertyValue(req, paramClassRoom + (protocolType == 2 ? "" : "_" + protocolType));
            txtBox.ID = "txtBox_" + paramClassRoom + (protocolType == 2 ? "" : "_" + protocolType);
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div></div></div>"));

            panel.Controls.Add(new LiteralControl("<div style=\"display: inline-block;\">"));

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddParty_c";
            lBtn.Text = "Добавить участника";
            lBtn.ToolTip = "Добавляется участник к этой заявке (данные берутся из полей слева - ФИО, ВОЗРАСТ, " + (needWeight ? "Вес, " : "") + "МЕСТО УЧЕБЫ и КЛАСС С ЛИТЕРОЙ)";
            lBtn.CommandArgument = sessionName + "|" + protocolType + "|" + paramFio + "|" + paramAge + "|" + paramSchool + "|" + paramClassRoom + "|" + paramFioPlural + "|" + paramAgePlural + "|" + paramSchoolPlural + "|" + paramClassRoomPlural + "|" + needWeight.ToString() + "|" + paramWeight + "|" + paramWeightPlural;
            lBtn.Command += lBtn_AddParty_Common;
            lBtn.OnClientClick = "waiting('Добавление участника. Подождите..', 0); return pageReady();";

            panel.Controls.Add(lBtn);
            
            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("</div>"));

            //txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 223;
            //txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "ГБОУ Школа №");
            //txtBox.Text = CompetitionsWork.GetPropertyValue(req, paramSchool + (protocolType == 2 ? "" : "_" + protocolType));
            //txtBox.ID = "txtBox_" + paramSchool + (protocolType == 2 ? "" : "_" + protocolType);
            //txtBox.MaxLength = 200;
            //panel.Controls.Add(txtBox);
            //panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));

            //txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 80;
            //txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "1-А");
            //txtBox.Text = CompetitionsWork.GetPropertyValue(req, paramClassRoom + (protocolType == 2 ? "" : "_" + protocolType));
            //txtBox.ID = "txtBox_" + paramClassRoom + (protocolType == 2 ? "" : "_" + protocolType);
            //txtBox.MaxLength = 10;
            //panel.Controls.Add(txtBox);

            //lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddParty_c";
            //lBtn.Text = "Добавить участника";
            //lBtn.ToolTip = "Добавляется участник к этой заявке (данные берутся из полей слева - ФИО, ВОЗРАСТ, " + (needWeight ? "Вес, " : "") + "МЕСТО УЧЕБЫ и КЛАСС С ЛИТЕРОЙ)";
            //lBtn.CommandArgument = sessionName + "|" + protocolType + "|" + paramFio + "|" + paramAge + "|" + paramSchool + "|" + paramClassRoom + "|" + paramFioPlural + "|" + paramAgePlural + "|" + paramSchoolPlural + "|" + paramClassRoomPlural + "|" + needWeight.ToString() + "|" + paramWeight + "|" + paramWeightPlural;
            //lBtn.Command += lBtn_AddParty_Common;
            //lBtn.OnClientClick = "waiting('Добавление участника. Подождите..', 0); return pageReady();";

            //panel.Controls.Add(lBtn);

            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("ОБЯЗАТЕЛЬНО НАЖМИТЕ НА КНОПКУ 'ДОБАВИТЬ УЧАСТНИКА' ПОСЛЕ ВВОДА ФАМИЛИИ ИМЕНИ ОТЧЕСТВА, ДАТЫ, " + (needWeight ? "ВЕС, " : "") + "МЕСТО УЧЕБЫ и КЛАССА С ЛИТЕРОЙ ЧТОБЫ ДОБАВИТЬ ЭТОГО УЧАСТНИКА В ЗАЯВКУ!!! ЕСЛИ УЧАСТНИК НЕ ОБУЧАЕТСЯ В ШКОЛЕ, ЛИЦЕЕ, КОЛЛЕДЖЕ, ТО В ПОЛЕ КЛАСС С ЛИТЕРОЙ/КУРС НАПИШИТЕ 'НЕТ'</td></tr>"));

            var fiosCommon = new List<string>();
            var agiesCommon = new List<string>();
            var schoolsCommon = new List<string>();
            var classCommon = new List<string>();
            var weightsCommon = new List<string>();

            if (!string.IsNullOrEmpty(CompetitionsWork.GetPropertyValue(req, paramFioPlural + (protocolType == 2 ? "" : "_" + protocolType))))
            {
                fiosCommon = CompetitionsWork.GetPropertyValue(req, paramFioPlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
                agiesCommon = CompetitionsWork.GetPropertyValue(req, paramAgePlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
                schoolsCommon = CompetitionsWork.GetPropertyValue(req, paramSchoolPlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
                classCommon = CompetitionsWork.GetPropertyValue(req, paramClassRoomPlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
                weightsCommon = CompetitionsWork.GetPropertyValue(req, paramWeightPlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
            }

            for (int i = 0; i < fiosCommon.Count(); i++)
            {
                panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'></td>"));
                panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));

                txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 223;
                txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ReadOnly = true; txtBox.Enabled = false;
                txtBox.Text = fiosCommon.ElementAtOrDefault(i) != null ? fiosCommon[i] : "";
                panel.Controls.Add(txtBox);

                panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
                txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 80;
                txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ReadOnly = true; txtBox.Enabled = false;
                txtBox.Text = agiesCommon.ElementAtOrDefault(i) != null ? agiesCommon[i] : "";
                panel.Controls.Add(txtBox);

                if (needWeight)
                {
                    panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
                    txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 30;
                    txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ReadOnly = true; txtBox.Enabled = false;
                    txtBox.Text = weightsCommon.ElementAtOrDefault(i) != null ? weightsCommon[i] : "";
                    panel.Controls.Add(txtBox);
                }

                panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));

                Label lbl = new Label();
                var agecat = "";
                if (agiesCommon.ElementAtOrDefault(i) != null) {
                    agecat = CompetitionsWork.AgeCathegory(agiesCommon[i], req.CompetitionName, req.SubsectionName);
                    if (string.IsNullOrEmpty(agecat)) {
                        DateTime dtTmp;
                        if (DateTime.TryParse(agiesCommon[i], out dtTmp))
                        {
                            agecat = CompetitionsWork.GetAgeFromBurth(dtTmp).ToString();
                        }
                        else
                        {
                            agecat = agiesCommon[i];
                        }
                    }
                }
                lbl.Text = agecat; 
                lbl.ForeColor = Color.Black;
                panel.Controls.Add(lbl);

                panel.Controls.Add(new LiteralControl("</td></tr>"));

                panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'></td>"));
                panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));

                txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 223;
                txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ReadOnly = true; txtBox.Enabled = false;
                txtBox.Text = schoolsCommon.ElementAtOrDefault(i) != null ? schoolsCommon[i] : "";
                panel.Controls.Add(txtBox);

                panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
                txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 80;
                txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ReadOnly = true; txtBox.Enabled = false;
                txtBox.Text = classCommon.ElementAtOrDefault(i) != null ? classCommon[i] : "";
                panel.Controls.Add(txtBox);

                lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelParty_c";                  //кнопка удаления участника из временного списка
                lBtn.Text = "удалить участника";
                lBtn.ToolTip = "удалить участника из списка участников по данной заявке";
                lBtn.CommandArgument = sessionName + "|" + protocolType + "|" + i.ToString() + "|" + paramFioPlural + "|" + paramAgePlural + "|" + paramSchoolPlural + "|" + paramClassRoomPlural + "|" + needWeight.ToString() + "|" + paramWeightPlural;
                lBtn.Command += lBtn_DelParty_Common;
                lBtn.OnClientClick = "waiting('Удаление участника. Подождите..', 0); return pageReady();";

                panel.Controls.Add(lBtn);

                panel.Controls.Add(new LiteralControl("</td></tr>"));
            }
        }
        #region lBtn_AddParty_Common

        /// <summary>Нажатие на кнопку ДОБАВИТЬ участника</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddParty_Common(object sender, CommandEventArgs e)
        {
            bool err = false;

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Основной код

            try
            {
                #region Сбор, проверка переменных (ФИО, Дата рождения), и их запись в сессионную переменную

                bool checker = true;
                string errText = "Неправильно введено:";

                CompetitionRequest req = new CompetitionRequest();
                var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

                if ((CompetitionRequest)_context.Session[args[0]] != null)
                {
                    req = (CompetitionRequest)_context.Session[args[0]];
                }
                else
                {
                    throw new Exception("Не удалось получить объект Session[\"" + args[0] + "\"] (первый случай)");
                }

                int protocolType = int.Parse(args[1]);
                bool needWeight = bool.Parse(args[10]);
                string paramFio = args[2], paramAge = args[3], paramSchool = args[4], paramClassRoom = args[5], paramWeight = args[11];
                string paramFioPlural = args[6], paramAgePlural = args[7], paramSchoolPlural = args[8], paramClassRoomPlural = args[9], paramWeightPlural = args[12];

                TextBox txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_" + paramFio + (protocolType == 2 ? "" : "_" + protocolType));                     // ФИО

                if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    errText += " Фамилия Имя Отчетство участника";
                }
                else
                {
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                TextBox txtBox1 = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_" + paramAge + (protocolType == 2 ? "" : "_" + protocolType));                    // ДАТА РОЖДЕНИЯ
                string age = txtBox1.Text.Trim();
                DateTime dtTmp;
                if (!DateTime.TryParse(txtBox1.Text.Trim(), out dtTmp))
                {
                    if (!checker)
                    {
                        errText += ", дата рождения участника";
                    }
                    else
                    {
                        errText += " дата рождения участника";
                    }
                    checker = false;
                    txtBox1.BorderWidth = 1; txtBox1.BorderColor = Color.Red; txtBox1.BackColor = Color.Bisque;
                }
                else
                {
                    txtBox1.BorderWidth = 0; txtBox1.BorderColor = Color.Transparent; txtBox1.BackColor = Color.White;
                }

                TextBox txtBox4 = new TextBox();
                if (needWeight)
                {
                    txtBox4 = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_" + paramWeight + (protocolType == 2 ? "" : "_" + protocolType));                    // Вес
                    if (string.IsNullOrEmpty(txtBox4.Text.Trim()))
                    {
                        if (!checker)
                        {
                            errText += ", вес";
                        }
                        else
                        {
                            errText += " вес";
                        }
                        checker = false;
                        txtBox4.BorderWidth = 1; txtBox4.BorderColor = Color.Red; txtBox4.BackColor = Color.Bisque;
                    }
                    else
                    {
                        txtBox4.BorderWidth = 0; txtBox4.BorderColor = Color.Transparent; txtBox4.BackColor = Color.White;
                    }
                }

                TextBox txtBox2 = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_" + paramSchool + (protocolType == 2 ? "" : "_" + protocolType));                    // Место учебы
                if (string.IsNullOrEmpty(txtBox2.Text.Trim()))
                {
                    if (!checker)
                    {
                        errText += ", место учёбы";
                    }
                    else
                    {
                        errText += " место учёбы";
                    }
                    checker = false;
                    txtBox2.BorderWidth = 1; txtBox2.BorderColor = Color.Red; txtBox2.BackColor = Color.Bisque;
                }
                else
                {
                    txtBox2.BorderWidth = 0; txtBox2.BorderColor = Color.Transparent; txtBox2.BackColor = Color.White;
                }

                TextBox txtBox3 = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_" + paramClassRoom + (protocolType == 2 ? "" : "_" + protocolType));                    // Класс с литерой
                if (string.IsNullOrEmpty(txtBox3.Text.Trim()))
                {
                    if (!checker)
                    {
                        errText += ", класс с литерой";
                    }
                    else
                    {
                        errText += " класс с литерой";
                    }
                    checker = false;
                    txtBox3.BorderWidth = 1; txtBox3.BorderColor = Color.Red; txtBox3.BackColor = Color.Bisque;
                }
                else
                {
                    txtBox3.BorderWidth = 0; txtBox3.BorderColor = Color.Transparent; txtBox3.BackColor = Color.White;
                }

                if (checker)
                {

                    if (string.IsNullOrEmpty(CompetitionsWork.GetPropertyValue(req, paramFioPlural + (protocolType == 2 ? "" : "_" + protocolType))))
                    {
                        CompetitionsWork.SetPropertyValue(ref req, paramFioPlural + (protocolType == 2 ? "" : "_" + protocolType), txtBox.Text.Trim());
                    }
                    else
                    {
                        CompetitionsWork.SetPropertyValue(ref req, paramFioPlural + (protocolType == 2 ? "" : "_" + protocolType), CompetitionsWork.GetPropertyValue(req, paramFioPlural + (protocolType == 2 ? "" : "_" + protocolType)) + "|" + txtBox.Text.Trim());
                    }

                    if (string.IsNullOrEmpty(CompetitionsWork.GetPropertyValue(req, paramAgePlural + (protocolType == 2 ? "" : "_" + protocolType))))
                    {
                        CompetitionsWork.SetPropertyValue(ref req, paramAgePlural + (protocolType == 2 ? "" : "_" + protocolType), txtBox1.Text.Trim());
                    }
                    else
                    {
                        CompetitionsWork.SetPropertyValue(ref req, paramAgePlural + (protocolType == 2 ? "" : "_" + protocolType), CompetitionsWork.GetPropertyValue(req, paramAgePlural + (protocolType == 2 ? "" : "_" + protocolType)) + "|" + txtBox1.Text.Trim());
                    }

                    if (string.IsNullOrEmpty(CompetitionsWork.GetPropertyValue(req, paramSchoolPlural + (protocolType == 2 ? "" : "_" + protocolType))))
                    {
                        CompetitionsWork.SetPropertyValue(ref req, paramSchoolPlural + (protocolType == 2 ? "" : "_" + protocolType), txtBox2.Text.Trim());
                    }
                    else
                    {
                        CompetitionsWork.SetPropertyValue(ref req, paramSchoolPlural + (protocolType == 2 ? "" : "_" + protocolType), CompetitionsWork.GetPropertyValue(req, paramSchoolPlural + (protocolType == 2 ? "" : "_" + protocolType)) + "|" + txtBox2.Text.Trim());
                    }

                    if (string.IsNullOrEmpty(CompetitionsWork.GetPropertyValue(req, paramClassRoomPlural + (protocolType == 2 ? "" : "_" + protocolType))))
                    {
                        CompetitionsWork.SetPropertyValue(ref req, paramClassRoomPlural + (protocolType == 2 ? "" : "_" + protocolType), txtBox3.Text.Trim());
                    }
                    else
                    {
                        CompetitionsWork.SetPropertyValue(ref req, paramClassRoomPlural + (protocolType == 2 ? "" : "_" + protocolType), CompetitionsWork.GetPropertyValue(req, paramClassRoomPlural + (protocolType == 2 ? "" : "_" + protocolType)) + "|" + txtBox3.Text.Trim());
                    }

                    if (needWeight)
                    {
                        if (string.IsNullOrEmpty(CompetitionsWork.GetPropertyValue(req, paramWeightPlural + (protocolType == 2 ? "" : "_" + protocolType))))
                        {
                            CompetitionsWork.SetPropertyValue(ref req, paramWeightPlural + (protocolType == 2 ? "" : "_" + protocolType), txtBox4.Text.Trim());
                        }
                        else
                        {
                            CompetitionsWork.SetPropertyValue(ref req, paramWeightPlural + (protocolType == 2 ? "" : "_" + protocolType), CompetitionsWork.GetPropertyValue(req, paramWeightPlural + (protocolType == 2 ? "" : "_" + protocolType)) + "|" + txtBox4.Text.Trim());
                        }
                    }

                    // для сохранения значений в сессии
                    if ((CompetitionRequest)_context.Session[args[0]] != null)
                    {
                        FieldsValueSave((CompetitionRequest)_context.Session[args[0]], _pag);
                    }
                    else
                    {
                        throw new Exception("Не удалось получить объект Session[\"" + args[0] + "\"] (второй случай)");
                    }

                    // после успешного добавления участника, обнуляем значения общих полей ФИО, возраста, места учебы, класс с литерой и вес
                    CompetitionsWork.SetPropertyValue(ref req, paramFio + (protocolType == 2 ? "" : "_" + protocolType), "");
                    CompetitionsWork.SetPropertyValue(ref req, paramAge + (protocolType == 2 ? "" : "_" + protocolType), "");
                    CompetitionsWork.SetPropertyValue(ref req, paramSchool + (protocolType == 2 ? "" : "_" + protocolType), "");
                    CompetitionsWork.SetPropertyValue(ref req, paramClassRoom + (protocolType == 2 ? "" : "_" + protocolType), "");

                    if (needWeight)
                    {
                        if (protocolType == 2)
                            req.Weight = 0;
                        else
                            req.Weight_1 = 0;
                    }
                }
                else
                {
                    err = true;
                    lbl.Text = errText; panelWarn.Controls.Add(lbl);
                }

                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                err = true;

                #endregion
            }
            if (err) return;

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtn_DelParty_Common

        /// <summary>Нажатие на кнопку УДАЛИТЬ участника</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит index элемента в списках Fios и Ageis, который нужно удалить</param>
        private void lBtn_DelParty_Common(object sender, CommandEventArgs e)
        {
            bool err = false;

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Основной код

            try
            {
                #region Основной код

                CompetitionRequest req = new CompetitionRequest();
                var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

                int protocolType = int.Parse(args[1]);
                int index = int.Parse(args[2]);

                bool needWeight = bool.Parse(args[7]);

                string paramFioPlural = args[3], paramAgePlural = args[4], paramSchoolPlural = args[5], paramClassRoomPlural = args[6], paramWeightPlural = args[8];

                if ((CompetitionRequest)_context.Session[args[0]] != null)
                {
                    req = (CompetitionRequest)_context.Session[args[0]];
                }
                else
                {
                    throw new Exception("Не удалось получить объект Session[\"" + args[0] + "\"] (первый случай)");
                }

                var fiosCommon = CompetitionsWork.GetPropertyValue(req, paramFioPlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
                var agiesCommon = CompetitionsWork.GetPropertyValue(req, paramAgePlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
                var schoolsCommon = CompetitionsWork.GetPropertyValue(req, paramSchoolPlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
                var classCommon = CompetitionsWork.GetPropertyValue(req, paramClassRoomPlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
                var weightsCommon = CompetitionsWork.GetPropertyValue(req, paramWeightPlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();

                if (fiosCommon.ElementAtOrDefault(index) != null) fiosCommon.RemoveAt(index);
                if (agiesCommon.ElementAtOrDefault(index) != null) agiesCommon.RemoveAt(index);
                if (schoolsCommon.ElementAtOrDefault(index) != null) schoolsCommon.RemoveAt(index);
                if (classCommon.ElementAtOrDefault(index) != null) classCommon.RemoveAt(index);
                if (weightsCommon.ElementAtOrDefault(index) != null) weightsCommon.RemoveAt(index);

                StringBuilder fiosStr = new StringBuilder();
                for (int i = 0; i < fiosCommon.Count; i++)
                {
                    if (i == 0) fiosStr.Append(fiosCommon[i]); else fiosStr.Append("|" + fiosCommon[i]);
                }
                StringBuilder agiesStr = new StringBuilder();
                for (int i = 0; i < agiesCommon.Count; i++)
                {
                    if (i == 0) agiesStr.Append(agiesCommon[i]); else agiesStr.Append("|" + agiesCommon[i]);
                }
                StringBuilder schoolsStr = new StringBuilder();
                for (int i = 0; i < schoolsCommon.Count; i++)
                {
                    if (i == 0) schoolsStr.Append(schoolsCommon[i]); else schoolsStr.Append("|" + schoolsCommon[i]);
                }
                StringBuilder classRoomsStr = new StringBuilder();
                for (int i = 0; i < classCommon.Count; i++)
                {
                    if (i == 0) classRoomsStr.Append(classCommon[i]); else classRoomsStr.Append("|" + classCommon[i]);
                }
                StringBuilder weightsStr = new StringBuilder();
                for (int i = 0; i < weightsCommon.Count; i++)
                {
                    if (i == 0) weightsStr.Append(weightsCommon[i]); else weightsStr.Append("|" + weightsCommon[i]);
                }
                CompetitionsWork.SetPropertyValue(ref req, paramFioPlural + (protocolType == 2 ? "" : "_" + protocolType), fiosStr.ToString().Trim());
                CompetitionsWork.SetPropertyValue(ref req, paramAgePlural + (protocolType == 2 ? "" : "_" + protocolType), agiesStr.ToString().Trim());
                CompetitionsWork.SetPropertyValue(ref req, paramSchoolPlural + (protocolType == 2 ? "" : "_" + protocolType), schoolsStr.ToString().Trim());
                CompetitionsWork.SetPropertyValue(ref req, paramClassRoomPlural + (protocolType == 2 ? "" : "_" + protocolType), classRoomsStr.ToString().Trim());

                if (needWeight)
                {
                    CompetitionsWork.SetPropertyValue(ref req, paramWeightPlural + (protocolType == 2 ? "" : "_" + protocolType), weightsStr.ToString().Trim());
                }

                // для сохранения значений в сессии
                if ((CompetitionRequest)_context.Session[args[0]] != null)
                {
                    FieldsValueSave((CompetitionRequest)_context.Session[args[0]], _pag);
                }
                else
                {
                    throw new Exception("Не удалось получить объект Session[\"" + args[0] + "\"] (второй случай)");
                }

                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не получилось удалить добавленного участника. Попробуйте повторить или сообщите нам."; panelWarn.Controls.Add(lbl);
                err = true;

                #endregion
            }
            if (err) return;

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #endregion

        #region Content_AddParty_Common_One

        public void Content_AddParty_Common_One(ref Panel panel, ref CompetitionRequest req)
        {
            TextBox txtBox = new TextBox();

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО/Дата рождения</td>"));                        // ФИО/Дата рождения
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 392;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Ситников Андрей Игоревич");
            txtBox.Text = req.Fio; txtBox.ID = "txtBox_Fio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 80;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "04.11.2001");
            txtBox.Text = req.Age; txtBox.ID = "txtBox_Age"; txtBox.MaxLength = 10; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Место учёбы / Класс с литерой|Курс</td>"));        // >Место учёбы / Класс с литерой|Курс
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));

            panel.Controls.Add(new LiteralControl(
                     "<div style=\"display: block;\">"));

            panel.Controls.Add(new LiteralControl(
                     "<div class=\"typeahead__container js-typeahead-container-scholl\" style=\"display: inline-block;width: 250px;\">" +
                     "<div class=\"typeahead__field\">" +
                         "<div class=\"typeahead__query\">"));

            txtBox = new TextBox();
            txtBox.CssClass = "js-typeahead-scholl txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "ГБОУ Школа №");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Attributes.Add("autocomplete", "off");
            txtBox.Text = req.School;
            txtBox.ID = "txtBox_School";
            panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</div></div></div>"));

            panel.Controls.Add(new LiteralControl("<div style=\"display: inline-block;padding:3px\">/</div>"));

            panel.Controls.Add(new LiteralControl(
                      "<div class=\"typeahead__container js-typeahead-container-classroom\" style=\"display: inline-block;width: 100px\">" +
                      "<div class=\"typeahead__field\">" +
                          "<div class=\"typeahead__query\">"));

            txtBox = new TextBox();
            txtBox.CssClass = "js-typeahead-classroom txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "1-А");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Attributes.Add("autocomplete", "off");
            txtBox.Text = req.ClassRoom;
            txtBox.ID = "txtBox_ClassRoom";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div></div></div>"));
            
            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("</td></tr>"));
        }
        #endregion

        #region Content_AddEducationOrganization_Common

        public void Content_AddEducationOrganization_Common(ref Panel panel, ref CompetitionRequest req)
        {
            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Сведения об образовательном учреждении</td>"));                       
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            
            panel.Controls.Add(new LiteralControl("<div style=\"width:518px;\">"));

            //var rb = ((RadioButton)this._pag.FindControl("ctl00$ContentPlaceHolder1$organization"));
            var isEdu = req.EducationalOrganization != "Индивидуальная заявка" ? true : false;
         
            panel.Controls.Add(new LiteralControl(
                 "<div class=\"typeahead__container\">" +
                    "<div>"));
           
            var radio = new RadioButton();
            radio.ID = "organization";
            radio.GroupName = "eduTypeName";
            radio.Text = " Образовательное учреждение";
            radio.Checked = isEdu;
            panel.Controls.Add(radio);

            panel.Controls.Add(new LiteralControl("</div><div>"));

            radio = new RadioButton();
            radio.ID = "individ";
            radio.GroupName = "eduTypeName";
            radio.Text = " Индивидуальная заявка";
            radio.Checked = !isEdu;
            panel.Controls.Add(radio);

            panel.Controls.Add(new LiteralControl(
                     "</div>" +
                 "</div>"));

            panel.Controls.Add(new LiteralControl(
                "<div class=\"typeahead__container\">" +
                   "<div>"));
            
            panel.Controls.Add(new LiteralControl("<div class='explanation' style='padding:0px;color:#f54444;font-size:13px;'>Поиск начинается после <strong>3-х</strong> введенных символов.</div>"));

            panel.Controls.Add(new LiteralControl("<div class='explanation' style='padding:0px;color:#f54444;font-size:13px;'>Пример для поиска: <strong>ГБОУ Школа № 17</strong></div>"));

            panel.Controls.Add(new LiteralControl(
                     "</div>" +
                 "</div>"));

            panel.Controls.Add(new LiteralControl(
                       "<div class=\"typeahead__container js-typeahead-container-org\" style=\"display:" + (isEdu ? "block":"none") + ";margin-top:3px;\">" +
                       "<div class=\"typeahead__field\">" +
                           "<div class=\"typeahead__query\">"));

            var txtBox = new TextBox();
            txtBox.CssClass = "js-typeahead-org";
            txtBox.TextMode = TextBoxMode.SingleLine; 
            txtBox.Attributes.Add("placeholder", "Введите короткое или полное название образовательного учреждения");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Attributes.Add("autocomplete", "off");
            txtBox.Text = req.EducationalOrganization; 
            txtBox.ID = "txtBox_EducationalOrganization";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>" +
                        "</div>" +
                    "</div>"));

            panel.Controls.Add(new LiteralControl(
                       "<div class=\"typeahead__container js-typeahead-container-individ\" style=\"display:" + (!isEdu ? "block": "none") + ";margin-top:3px;\">" +
                       "<div class=\"typeahead__field\">" +
                           "<div class=\"typeahead__query\">"));

            txtBox = new TextBox();
            txtBox.CssClass = "js-typeahead-individ";
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Введите название города");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Attributes.Add("autocomplete", "off");
            txtBox.Text = string.Format("Регион: {0}, Район: {1}, Город: {2}", req.Region, req.Area, req.City); 
            txtBox.ID = "txtBox_EducationalOrganizationCity";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>" +
                       "</div>" +
                   "</div>"));

            panel.Controls.Add(new LiteralControl("<div class=\"typeahead__container\">"));

            //if (isEdu)
            //{
                panel.Controls.Add(new LiteralControl("<div class=\"typeahead__field EducationalOrganizationShort\" style=\"margin-top:5px\">"));

                txtBox = new TextBox();
                txtBox.TextMode = TextBoxMode.SingleLine;
                txtBox.Attributes.Add("placeholder", "Образовательное учреждение");
                txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
                txtBox.Text = req.EducationalOrganizationShort;
                txtBox.ID = "txtBox_EducationalOrganizationShort";
                panel.Controls.Add(txtBox);

                panel.Controls.Add(new LiteralControl("</div>"));
            //}

            panel.Controls.Add(new LiteralControl("<div class=\"typeahead__field\" style=\"margin-top:5px\">"));

            txtBox = new TextBox();
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Федеральный округ");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Text = req.District; 
            txtBox.ID = "txtBox_District";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("<div class=\"typeahead__field\" style=\"margin-top:5px\">"));

            txtBox = new TextBox();
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Регион");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Text = req.Region;
            txtBox.ID = "txtBox_Region";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("<div class=\"typeahead__field\" style=\"margin-top:5px\">"));

            txtBox = new TextBox();
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Район");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Text =  req.Area;
            txtBox.ID = "txtBox_Area";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("<div class=\"typeahead__field\" style=\"margin-top:5px\">"));

            txtBox = new TextBox();
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Город");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Text = req.City;
            txtBox.ID = "txtBox_City";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("</td></tr>"));
        
            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c' style='color:#f54444;font-size:13px;'>"));
            panel.Controls.Add(new LiteralControl("Если вы не учащийся образовательного учреждения или не нашли его в списке,<br />выберите пункт \"Индивидуальная заявка\" и найдите свой город</td></tr>"));
        }

        #endregion

        #region GetLastPartyByChiefEmail
        public void GetLastPartyByChiefEmail(ref Panel panel, ref CompetitionRequest req, string sessionName)
        {

            var txtBox = new TextBox();
            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Width = 380;
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);

            var lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddParty_c";
            lBtn.Text = "Копировать";
            lBtn.ToolTip = "НАЖИМАЯ 'КОПИРОВАТЬ', УЧАСТНИКИ ВТОРОГО ТУРА СКОПИРУЮТСЯ В ТАБЛИЦУ УЧАСТНИКОВ ПЕРВОГО ТУРА ПО EMAIL РУКОВОДИТЕЛЯ ПОСЛЕДНЕЙ ВВЕДЁННОЙ ЗАЯВКИ";
            lBtn.CommandArgument = sessionName + "|" + req.CompetitionName + "|" + req.SubsectionName;
            lBtn.Command += lBtn_GetLastPartyByChiefEmail_Common;
            lBtn.OnClientClick = "waiting('Добавление участника. Подождите..', 0); return pageReady();";

            panel.Controls.Add(lBtn);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            //panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            //panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            //panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));
        }

        #region lBtn_GetLastPartyByChiefEmail_Common

        /// <summary>Нажатие на кнопку КОПИРОВАТЬ участников</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_GetLastPartyByChiefEmail_Common(object sender, CommandEventArgs e)
        {
            bool err = false;

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Основной код

            try
            {
                #region Сбор, проверка переменных их запись в сессионную переменную

                bool checker = true;
                string errText = "";

                CompetitionRequest req = new CompetitionRequest();
                var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

                if ((CompetitionRequest)_context.Session[args[0]] != null)
                {
                    req = (CompetitionRequest)_context.Session[args[0]];
                }
                else
                {
                    throw new Exception("Не удалось получить объект Session[\"" + args[0] + "\"] (первый случай)");
                }

                TextBox txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");                    //Электронная почта руководителя (или участника)
                if (string.IsNullOrEmpty(txtBox.Text.Trim()))
                {
                    checker = false;
                    errText += "Электронная почта руководителя (или участника) не заполнена для процедуры копирования участников";
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    var lastReq = new CompetitionsWork().GetListOfRequests(args[1], "", /*args[2]*/"").Where(x => x.ChiefEmail.Contains(txtBox.Text.Trim())).OrderByDescending(x => x.Id).FirstOrDefault();
                    if (lastReq != null)
                    {
                        //CompetitionsWork.SetPropertyValue(ref req, "ProtocolFile", lastReq.ProtocolFile);
                        CompetitionsWork.SetPropertyValue(ref req, "Fios_1", lastReq.Fios_1);
                        CompetitionsWork.SetPropertyValue(ref req, "Agies_1", lastReq.Agies_1);
                        CompetitionsWork.SetPropertyValue(ref req, "Schools_1", lastReq.Schools_1);
                        CompetitionsWork.SetPropertyValue(ref req, "ClassRooms_1", lastReq.ClassRooms_1);
                        CompetitionsWork.SetPropertyValue(ref req, "Weights_1", lastReq.Weights_1);
                    }
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (checker)
                {
                    CompetitionsWork.SetPropertyValue(ref req, "ChiefEmail", txtBox.Text.Trim());

                    // для сохранения значений в сессии
                    if ((CompetitionRequest)_context.Session[args[0]] != null)
                    {
                        FieldsValueSave((CompetitionRequest)_context.Session[args[0]], _pag);
                    }
                    else
                    {
                        throw new Exception("Не удалось получить объект Session[\"" + args[0] + "\"] (второй случай)");
                    }
                }
                else
                {
                    err = true;
                    lbl.Text = errText; panelWarn.Controls.Add(lbl);
                }

                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                err = true;

                #endregion
            }
            if (err) return;

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion

        #endregion

        #region Content_AddChief_Common 
        public void Content_AddChief_Common(ref Panel panel, ref CompetitionRequest req)
        {
            string sessionName = EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName);

            #region ФИО руководителя (учителя) и его должность 

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя (учителя)/Должность</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));

            var txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 200;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 108;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий учебной частью");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 200; panel.Controls.Add(txtBox);

            var lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddParty_c";
            lBtn.Text = "Добавить педагога";
            lBtn.ToolTip = "Добавляется педагог к этой заявке (данные берутся из полей слева - ФИО руководителя(учителя) и Должность)";
            lBtn.CommandArgument = sessionName;
            lBtn.Command += lBtn_AddChief_Common;
            lBtn.OnClientClick = "waiting('Добавление педагога. Подождите..', 0); return pageReady();";

            panel.Controls.Add(lBtn);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("ОБЯЗАТЕЛЬНО НАЖМИТЕ НА КНОПКУ 'ДОБАВИТЬ ПЕДАГОГА' ПОСЛЕ ВВОДА ФИО И ДОЛЖНОСТИ, ЧТОБЫ ДОБАВИТЬ ПЕДАГОГА В ЗАЯВКУ!!!</td></tr>"));

            #endregion

            #region Панель отображения добавленных педагогов (учителей)

            for (int i = 0; i < req.ChiefFios.Count; i++)
            {
                panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'></td>"));
                panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));

                txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 200;
                txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ReadOnly = true; txtBox.Enabled = false;
                txtBox.Text = req.ChiefFios[i];
                panel.Controls.Add(txtBox);

                panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
                txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 108;
                txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ReadOnly = true; txtBox.Enabled = false;
                txtBox.Text = req.ChiefPositions[i];
                panel.Controls.Add(txtBox);

                lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelParty_c";                  //кнопка удаления педагога из временного списка
                lBtn.Text = "удалить педагога";
                lBtn.ToolTip = "удалить педагога из списка участников по данной заявке";
                lBtn.CommandArgument = sessionName + "|" + i.ToString();
                lBtn.Command += lBtn_DelChief_Common;
                lBtn.OnClientClick = "waiting('Удаление педагога. Подождите..', 0); return pageReady();";

                panel.Controls.Add(lBtn);

                panel.Controls.Add(new LiteralControl("</td></tr>"));
            }

            #endregion

            #region Электронная почта руководителя (или участника)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Телефон руководителя (или участника) 

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
        }

        #region lBtn_AddChief_Common

        /// <summary>Нажатие на кнопку ДОБАВИТЬ педагога</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddChief_Common(object sender, CommandEventArgs e)
        {
            bool err = false;

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Основной код

            try
            {
                #region Сбор, проверка переменных (ФИО, Должность), и их запись в сессионную переменную

                bool checker = true;
                string errText = "Неправильно введены:";
                CompetitionRequest req = new CompetitionRequest();
                var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

                if ((CompetitionRequest)_context.Session[args[0]] != null)
                {
                    req = (CompetitionRequest)_context.Session[args[0]];
                }
                else
                {
                    throw new Exception("Не удалось получить объект Session[\"" + args[0] + "\"] (первый случай)");
                }

                TextBox txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");                     // ФИО

                string fio = txtBox.Text.Trim();

                if (!CompetitonWorkCommon.IsFioOk(fio))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    errText += " ФИО руководителя";
                }
                else
                {
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");                           // Должность
                string position = txtBox.Text.Trim();
                if (position == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    if (errText.Contains("ФИО руководителя"))
                    {
                        errText += ", должность педагога";
                    }
                    else
                    {
                        errText += " должность педагога";
                    }
                }
                else
                {
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #region Проверка дублирования ФИО

                bool isExist = false;
                foreach (string item in req.ChiefFios)
                {
                    if (item.ToLower() == fio.ToLower())
                    {
                        isExist = true; break;
                    }
                }
                if (isExist)
                {
                    checker = false;
                    errText += "Вы уже добавили этого педагога (учителя) в список";
                }

                #endregion

                if (checker)
                {
                    req.ChiefFios.Add(fio);
                    req.ChiefPositions.Add(position);

                    // для сохранения значений в сессии
                    if ((CompetitionRequest)_context.Session[args[0]] != null)
                    {
                        FieldsValueSave((CompetitionRequest)_context.Session[args[0]], _pag);
                    }
                    else
                    {
                        throw new Exception("Не удалось получить объект Session[\"" + args[0] + "\"] (второй случай)");
                    }

                    // после успешного добавления участника, обнуляем значения общих полей ФИО и возраста
                    req.ChiefFio = "";
                    req.ChiefPosition = "";
                }
                else
                {
                    err = true;
                    lbl.Text = errText; panelWarn.Controls.Add(lbl);
                }

                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                err = true;

                #endregion
            }
            if (err) return;

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtn_DelChief_Common

        /// <summary>Нажатие на кнопку УДАЛИТЬ педагога</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит index элемента в списках ChiefFios и ChiefPositions, который нужно удалить</param>
        private void lBtn_DelChief_Common(object sender, CommandEventArgs e)
        {
            bool err = false;

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Основной код

            try
            {
                #region Основной код

                CompetitionRequest req = new CompetitionRequest();
                var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();
                int index = int.Parse(args[1]);

                if ((CompetitionRequest)_context.Session[args[0]] != null)
                {
                    req = (CompetitionRequest)_context.Session[args[0]];
                }
                else
                {
                    throw new Exception("Не удалось получить объект Session[\"" + args[0] + "\"] (первый случай)");
                }

                req.ChiefFios.RemoveAt(index);
                req.ChiefPositions.RemoveAt(index);

                // для сохранения значений в сессии
                if ((CompetitionRequest)_context.Session[args[0]] != null)
                {
                    FieldsValueSave((CompetitionRequest)_context.Session[args[0]], _pag);
                }
                else
                {
                    throw new Exception("Не удалось получить объект Session[\"" + args[0] + "\"] (второй случай)");
                }

                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не получилось удалить добавленного педагога. Попробуйте повторить или сообщите нам."; panelWarn.Controls.Add(lbl);
                err = true;

                #endregion
            }
            if (err) return;

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #endregion

        #region Content_Agreements_Common
        public void Content_Agreements_Common(ref Panel panel, ref CompetitionRequest req)
        {

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Согласие на обработку персональный данных
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var chkBox = new CheckBox(); chkBox.CssClass = "chkBox_c"; chkBox.ID = "chkBox_PdnProcessing";
            chkBox.Checked = req.PdnProcessing; panel.Controls.Add(chkBox);
            panel.Controls.Add(new LiteralControl("<span class='p_agreement_c'> Я (или родитель – если Вам нет еще 14 лет) даю свое согласие на обработку представленных мной персональных данных, для регистрации меня как участника мероприятия, а именно: ФИО, возраст, место учебы/работы, класс/должность, Контактный телефон, адрес электронной почты. Подтверждаю, что даю свое согласие на размещение моих фотографий по итогам проведения мероприятия на сайте, а также в официальных группах организации в социальных сетях. В случае победы в конкурсе, даю согласие на публикацию результатов на сайте, а также в официальной группе организации в социальных сетях.</span>"));
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Согласие на публикацию работ с сохранением авторства
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            chkBox = new CheckBox(); chkBox.CssClass = "chkBox_c"; chkBox.ID = "chkBox_PublicAgreement";
            chkBox.Checked = req.PublicAgreement; panel.Controls.Add(chkBox);
            panel.Controls.Add(new LiteralControl("<span class='p_agreement_c'> Я (или родитель – если Вам нет еще 14 лет) даю свое согласие на публикацию своих работ с сохранением авторства.</span>"));
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("</table>"));

        }
        #endregion

        #region Content_VideoLink_Common
        public void Content_VideoLink_Common(ref Panel panelResult, ref CompetitionRequest req)
        {
            string sessionName = EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName);

            var panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Добавьте ссылку на видео со своей работой.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Для этого вам необходимо разместить видео на RUTUBE. После размещения откройте страницу видео и произведите одно из следующих действий (на выбор):<br/>" +
                "&nbsp;&nbsp;&nbsp;&nbsp; 1. Скопируйте ссылку на ролик (содержимое url-строки вашего браузера).<br/>" +
                "&nbsp;&nbsp;&nbsp;&nbsp; 2. Нажмите на кнопку 'Поделиться', в появившейся панели нажмите на ссылку или скопируйте эту строку.<br/><br/>" +
                "Cкопированную ссылку (строку) вставьте в поле слева от кнопки 'ДОБАВИТЬ' в заявке. Затем нажмите на кнопку 'ДОБАВИТЬ'.<br/><br/>" +
                "Должна появиться ссылка на ролик ниже кнопки 'ДОБАВИТЬ'! Если ссылка не появилась, проверьте правильность скопированной ссылки и повторите всё заново.</p>"));

            panel.Controls.Add(new LiteralControl("<span class='subThemeTitle_c'>Ссылка на видео RUTUBE или ссылка на файл в ЯНДЕКС ДИСКЕ</span>"));

            var txtBox = new TextBox(); txtBox.CssClass = "txtBox_c txtBoxLink_c placeHolderForm_c"; txtBox.Width = 200;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ID = "txtBox_youtubeLinkXI"; txtBox.MaxLength = 100;
            panel.Controls.Add(txtBox);

            var lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddFoto_c";
            lBtn.Text = "ДОБАВИТЬ";
            lBtn.ToolTip = "Загружайте ссылку на ролик, размещённый в RUTUBE или ссылку на файл в ЯНДЕКС ДИСКЕ";
            lBtn.CommandArgument = "|" + sessionName;
            lBtn.Command += lBtn_AddLink_Common;
            lBtn.OnClientClick = "return pageReady()";
            panel.Controls.Add(lBtn);

            Panel panelWork = new Panel();                                      // панель со ссылками на фото (картинки)
            panelWork.CssClass = "divWork_c"; panelWork.ID = "panelWorks_c_video";
            int counterv = 1;

            foreach (string link in req.Links.Where(x => x.ToLower().StartsWith("http://") || x.ToLower().StartsWith("https://")))      // алгоритм изначально задуман на добавление множества ссылок на видео!!! Ограничение установлено в событии - lBtn_AddLink
            {
                string[] res = CompetitionsWork.transformRutubeLink(link);
                //string[] res = CompetitionsWork.transformYoutubeLink(link);
                if (res[0] != "")
                {
                    HyperLink hLink = new HyperLink(); hLink.CssClass = "hLink_c";
                    hLink.NavigateUrl = res[0];
                    hLink.Text = "ссылка на RUTUBE";
                    hLink.Target = "_blank";
                    panelWork.Controls.Add(hLink);
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelFoto_c";
                    lBtn.ToolTip = "удалить ссылку";
                    lBtn.CommandArgument = res[0] + "|" + sessionName;
                    lBtn.Command += lBtn_DelLink_Common;
                    lBtn.OnClientClick = "return pageReady()";
                    panelWork.Controls.Add(lBtn);
                    panel.Controls.Add(panelWork);

                    //Panel panelVideo = new Panel(); panelVideo.CssClass = "divVideo_c"; panelVideo.ID = "panelVideo_" + counterv;
                    //panelVideo.Controls.Add(new LiteralControl("<iframe width='250' height='150' src='" + res[0] + "' frameborder='0' allowfullscreen></iframe>"));
                    //panelWork.Controls.Add(panelVideo);
                    //lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelFoto_c";
                    //lBtn.ToolTip = "удалить ссылку на видео";
                    //lBtn.CommandArgument = res[0];
                    //lBtn.Command += lBtn_DelLink_Common;
                    //lBtn.OnClientClick = "return pageReady()";
                    //panelWork.Controls.Add(lBtn);
                    //panel.Controls.Add(panelWork);

                }
                res = CompetitionsWork.transformYandexDiskLink(link);
                if (res[0] != "")
                {
                    HyperLink hLink = new HyperLink(); hLink.CssClass = "hLink_c";
                    hLink.NavigateUrl = res[0];
                    hLink.Text = "ссылка на ЯНДЕКС ДИСК";
                    hLink.Target = "_blank";
                    panelWork.Controls.Add(hLink);
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelFoto_c";
                    lBtn.ToolTip = "удалить ссылку";
                    lBtn.CommandArgument = res[0] + "|" + sessionName;
                    lBtn.Command += lBtn_DelLink_Common;
                    lBtn.OnClientClick = "return pageReady()";
                    panelWork.Controls.Add(lBtn);
                    panel.Controls.Add(panelWork);
                }
                counterv++;
            }

            panelResult.Controls.Add(panel);
        }

        #region События

        #region lBtn_AddLink_Common

        /// <summary>Нажатие на кнопку ДОБАВИТЬ ссылку на видео</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddLink_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var fileName = ((TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_youtubeLinkXI")).Text.Trim();
            var sessionName = args[1];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Проверка является ли ссылка Rutube или ссылкой на YandexDisk

            string[] res = CompetitionsWork.transformRutubeLink(fileName);
            string[] res1 = CompetitionsWork.transformYandexDiskLink(fileName);
            if (res[1] != "" && res1[1] != "")
            {
                lbl.Text = res[1] + " ИЛИ " + res1[1];
                panelWarn.Controls.Add(lbl);
                return;
            }
            else
            {
                if (res[0] != "")
                    fileName = res[0];
                if (res1[0] != "")
                    fileName = res1[0];
            }

            #endregion

            #region Ограничение на загрузку двух роликов

            if (((CompetitionRequest)_context.Session[sessionName]) != null)
            {
                var linksNeeded = 0;
                foreach (var lnk in ((CompetitionRequest)_context.Session[sessionName]).Links.Where(x => x.ToLower().StartsWith("http://") || x.ToLower().StartsWith("https://")))
                {
                    string[] rutube = CompetitionsWork.transformRutubeLink(lnk);
                    string[] yandex = CompetitionsWork.transformYandexDiskLink(lnk);
                    if (rutube[0] != "")
                    {
                        //проверка на дубль ссылки rutube
                        if (res[0] != "") {
                            linksNeeded = 2;
                            break;
                        }
                        linksNeeded += 1;
                    }
                    if (yandex[0] != "")
                    {
                        //проверка на дубль ссылки yandex
                        if (res1[0] != "")
                        {
                            linksNeeded = 2;
                            break;
                        }
                        linksNeeded += 1;
                    }
                }

                if (linksNeeded == 2)
                {
                    lbl.Text = "Вы можете загрузить только одну ссылку на ролик RUTUBE и одну ссылку на ЯНДЕКС ДИСК!<br/>Если вы хотите заменить загруженную ссылку, сначала удалите её, а затем добавьте новую."; 
                    panelWarn.Controls.Add(lbl);
                    return;
                }
            }
            else
            {
                lbl.Text = "Работа с сессией прервана, зайдите на страницу добавления заявки повторно!";
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            #region Добавление ссылки во временный список

            try
            {
                #region Код

                ((CompetitionRequest)_context.Session[sessionName]).Links.Add(fileName); // добавляем в список

                // для сохранения значений в сессии
                FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);

                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);
                return;

                #endregion
            }

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtn_DelLink_Common

        /// <summary>Нажатие на кнопку КРЕСТИК-УДАЛЕНИЕ ссылки на видео</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит имя файла картинки с расширением и сессию</param>
        private void lBtn_DelLink_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var fileName = args[0];
            var sessionName = args[1];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Удаляем имя файла из сессионной переменной

            try
            {
                ((CompetitionRequest)_context.Session[sessionName]).Links.Remove(fileName); // удаляем из списка
                // сохранение значения полей при перезагрузке страницы 
                FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #region Content_ClearRequest_Common
        public void Content_ClearRequest_Common(ref Panel panel, ref CompetitionRequest req)
        {
            string sessionName = EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName);

            var lBtn = new LinkButton(); lBtn.CssClass = "lBtnClearRequest_c";
            lBtn.Text = "ОЧИСТИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_ClearRequest_Common;
            lBtn.CommandArgument = sessionName;
            panel.Controls.Add(lBtn);
        }
        #region lBtn_ClearRequest_Common

        /// <summary>Нажатие на кнопку очистить заявку</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит имя файла картинки с расширением и сессию</param>
        private void lBtn_ClearRequest_Common(object sender, CommandEventArgs e)
        {
            var sessionName = e.CommandArgument.ToString();

            #region Удаляем имя файла из сессионной переменной

            try
            {
                _context.Session[sessionName] = null;
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
               
                return;
            }

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #region ShowLinkInPanelResult

        private void ShowLinkInPanelResult(ref Panel panelReqContent, string link)
        {
            string[] res = CompetitionsWork.transformRutubeLink(link);
            string[] res1 = CompetitionsWork.transformYandexDiskLink(link);
   
            if (!string.IsNullOrEmpty(res[0]))
            {
                panelReqContent.Controls.Add(new LiteralControl("<a href='" + res[0] + "' target='_blank'><span class='rutube_vc'></span></a>"));
            }
            else if (!string.IsNullOrEmpty(res1[0])) 
            {
                panelReqContent.Controls.Add(new LiteralControl("<a href='" + res1[0] + "' target='_blank'><span class='yandexdisk_vc'></span></a>"));
            }
        }

        #endregion

        #endregion

        #endregion

        #region Content_VkontakteLink_Common
        public void Content_VkontakteLink_Common(ref Panel panelResult, ref CompetitionRequest req)
        {
            string sessionName = EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName);

            var panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Добавьте ссылку на публикацию со своей работой.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Для этого вам необходимо разместить пост в социальной сети Vkontakte.<br/>" +
                "&nbsp;&nbsp;&nbsp;&nbsp; 1. Нажмите на кнопку 'Поделиться' на размещенном публичном посте, в появившейся форме нажмите на вкладку 'Экспортировать'.<br/>" +
                "&nbsp;&nbsp;&nbsp;&nbsp; 2. Скопируйте ссылку на публикацию (содержимое url-строки в поле 'Прямая ссылка').<br/><br/>" +
                "Cкопированную ссылку (строку) вставьте в поле слева от кнопки 'ДОБАВИТЬ' в заявке. Затем нажмите на кнопку 'ДОБАВИТЬ'.<br/><br/>" +
                "Должна появиться ссылка с публикацией ниже кнопки 'ДОБАВИТЬ'! Если ссылка не появилась, проверьте правильность скопированной ссылки и повторите всё заново.</p>"));

            panel.Controls.Add(new LiteralControl("<span class='subThemeTitle_c'>Ссылка на публикакцию Vkontakte</span>"));

            var txtBox = new TextBox(); txtBox.CssClass = "txtBox_c txtBoxLink_c placeHolderForm_c"; txtBox.Width = 200;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ID = "txtBox_vkontakteLinkXI"; txtBox.MaxLength = 100;
            panel.Controls.Add(txtBox);

            var lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddFoto_c";
            lBtn.Text = "ДОБАВИТЬ";
            lBtn.ToolTip = "Загружайте ссылку на пуликацию, размещённую в Vkontakte";
            lBtn.CommandArgument = "|" + sessionName;
            lBtn.Command += lBtn_AddVkontakteLink_Common;
            lBtn.OnClientClick = "return pageReady()";
            panel.Controls.Add(lBtn);

            Panel panelWork = new Panel();                                      // панель со ссылками на фото (картинки)
            panelWork.CssClass = "divWork_c"; panelWork.ID = "panelWorks_c_vkontakte";
            int counterv = 1;

            foreach (string link in req.Links.Where(x => x.ToLower().StartsWith("http://") || x.ToLower().StartsWith("https://")))      // алгоритм изначально задуман на добавление множества ссылок на видео!!! Ограничение установлено в событии - lBtn_AddLink
            {
                string[] res = CompetitionsWork.transformVkontakteLink(link);
                //string[] res = CompetitionsWork.transformYoutubeLink(link);
                if (res[0] != "")
                {
                    HyperLink hLink = new HyperLink(); hLink.CssClass = "hLink_c";
                    hLink.NavigateUrl = res[0];
                    hLink.Text = "ссылка на Vkontakte";
                    hLink.Target = "_blank";
                    panelWork.Controls.Add(hLink);
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelFoto_c";
                    lBtn.ToolTip = "удалить ссылку";
                    lBtn.CommandArgument = res[0] + "|" + sessionName;
                    lBtn.Command += lBtn_DelVkontakteLink_Common;
                    lBtn.OnClientClick = "return pageReady()";
                    panelWork.Controls.Add(lBtn);
                    panel.Controls.Add(panelWork);

                }
                counterv++;
            }

            panelResult.Controls.Add(panel);
        }

        #region События

        #region lBtn_AddVkontakteLink_Common

        /// <summary>Нажатие на кнопку ДОБАВИТЬ ссылку на видео</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddVkontakteLink_Common(object sender, CommandEventArgs e)
        {

            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var fileName = ((TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_vkontakteLinkXI")).Text.Trim();
            var sessionName = args[1];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Проверка является ли ссылка Vkontakte

            string[] res = CompetitionsWork.transformVkontakteLink(fileName);
            if (res[1] != "")
            {
                lbl.Text = res[1];
                panelWarn.Controls.Add(lbl);
                return;
            }
            
            #endregion

            #region Ограничение на загрузку двух роликов

            if (((CompetitionRequest)_context.Session[sessionName]) != null)
            {
                var linksNeeded = 0;
                foreach (var lnk in ((CompetitionRequest)_context.Session[sessionName]).Links.Where(x => x.ToLower().StartsWith("http://") || x.ToLower().StartsWith("https://")))
                {
                    string[] rutube = CompetitionsWork.transformVkontakteLink(lnk);
                    if (rutube[0] != "")
                    {
                        //проверка на дубль ссылки rutube
                        if (res[0] != "")
                        {
                            linksNeeded = 1;
                            break;
                        }
                    }
                }

                if (linksNeeded == 1)
                {
                    lbl.Text = "Вы можете загрузить только одну ссылку на публикацию Вконтакте!<br/>Если вы хотите заменить загруженную ссылку, сначала удалите её, а затем добавьте новую.";
                    panelWarn.Controls.Add(lbl);
                    return;
                }
            }
            else
            {
                lbl.Text = "Работа с сессией прервана, зайдите на страницу добавления заявки повторно!";
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            #region Добавление ссылки во временный список

            try
            {
                #region Код

                ((CompetitionRequest)_context.Session[sessionName]).Links.Add(fileName); // добавляем в список

                // для сохранения значений в сессии
                FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);

                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);
                return;

                #endregion
            }

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtn_DelVkontakteLink_Common

        /// <summary>Нажатие на кнопку КРЕСТИК-УДАЛЕНИЕ ссылки на видео</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит имя файла картинки с расширением и сессию</param>
        private void lBtn_DelVkontakteLink_Common(object sender, CommandEventArgs e)
        {

            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var fileName = args[0];
            var sessionName = args[1];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Удаляем имя файла из сессионной переменной

            try
            {
                ((CompetitionRequest)_context.Session[sessionName]).Links.Remove(fileName); // удаляем из списка
                // сохранение значения полей при перезагрузке страницы 
                FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!"; 
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion

        #region Content_Presentaion_Common
        public void Content_Presentaion_Common(ref Panel panelResult, ref CompetitionRequest req, string folderName, string imgUrl)
        {
            string sessionName = EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName);

            var panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Добавьте <strong>файл со своей работой</strong>.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Для этого нажмите на кнопку 'ОБЗОР', в появившемся окне выберите один файл с документом со своего жёсткого диска. Затем нажмите на кнопку 'ДОБАВИТЬ'. </p></br>"));
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'><span class='span_red_c'> Обратите внимание!!!</span> Для всех номинаций конкурса допускается добавление только одного файла с работой. " +
                "Допускается добавление только файлов в формате <strong>PPT, PPTX размером не более 10 мегабайт</strong>.<br/><strong>Во избежание проблем при загрузке файла не используйте символы пунктуации в названии файла</strong>.</p>"));
            FileUpload fUpload = new FileUpload(); fUpload.CssClass = "fUpload_c"; fUpload.ID = "ppt_fUpload";
            fUpload.ToolTip = "Загружайте файл в формате PPT, PPTX размером не более 10 мегабайт";
            panel.Controls.Add(fUpload);

            var lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddFoto_c";
            lBtn.Text = "ДОБАВИТЬ";
            lBtn.ToolTip = "Загружайте файл в формате PPT, PPTX размером не более 10 мегабайт";
            lBtn.Command += lBtn_AddFile_Presentaion_Common;
            lBtn.CommandArgument = folderName + "|" + sessionName;
            lBtn.OnClientClick = "waiting('Обработка файла. Подождите..', 0); return pageReady();";

            panel.Controls.Add(lBtn);

            var panelWork = new Panel();                                      // панель со ссылками на презентации (картинки)
            panelWork.CssClass = "divWork_c"; panelWork.ID = "panelWorks_c_presentation";

            var counter = 1;
            foreach (string fileName in req.Links.Where(x => x.ToLower().EndsWith("ppt") || x.ToLower().EndsWith("pptx")))
            {
                HyperLink hLink = new HyperLink(); hLink.CssClass = "hLink_c";
                hLink.NavigateUrl = imgUrl + fileName;
                hLink.Text = "ссылка на файл " + counter;
                panelWork.Controls.Add(hLink);
                lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelFoto_c";
                lBtn.ToolTip = "удалить файл";
                lBtn.CommandArgument = folderName + "|" + sessionName + "|" + fileName;
                lBtn.Command += lBtn_DelFile_Presentaion_Common;
                lBtn.OnClientClick = "return pageReady()";
                panelWork.Controls.Add(lBtn);
                counter++;
            }

            panel.Controls.Add(panelWork);

            panelResult.Controls.Add(panel);
        }

        #region События

        #region lBtn_AddFile_Presentaion_Common

        /// <summary>Нажатие на кнопку ДОБАВИТЬ файл</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddFile_Presentaion_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            FileUpload fUpload = (FileUpload)_pag.FindControl("ctl00$ContentPlaceHolder1$ppt_fUpload");
            if (fUpload != null)
            {
                if (fUpload.HasFile)
                {
                    string fileName = _pag.Server.HtmlEncode(fUpload.FileName);
                    string extension = Path.GetExtension(fileName);

                    //проверка на допустимые расширения закачиваемого файла
                    if (extension != null && ((extension.ToLower() == ".ppt") || (extension.ToLower() == ".pptx")))
                    {

                        #region Ограничение на загрузку кол-ва работ

                        if (((CompetitionRequest)_context.Session[sessionName]) != null)
                        {
                            var linksNeeded = ((CompetitionRequest)_context.Session[sessionName]).Links.Where(x => x.ToLower().EndsWith("ppt") || x.ToLower().EndsWith("pptx")).Count();

                            if (linksNeeded >= 1)
                            {
                                lbl.Text = "Вы можете загрузить только " + "1".ToString() + " файла(ов) изображения в формате PPT, PPTX!<br/>Если вы хотите заменить загруженный файл, сначала удалите его, а затем добавьте новый.";
                                panelWarn.Controls.Add(lbl);
                                return;
                            }
                        }
                        else
                        {
                            lbl.Text = "Работа с сессией прервана, зайдите на страницу добавления заявки повторно!";
                            panelWarn.Controls.Add(lbl);
                            return;
                        }

                        #endregion

                        int fileSize = fUpload.PostedFile.ContentLength;
                        //10Мб
                        if (fileSize < 10485760)                              //проверка на допустимый размер закачиваемого файла
                        {
                            #region Код сохранения файла на серевер

                            //создадим имя для файла картинки
                            Random rn = new Random();
                            string fName = DateTime.Now.ToString("yyyyMMdd_HHmmssffff") + "_" + rn.Next(999999) + extension;

                            //сохраним файл в папку с файлами для конкурсных работ (у каждого конкурса своя папка)
                            try
                            {
                                fUpload.SaveAs(folderName + fName);
                                fUpload.Dispose();
                            }
                            catch (Exception ex)
                            {
                                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                                lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!"; 
                                panelWarn.Controls.Add(lbl);
                                return;
                            }

                            #region Добавление имени файла во временный список

                            try
                            {
                                if (((CompetitionRequest)_context.Session[sessionName]) != null)
                                {
                                    ((CompetitionRequest)_context.Session[sessionName]).Links.Add(fName); // добавляем в список

                                    // для сохранения значений в сессии
                                    FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);
                                }
                            }
                            catch (Exception ex)
                            {
                                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                                lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!"; 
                                panelWarn.Controls.Add(lbl);
                                return;
                            }

                            #endregion

                            #endregion
                        }
                        else { 
                            lbl.Text = "Допускаются только файлы размером не более 10 мегабайт"; 
                            panelWarn.Controls.Add(lbl);
                            return;
                        }
                    }
                    else
                    {
                        lbl.Text = "Допускаются только файлы в формате PPT, PPTX";
                        panelWarn.Controls.Add(lbl);
                        return;
                    }
                }
                else { 
                    lbl.Text = "Сначала выберите файл через кнопку 'ОБЗОР'"; 
                    panelWarn.Controls.Add(lbl); 
                    return; 
                }
            }

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtn_DelFile_Presentaion_Common

        /// <summary>Нажатие на кнопку КРЕСТИК-УДАЛЕНИЕ файла с материалами работы</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит имя файла с расширением</param>
        private void lBtn_DelFile_Presentaion_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];
            var fileName = args[2];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Удаляем имя файла из сессионной переменной

            try
            {
                ((CompetitionRequest)_context.Session[sessionName]).Links.Remove(fileName); // удаляем из списка
                // для сохранения значений в сессии
                FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!"; 
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            #region Удаляем файл с диска

            try
            {
                if (File.Exists(folderName + fileName))
                    File.Delete(folderName + fileName);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!"; 
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion

        #region Content_Image_Common
        public void Content_Image_Common(ref Panel panelResult, ref CompetitionRequest req, string folderName, string imgUrl, int countFiles = 1)
        {
            string sessionName = EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName);

            var panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Добавьте свою работу.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Для этого нажмите на кнопку 'ОБЗОР', в появившемся окне выберите один файл с изображением со своего жёсткого диска. Затем нажмите на кнопку 'ДОБАВИТЬ'. " +
                                                  "Обратите внимание, что допускается добавление только " + countFiles.ToString() + " файла(ов) изображения в формате JPG, JPEG и PNG размером не более 2-х мегабайт каждая.</p>"));
            FileUpload fUpload = new FileUpload(); fUpload.CssClass = "fUpload_c"; fUpload.ID = "image_fUpload";
            fUpload.ToolTip = "Загружайте изображение в формате JPG, JPEG и PNG размером не более 2-х мегабайт";
            panel.Controls.Add(fUpload);

            var lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddFoto_c";
            lBtn.Text = "ДОБАВИТЬ";
            lBtn.ToolTip = "Загружайте изображение в формате JPG, JPEG  и PNG размером не более 2-х мегабайт";
            lBtn.Command += lBtn_AddFile_Image_Common;
            lBtn.CommandArgument = folderName + "|" + sessionName + "|" + countFiles.ToString();
            lBtn.OnClientClick = "waiting('Обработка файла. Подождите..', 0); return pageReady();";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку
            
            panel.Controls.Add(lBtn);

            //панель со ссылками на картинки
            var panelWork = new Panel();                                      
            panelWork.CssClass = "divWork_c"; panelWork.ID = "panelWorks_c_image";

            Image img = new Image();
            foreach (string fileName in req.Links.Where(x => x.ToLower().EndsWith("jpg") || x.ToLower().EndsWith("jpeg") || x.ToLower().EndsWith("png")))
            {
                img = new Image(); img.CssClass = "img_c";
                img.ImageUrl = imgUrl + fileName;
                panelWork.Controls.Add(img);
                lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelFoto_c";
                lBtn.ToolTip = "удалить файл";
                lBtn.CommandArgument = folderName + "|" + sessionName + "|" + fileName;
                lBtn.Command += lBtn_DelFile_Image_Common;
                //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку
                lBtn.OnClientClick = "return pageReady()";
                panelWork.Controls.Add(lBtn);
            }

            panel.Controls.Add(panelWork);

            panelResult.Controls.Add(panel);
        }

        #region События

        #region lBtn_AddFile_Image_Common

        /// <summary>Нажатие на кнопку ДОБАВИТЬ файл</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddFile_Image_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];
            var countFiles = int.Parse(args[2]);

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            FileUpload fUpload = (FileUpload)_pag.FindControl("ctl00$ContentPlaceHolder1$image_fUpload");
            if (fUpload != null)
            {
                if (fUpload.HasFile)
                {
                    string fileName = _pag.Server.HtmlEncode(fUpload.FileName);
                    string extension = Path.GetExtension(fileName);

                    //проверка на допустимые расширения закачиваемого файла
                    if (extension != null && ((extension.ToLower() == ".jpg") || (extension.ToLower() == ".jpeg") || (extension.ToLower() == ".png")))
                    {
                        #region Ограничение на загрузку кол-ва работ

                        if (((CompetitionRequest)_context.Session[sessionName]) != null)
                        {
                            var linksNeeded = ((CompetitionRequest)_context.Session[sessionName]).Links.Where(x => x.ToLower().EndsWith("jpg") || x.ToLower().EndsWith("jpeg") || x.ToLower().EndsWith("png")).Count();
                            
                            if (linksNeeded >= countFiles)
                            {
                                lbl.Text = "Вы можете загрузить только " + countFiles.ToString() + " файла(ов) изображения в формате JPG, JPEG, PNG!<br/>Если вы хотите заменить загруженный файл, сначала удалите его, а затем добавьте новый.";
                                panelWarn.Controls.Add(lbl);
                                return;
                            }
                        }
                        else
                        {
                            lbl.Text = "Работа с сессией прервана, зайдите на страницу добавления заявки повторно!";
                            panelWarn.Controls.Add(lbl);
                            return;
                        }

                        #endregion

                        int fileSize = fUpload.PostedFile.ContentLength;
                        //2Мб
                        if (fileSize <= 2097152)                              //проверка на допустимый размер закачиваемого файла
                        {
                            #region Код сохранения файла на серевер

                            //создадим имя для файла картинки
                            Random rn = new Random();
                            string fName = DateTime.Now.ToString("yyyyMMdd_HHmmssffff") + "_" + rn.Next(999999) + extension;

                            //сохраним файл в папку с файлами для конкурсных работ (у каждого конкурса своя папка)
                            try
                            {
                                fUpload.SaveAs(folderName + fName);
                                fUpload.Dispose();
                            }
                            catch (Exception ex)
                            {
                                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                                lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!"; 
                                panelWarn.Controls.Add(lbl);
                                return;
                            }

                            #region Добавление имени файла во временный список

                            try
                            {
                                if (((CompetitionRequest)_context.Session[sessionName]) != null)
                                {
                                    ((CompetitionRequest)_context.Session[sessionName]).Links.Add(fName); // добавляем в список

                                    // для сохранения значений в сессии
                                    FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);
                                }
                            }
                            catch (Exception ex)
                            {
                                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                                lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!"; 
                                panelWarn.Controls.Add(lbl);
                                return;
                            }

                            #endregion

                            #endregion
                        }
                        else { 
                            lbl.Text = "Допускаются только файлы размером не более 2-х мегабайт"; 
                            panelWarn.Controls.Add(lbl);
                            return;
                        }
                    }
                    else
                    {
                        lbl.Text = "Допускаются только файлы в формате JPG, JPEG, PNG";
                        panelWarn.Controls.Add(lbl);
                        return;
                    }
                }
                else { 
                    lbl.Text = "Сначала выберите файл через кнопку 'ОБЗОР'"; 
                    panelWarn.Controls.Add(lbl);
                    return;
                }
            }

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtn_DelFile_Image_Common

        /// <summary>Нажатие на кнопку КРЕСТИК-УДАЛЕНИЕ файла с материалами работы</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит имя файла с расширением</param>
        private void lBtn_DelFile_Image_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];
            var fileName = args[2];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Удаляем имя файла из сессионной переменной

            try
            {
                ((CompetitionRequest)_context.Session[sessionName]).Links.Remove(fileName); // удаляем из списка
                // для сохранения значений в сессии
                FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!"; 
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            #region Удаляем файл с диска

            try
            {
                if (File.Exists(folderName + fileName))
                    File.Delete(folderName + fileName);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!"; 
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion

        #region Content_DocRar_Common
        public void Content_DocRar_Common(ref Panel panelResult, ref CompetitionRequest req, string folderName, string imgUrl)
        {
            string sessionName = EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName);

            var panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Добавьте <strong>файл со своей работой</strong>.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Для этого нажмите на кнопку 'ОБЗОР', в появившемся окне выберите один файл с документом со своего жёсткого диска. Затем нажмите на кнопку 'ДОБАВИТЬ'. </p></br>"));

            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'><span class='span_red_c'> Обратите внимание!!!</span> Для всех номинаций конкурса допускается добавление только одного файла с работой в формате <strong>DOC, DOCX</strong>. Для добавления 2 и более файлов добавьте материалы в архив в формате <strong>ZIP, RAR</strong>. Общий размер файла <strong>не более 10 мегабайт.</strong>" +
            "<br/><strong>Во избежание проблем при загрузке файла не используйте символы пунктуации в названии файла</strong>.</p>"));

            FileUpload fUpload = new FileUpload(); fUpload.CssClass = "fUpload_c"; fUpload.ID = "docrar_fUpload";
            fUpload.ToolTip = "Загружайте файл в формате DOC, DOCX, ZIP, RAR размером не более 10 мегабайт";
            panel.Controls.Add(fUpload);

            var lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddFoto_c";
            lBtn.Text = "ДОБАВИТЬ";
            lBtn.ToolTip = "Загружайте изображение в формате DOC, DOCX, ZIP, RAR размером не более 10 мегабайт";
            lBtn.Command += lBtn_AddFile_DocRar_Common;
            lBtn.CommandArgument = folderName + "|" + sessionName;
            lBtn.OnClientClick = "waiting('Обработка файла. Подождите..', 0); return pageReady();";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку

            panel.Controls.Add(lBtn);

            //панель со ссылками на документы
            var panelWork = new Panel();
            panelWork.CssClass = "divWork_c"; panelWork.ID = "panelWorks_c_docrar";

            var counter = 0;
            foreach (string fileName in req.Links.Where(x => x.ToLower().EndsWith("doc") || x.ToLower().EndsWith("docx") || x.ToLower().EndsWith("zip") || x.ToLower().EndsWith("rar")))
            {
                HyperLink hLink = new HyperLink(); hLink.CssClass = "hLink_c";
                hLink.NavigateUrl = imgUrl + fileName;
                hLink.Text = "ссылка на файл " + counter;
                panelWork.Controls.Add(hLink);
                lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelFoto_c";
                lBtn.ToolTip = "удалить файл";
                lBtn.CommandArgument = folderName + "|" + sessionName + "|" + fileName;
                lBtn.Command += lBtn_DelFile_DocRar_Common;
                lBtn.OnClientClick = "return pageReady()";
                panelWork.Controls.Add(lBtn);
                counter++;
            }

            panel.Controls.Add(panelWork);

            panelResult.Controls.Add(panel);
        }

        #region События

        #region lBtn_AddFile_DocRar_Common

        /// <summary>Нажатие на кнопку ДОБАВИТЬ файл</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddFile_DocRar_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            FileUpload fUpload = (FileUpload)_pag.FindControl("ctl00$ContentPlaceHolder1$docrar_fUpload");
            if (fUpload != null)
            {
                if (fUpload.HasFile)
                {
                    string fileName = _pag.Server.HtmlEncode(fUpload.FileName);
                    string extension = Path.GetExtension(fileName);

                    //проверка на допустимые расширения закачиваемого файла
                    if (extension != null && ((extension.ToLower() == ".doc") || (extension.ToLower() == ".docx") || (extension.ToLower() == ".zip") || (extension.ToLower() == ".rar")))
                    {
                        #region Ограничение на загрузку кол-ва работ

                        if (((CompetitionRequest)_context.Session[sessionName]) != null)
                        {
                            var linksNeeded = ((CompetitionRequest)_context.Session[sessionName]).Links.Where(x => x.ToLower().EndsWith("doc") || x.ToLower().EndsWith("docx") || x.ToLower().EndsWith("zip") || x.ToLower().EndsWith("rar")).Count();

                            if (linksNeeded >= 1)
                            {
                                lbl.Text = "Вы можете загрузить только " + "1".ToString() + " файла(ов) изображения в формате DOC, DOCX, ZIP, RAR!<br/>Если вы хотите заменить загруженный файл, сначала удалите его, а затем добавьте новый.";
                                panelWarn.Controls.Add(lbl);
                                return;
                            }
                        }
                        else
                        {
                            lbl.Text = "Работа с сессией прервана, зайдите на страницу добавления заявки повторно!";
                            panelWarn.Controls.Add(lbl);
                            return;
                        }

                        #endregion

                        int fileSize = fUpload.PostedFile.ContentLength;
                        //2Мб
                        if (fileSize <= 10485760)                              //проверка на допустимый размер закачиваемого файла
                        {
                            #region Код сохранения файла на серевер

                            //создадим имя для файла картинки
                            Random rn = new Random();
                            string fName = DateTime.Now.ToString("yyyyMMdd_HHmmssffff") + "_" + rn.Next(999999) + extension;

                            //сохраним файл в папку с файлами для конкурсных работ (у каждого конкурса своя папка)
                            try
                            {
                                fUpload.SaveAs(folderName + fName);
                                fUpload.Dispose();
                            }
                            catch (Exception ex)
                            {
                                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                                lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!"; 
                                panelWarn.Controls.Add(lbl);
                                return;
                            }

                            #region Добавление имени файла во временный список

                            try
                            {
                                if (((CompetitionRequest)_context.Session[sessionName]) != null)
                                {
                                    ((CompetitionRequest)_context.Session[sessionName]).Links.Add(fName); // добавляем в список

                                    // для сохранения значений в сессии
                                    FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);
                                }
                            }
                            catch (Exception ex)
                            {
                                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                                lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!"; 
                                panelWarn.Controls.Add(lbl);
                                return;
                            }

                            #endregion

                            #endregion
                        }
                        else
                        {
                            lbl.Text = "Допускаются только файлы размером не более 10 мегабайт";
                            panelWarn.Controls.Add(lbl);
                            return;
                        }
                    }
                    else
                    {
                        lbl.Text = "Допускаются только файлы в формате DOC, DOCX, ZIP, RAR";
                        panelWarn.Controls.Add(lbl);
                        return;
                    }
                }
                else
                {
                    lbl.Text = "Сначала выберите файл через кнопку 'ОБЗОР'";
                    panelWarn.Controls.Add(lbl);
                    return;
                }
            }

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtn_DelFile_DocRar_Common

        /// <summary>Нажатие на кнопку КРЕСТИК-УДАЛЕНИЕ файла с материалами работы</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит имя файла с расширением</param>
        private void lBtn_DelFile_DocRar_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];
            var fileName = args[2];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Удаляем имя файла из сессионной переменной

            try
            {
                ((CompetitionRequest)_context.Session[sessionName]).Links.Remove(fileName); // удаляем из списка
                // для сохранения значений в сессии
                FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!"; 
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            #region Удаляем файл с диска

            try
            {
                if (File.Exists(folderName + fileName))
                    File.Delete(folderName + fileName);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!"; 
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion

        #region Content_Audio_Common
        public void Content_Audio_Common(ref Panel panelResult, ref CompetitionRequest req, string folderName, string imgUrl, int countFiles = 1)
        {
            string sessionName = EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName);

            var panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Добавьте свою работу.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Для этого нажмите на кнопку 'ОБЗОР', в появившемся окне выберите один аудио файл со своего жёсткого диска. Затем нажмите на кнопку 'ДОБАВИТЬ'. " +
                                                  "Обратите внимание, что допускается добавление только " + countFiles.ToString() + " файла(ов) аудио в формате MP3 размером не более 10 мегабайт каждая.</p>"));
            FileUpload fUpload = new FileUpload(); fUpload.CssClass = "fUpload_c"; fUpload.ID = "audio_fUpload";
            fUpload.ToolTip = "Загружайте аудио файлы в формате MP3 размером не более 10 мегабайт";
            panel.Controls.Add(fUpload);

            var lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddFoto_c";
            lBtn.Text = "ДОБАВИТЬ";
            lBtn.ToolTip = "Загружайте аудио файлы в формате MP3 размером не более 10 мегабайт";
            lBtn.Command += lBtn_AddFile_Audio_Common;
            lBtn.CommandArgument = folderName + "|" + sessionName + "|" + countFiles.ToString();
            lBtn.OnClientClick = "waiting('Обработка файла. Подождите..', 0); return pageReady();";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку

            panel.Controls.Add(lBtn);

            //панель со ссылками на картинки
            var panelWork = new Panel();
            panelWork.CssClass = "divWork_c"; panelWork.ID = "panelWorks_c_audio";

            var counter = 1;
            foreach (string fileName in req.Links.Where(x => x.ToLower().EndsWith("mp3")))
            {
                Panel panelAudio = new Panel(); panelAudio.ID = "panelAudio_" + counter;
                panelWork.Controls.Add(panelAudio);
                Image img = new Image(); img.CssClass = "img_c"; img.ImageUrl = "/images/mp3.png";
                panelAudio.Controls.Add(img);
                lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelFoto_c";
                lBtn.ToolTip = "удалить песню";
                lBtn.CommandArgument = folderName + "|" + sessionName + "|" + fileName;
                lBtn.Command += lBtn_DelFile_Audio_Common;
                lBtn.OnClientClick = "return pageReady()";
                panelAudio.Controls.Add(lBtn);
                panel.Controls.Add(panelAudio);
                counter++;
            }

            panel.Controls.Add(panelWork);

            panelResult.Controls.Add(panel);
        }

        #region События

        #region lBtn_AddFile_Audio_Common

        /// <summary>Нажатие на кнопку ДОБАВИТЬ файл</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddFile_Audio_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];
            var countFiles = int.Parse(args[2]);

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            FileUpload fUpload = (FileUpload)_pag.FindControl("ctl00$ContentPlaceHolder1$audio_fUpload");
            if (fUpload != null)
            {
                if (fUpload.HasFile)
                {
                    string fileName = _pag.Server.HtmlEncode(fUpload.FileName);
                    string extension = Path.GetExtension(fileName);

                    //проверка на допустимые расширения закачиваемого файла
                    if (extension != null && ((extension.ToLower() == ".mp3")))
                    {
                        #region Ограничение на загрузку кол-ва работ

                        if (((CompetitionRequest)_context.Session[sessionName]) != null)
                        {
                            var linksNeeded = ((CompetitionRequest)_context.Session[sessionName]).Links.Where(x => x.ToLower().EndsWith("mp3")).Count();

                            if (linksNeeded >= countFiles)
                            {
                                lbl.Text = "Вы можете загрузить только " + countFiles.ToString() + " файла(ов) аудио в формате MP3!<br/>Если вы хотите заменить загруженный файл, сначала удалите его, а затем добавьте новый.";
                                panelWarn.Controls.Add(lbl);
                                return;
                            }
                        }
                        else
                        {
                            lbl.Text = "Работа с сессией прервана, зайдите на страницу добавления заявки повторно!";
                            panelWarn.Controls.Add(lbl);
                            return;
                        }

                        #endregion

                        int fileSize = fUpload.PostedFile.ContentLength;
                        //10Мб
                        if (fileSize <= 10485760)                              //проверка на допустимый размер закачиваемого файла
                        {
                            #region Код сохранения файла на серевер

                            //создадим имя для файла картинки
                            Random rn = new Random();
                            string fName = DateTime.Now.ToString("yyyyMMdd_HHmmssffff") + "_" + rn.Next(999999) + extension;

                            //сохраним файл в папку с файлами для конкурсных работ (у каждого конкурса своя папка)
                            try
                            {
                                fUpload.SaveAs(folderName + fName);
                                fUpload.Dispose();
                            }
                            catch (Exception ex)
                            {
                                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                                lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!";
                                panelWarn.Controls.Add(lbl);
                                return;
                            }

                            #region Добавление имени файла во временный список

                            try
                            {
                                if (((CompetitionRequest)_context.Session[sessionName]) != null)
                                {
                                    ((CompetitionRequest)_context.Session[sessionName]).Links.Add(fName); // добавляем в список

                                    // для сохранения значений в сессии
                                    FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);
                                }
                            }
                            catch (Exception ex)
                            {
                                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                                lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!";
                                panelWarn.Controls.Add(lbl);
                                return;
                            }

                            #endregion

                            #endregion
                        }
                        else
                        {
                            lbl.Text = "Допускаются только файлы размером не более 10 мегабайт";
                            panelWarn.Controls.Add(lbl);
                            return;
                        }
                    }
                    else
                    {
                        lbl.Text = "Допускаются только файлы в формате MP3";
                        panelWarn.Controls.Add(lbl);
                        return;
                    }
                }
                else
                {
                    lbl.Text = "Сначала выберите файл через кнопку 'ОБЗОР'";
                    panelWarn.Controls.Add(lbl);
                    return;
                }
            }

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtn_DelFile_Audio_Common

        /// <summary>Нажатие на кнопку КРЕСТИК-УДАЛЕНИЕ файла с материалами работы</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит имя файла с расширением</param>
        private void lBtn_DelFile_Audio_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];
            var fileName = args[2];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Удаляем имя файла из сессионной переменной

            try
            {
                ((CompetitionRequest)_context.Session[sessionName]).Links.Remove(fileName); // удаляем из списка
                // для сохранения значений в сессии
                FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!";
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            #region Удаляем файл с диска

            try
            {
                if (File.Exists(folderName + fileName))
                    File.Delete(folderName + fileName);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!";
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion

        #region Content_AddProtocol_Common
        public void Content_AddProtocol_Common(ref Panel panelResult, ref CompetitionRequest req, bool needToShowParticipantsCount = false)
        {
            string sessionName = EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName);
            
            var panel = new Panel(); panel.CssClass = "panelSub_c";

            Content_FileProtocolComment_Common(ref panel);

            panel.Controls.Add(new LiteralControl("<br />"));
            panel.Controls.Add(new LiteralControl("<span class='subThemeTitle_protocolFile'>Протокол I-го тура в формате PDF</span>"));

            var fUpload = new FileUpload(); fUpload.CssClass = "fUpload_c"; fUpload.ID = "protocolUpload";
            fUpload.ToolTip = "Загружайте файл в формате PDF размером не более 2-x мегабайт";
            panel.Controls.Add(fUpload);

            var lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddFoto_c";
            lBtn.Text = "ДОБАВИТЬ";
            lBtn.ToolTip = "Загружайте файл в формате PDF размером не более 2-x мегабайт";
            lBtn.Command += lBtn_AddProtocol_Common;
            lBtn.CommandArgument = _pathToProtocolFolder + "|" + sessionName;
            lBtn.OnClientClick = "waiting('Обработка файла. Подождите..', 0); return pageReady();";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку
            panel.Controls.Add(lBtn);

            if (!string.IsNullOrEmpty(req.ProtocolFile))     //если к заявке загружен файл протокола
            {
                // Панель со ссылкой на файл
                var panelWork = new Panel();
                panelWork.CssClass = "divWork_c"; panelWork.ID = "panelProtocol_c";

                HyperLink hLink = new HyperLink(); hLink.CssClass = "hLink_c";
                hLink.NavigateUrl = _imgUrlPathProtocol + req.ProtocolFile;
                hLink.Text = "ссылка на файл";
                hLink.Target = "_blank";
                panelWork.Controls.Add(hLink);
                lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelFoto_c";
                lBtn.ToolTip = "удалить файл протокола";
                lBtn.CommandArgument = _pathToProtocolFolder + "|" + sessionName + "|" + req.ProtocolFile;
                lBtn.Command += lBtn_DelProtocol_Common;
                lBtn.OnClientClick = "return pageReady()";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку
                panelWork.Controls.Add(lBtn);

                panel.Controls.Add(panelWork);
            }

            if (needToShowParticipantsCount)
            {
                //Поле с кол-вом участников отборочного тура согласно протоколу
                panel.Controls.Add(new LiteralControl("<table class='table_Form_c' style='margin-top: 15px'>"));
                panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Количество участников I отборочного тура</td>"));
                panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
                var txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
                txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "введите цифрой Количество участников I отборочного тура согласно протоколу");
                string tmp = "";
                if (req.ProtocolPartyCount != 0) 
                    tmp = req.ProtocolPartyCount.ToString();
                txtBox.Text = tmp; txtBox.ID = "txtBox_ProtocolPartyCount"; txtBox.MaxLength = 3; panel.Controls.Add(txtBox);
                panel.Controls.Add(new LiteralControl("</td></tr>"));
                panel.Controls.Add(new LiteralControl("</table>"));
            }

            panelResult.Controls.Add(panel);
        }

        #region События

        #region lBtn_AddProtocol_Common

        /// <summary>Нажатие на кнопку ДОБАВИТЬ протокол</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddProtocol_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            FileUpload fUpload = (FileUpload)_pag.FindControl("ctl00$ContentPlaceHolder1$protocolUpload");
            if (fUpload.HasFile)
            {
                string fileName = _pag.Server.HtmlEncode(fUpload.FileName);
                string extension = Path.GetExtension(fileName);

                if (extension != null && ((extension.ToLower() == ".pdf")))     //проверка на допустимые расширения закачиваемого файла
                {
                    int fileSize = fUpload.PostedFile.ContentLength;
                    if (fileSize <= 2097152)                              //проверка на допустимый размер закачиваемого файла
                    {
                        #region Код сохранения файла на серевер

                        //создадим имя для файла картинки
                        Random rn = new Random();
                        string fName = "proto_" + DateTime.Now.ToString("yyyyMMdd_HHmmssffff") + "_" + rn.Next(999) + extension;

                        //сохраним файл в папку с файлами для протоколов (одна для всех конкурсов)
                        try
                        {
                            fUpload.SaveAs(folderName + fName);
                            fUpload.Dispose();
                        }
                        catch (Exception ex)
                        {
                            DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                            lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);
                            return;
                        }

                        #region Добавление имени файла в объект

                        try
                        {
                            string oldFileName = ((CompetitionRequest)_context.Session[sessionName]).ProtocolFile;
                            ((CompetitionRequest)_context.Session[sessionName]).ProtocolFile = fName;

                            // для сохранения значений в сессии
                            FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);

                            #region Удалим прежний файл протокола, если он уже был загружен (на случай тупняков пользователей)

                            if (oldFileName != "")
                            {
                                try
                                {
                                    if (File.Exists(folderName + oldFileName)) 
                                        File.Delete(folderName + oldFileName);
                                }
                                catch
                                {

                                }
                            }

                            #endregion
                        }
                        catch (Exception ex)
                        {
                            DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                            lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!"; 
                            panelWarn.Controls.Add(lbl);
                            return;
                        }

                        #endregion

                        _pag.Response.Redirect(_pag.Request.RawUrl);

                        #endregion
                    }
                    else { 
                        lbl.Text = "Допускаются только файлы размером не более 2-x мегабайт"; 
                        panelWarn.Controls.Add(lbl);
                        return;
                    }
                }
                else { 
                    lbl.Text = "Допускаются только файлы в формате PDF"; 
                    panelWarn.Controls.Add(lbl);
                    return;
                }
            }
            else { 
                lbl.Text = "Сначала выберите файл через кнопку 'ОБЗОР'"; 
                panelWarn.Controls.Add(lbl);
                return;
            }
        }

        #endregion
        #region lBtn_DelProtocol_Common

        /// <summary>Нажатие на кнопку КРЕСТИК-УДАЛЕНИЕ файла с протоколом</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит имя файла картинки с расширением</param>
        private void lBtn_DelProtocol_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];
            var fileName = args[2];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Удаляем имя файла из сессионной переменной

            try
            {
                ((CompetitionRequest)_context.Session[sessionName]).ProtocolFile = "";
                // для сохранения значений в сессии
                FieldsValueSave((CompetitionRequest)_context.Session[sessionName], _pag);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!"; 
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            #region Удаляем файл с диска

            try
            {
                if (File.Exists(folderName + fileName)) 
                    File.Delete(folderName + fileName);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!"; 
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #endregion

        #region Content_FileProtocolComment_Common
        public void Content_FileProtocolComment_Common(ref Panel panel, bool needToShowParticipantsCount = false)
        {
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Добавьте Протокол 1 (отборочного) тура</p>"));
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Для этого нажмите на кнопку 'ОБЗОР', в появившемся окне выберите файл протокола со своего жёсткого диска. Затем нажмите на кнопку 'ДОБАВИТЬ'. " +
                                                  "Обратите внимание, что допускается добавление файла протокола только в формате PDF и размером не более 2-x мегабайт.</p>"));

            if (needToShowParticipantsCount)
                panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Ниже, в специальной графе, укажите количество участников 1 " +
                                                "отборочного тура согласно протокола.</p>"));
        }
        #endregion

        #endregion

        #region Content_SuccessRegistrationRequest
        public void Content_SuccessRegistrationRequest(CompetitionRequest req, string competitionName, StringBuilder sameEmailData)
        {
            #region Отправка уведомления заявителю, подавшему заявку на конкурс

            var mailbodyAdm = new StringBuilder();
            mailbodyAdm.Append("*********************************************************************************************************" +
                                "<br />Это письмо сформировано автоматически, отвечать на него не нужно!" +
                                "<br />Для связи с куратором конкурса, используйте контакты на странице <a target='blank' href='https://sevastopolets-moskva.ru/sections/contacts/'>Контакты</a>" +
                                "<br />*********************************************************************************************************" +
                                "<br /><br />Здравствуйте!" + "<br /><br />" +
                                "Ваша заявка № " + req.Id.ToString() + " от " + new DateTime(req.DateReg).ToShortDateString() + " отправлена и находится в обработке!<br />Если заявка соответствует всем требования заполнения, Вам на почту придет оповещение о принятии заявки!<br /><br />" +
                                "<strong>" + competitionName + "</strong>" +
                                sameEmailData.ToString() +
                                 "<br/><strong>После обработки Заявки Вам на почту придет подтверждение о регистрации на Конкурс.</strong>" +
                                 "<br/><strong>В случае некорректного заполнения Заявки куратор свяжется с Вами по указанному телефону.</strong>" +
                                 "<br/><strong>Заявка может быть аннулирована при невыполнении всех требований заполнения Заявки.</strong>" +
                                 "<br/><br/>C уважением,<br/>" +
                                 "Администрация Государственного бюджетного образовательного учреждения  дополнительного образования города Москвы «Дворец творчества детей и молодежи «Севастополец»." +
                                 "<br /><br />Следите за анонсами мероприятий Проекта на сайте <a href='" + baseUrlNoPort + "'>" + baseUrlNoPort + "</a>" +
                                 "<br /><br /><img src='" + baseUrl + "files/shared/logo.png' alt='Логотип нашего учреждения' />");

            //если письмо не отослано, то..
            if (!new SendMailClass().SendMail(req.ChiefEmail, "Оповещение о регистрации заявки. " + competitionName, mailbodyAdm.ToString(), req))
            {
                DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо конкурсанту о регистрации его заявки № " + req.Id.ToString() + " от " + new DateTime(req.DateReg).ToShortDateString() + " в " + competitionName + " На почту - " + req.ChiefEmail);
            }

            #endregion

            #region Сообщение об успешном приёме заявки

            try
            {
                Panel panAll = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$addPanel");
                panAll.Controls.Clear();

                panAll.Controls.Add(new LiteralControl("<table class='tblSuccess_c'><tr><td>"));
                panAll.Controls.Add(new LiteralControl("<img src='../../../images/galochka.png'>"));
                panAll.Controls.Add(new LiteralControl("<span>" + "Ваша заявка № " + req.Id.ToString() + " отправлена и находится в обработке!<br />Если заявка соответствует всем требования заполнения, Вам на почту придет оповещение о принятии заявки!" + "</span>"));
                panAll.Controls.Add(new LiteralControl("</td></tr></table>"));

            }
            catch (Exception ex)
            {
                Label lbl = new Label(); Panel panelWarn = new Panel();
                lbl.Text = "Ваша заявка № " + req.Id.ToString() + " отправлена и находится в обработке!<br />Если заявка соответствует всем требования заполнения, Вам на почту придет оповещение о принятии заявки!";
                lbl.ForeColor = Color.Green;
                panelWarn.Controls.Add(lbl);
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            #endregion
        }
        #endregion

        #region Метод RequestPanel_Foto(string subName)

        /// <summary>Метод формирует html-код формы заявки для фотоконкура</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Foto(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(subName);

            if (subName == EnumsHelper.GetPhotoCode(Photo.photo))
            {
                panelResult = RequestPanel_Foto_Photo();
            }
            else if (subName == EnumsHelper.GetPhotoCode(Photo.izo))
            {
                panelResult = RequestPanel_Foto_Izo();
            }
            else if (subName == EnumsHelper.GetPhotoCode(Photo.computer_risunok) ||
                    subName == EnumsHelper.GetPhotoCode(Photo.collazh_fotomontazh))
            //else if (subName == EnumsHelper.GetPhotoCode(Photo.computerGraphic))
            {
                panelResult = RequestPanel_Foto_ComputerGraphic(subName);
            }
            else if (subName == EnumsHelper.GetPhotoCode(Photo.DPT1_hud_vyazanie) ||
                     subName == EnumsHelper.GetPhotoCode(Photo.DPT1_avtor_igrushka) ||
                     subName == EnumsHelper.GetPhotoCode(Photo.DPT1_bumagoplastika) ||
                     subName == EnumsHelper.GetPhotoCode(Photo.DPT1_biseropletenie) ||
                     subName == EnumsHelper.GetPhotoCode(Photo.DPT1_voilokovalyanie) ||
                     subName == EnumsHelper.GetPhotoCode(Photo.DPT1_combitehnics) ||
                     subName == EnumsHelper.GetPhotoCode(Photo.DPT1_plastilonografiya) ||

                     //Объединение DPT1 и DPT2
                     subName == EnumsHelper.GetPhotoCode(Photo.DPT2_keramika) ||
                     subName == EnumsHelper.GetPhotoCode(Photo.DPT2_batik) ||
                     subName == EnumsHelper.GetPhotoCode(Photo.DPT2_dekupazh) ||
                     subName == EnumsHelper.GetPhotoCode(Photo.DPT2_rospis_poderevu) 
                    )
            {
                panelResult = RequestPanel_Foto_DPT1(subName);
            }
            //Объединение DPT1 и DPT2
            //else if (subName == EnumsHelper.GetPhotoCode(Photo.DPT2_keramika) ||
            //         subName == EnumsHelper.GetPhotoCode(Photo.DPT2_batik) ||
            //         subName == EnumsHelper.GetPhotoCode(Photo.DPT2_dekupazh) ||
            //         subName == EnumsHelper.GetPhotoCode(Photo.DPT2_rospis_poderevu))
            //{
            //    panelResult = RequestPanel_Foto_DPT2(subName);
            //}

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Foto_Photo()

        /// <summary>Метод формирует html-код формы заявки для номинации фотоконкура</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Foto_Photo()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Photo.self)];
            req.CompetitionName = EnumsHelper.GetPhotoCode(Photo.self);
            req.SubsectionName = EnumsHelper.GetPhotoValue(Photo.photo);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе \"Крымский вернисаж\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region ФИО, Дата рождения, Место учёбы, Класс с литерой

            Content_AddParty_Common_One(ref panel, ref req);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));                          // Название работы
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            GetLastPartyByChiefEmail(ref panel, ref req, EnumsHelper.GetSessionName(Photo.self));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Контактный телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            Content_Image_Common(ref panelResult, ref req, _pathToFotoFolder, _imgUrlPathFoto);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Foto_Photo;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Foto_Photo

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Foto_Photo(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Photo.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.Schools = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRooms = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion 

                /*
                #region Образовательная организация (полностью)

                if (((RadioButton)this._pag.FindControl("ctl00$ContentPlaceHolder1$organization")).Checked)
                {
                    txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                    if (txtBox.Text.Trim().ToUpper() == "")
                    {
                        checker = false;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.EducationalOrganization = txtBox.Text.Trim();
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }

                    #region Образовательная организация

                    txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                    if (txtBox.Text.Trim().ToUpper() == "")
                    {
                        checker = false;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.EducationalOrganizationShort = txtBox.Text.Trim();
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }

                    #endregion
                }
                else {
                    txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (txtBox.Text.Trim().ToUpper() == "")
                    {
                        checker = false;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        if (txtBox.Text.Trim().Contains("Регион: , Район: , Город:")) {
                            checker = false;
                            txtBox.Text = "";
                            txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                        }
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                }

                #endregion
                */

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region Итоговые операции

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetPhotoCode(Photo.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailfoto";
                string fileUrlPath = _imgUrlPathFoto.Replace("~/", "");

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                      "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Fio + " / " + req.Age +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Место учёбы/Класс с литерой|Курс:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Schools + " / " + req.ClassRooms +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.EducationalOrganization + "</td></tr>" +
                                     "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                     "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkComment +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Region + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Area + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ")");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion
                
                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Photo.self)] = null;

                //_pag.Response.RedirectLocation = _pag.Request.RawUrl + "&reqId=" + req.Id.ToString();
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }

        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Foto_Izo()

        /// <summary>Метод формирует html-код формы заявки для номинации фотоконкура</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Foto_Izo()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[ EnumsHelper.GetSessionName(Photo.self)];
            req.CompetitionName = EnumsHelper.GetPhotoCode(Photo.self);
            req.SubsectionName = EnumsHelper.GetPhotoValue(Photo.izo);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе \"Крымский вернисаж\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region ФИО, Дата рождения, Место учёбы, Класс с литерой

            Content_AddParty_Common_One(ref panel, ref req);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Название коллектива (если есть)"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работ

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));                          // Название работы
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя или участника

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            GetLastPartyByChiefEmail(ref panel, ref req,  EnumsHelper.GetSessionName(Photo.self));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Контактный телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            Content_Image_Common(ref panelResult, ref req, _pathToFotoFolder, _imgUrlPathFoto);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Foto_Izo;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Foto_Izo

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Foto_Izo(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[ EnumsHelper.GetSessionName(Photo.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.Schools = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRooms = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion 

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (!string.IsNullOrEmpty(txtBox.Text.Trim()))
                {
                    req.ClubsName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region Итоговые операции

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetPhotoCode(Photo.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailiso";
                string fileUrlPath = _imgUrlPathFoto.Replace("~/", "");
                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Fio + " / " + req.Age +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Место учёбы/Класс с литерой|Курс:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Schools + " / " + req.ClassRooms +
                                     "</td></tr>" +
                                     
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Photo.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }

        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Foto_ComputerGraphic(string subName)

        /// <summary>Метод формирует html-код формы заявки для номинации фотоконкура</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Foto_ComputerGraphic(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[ EnumsHelper.GetSessionName(Photo.self)];
            req.CompetitionName = EnumsHelper.GetPhotoCode(Photo.self);
            req.SubsectionName = EnumsHelper.GetPhotoValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе \"Крымский вернисаж\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region ФИО, Дата рождения, Место учёбы, Класс с литерой

            Content_AddParty_Common_One(ref panel, ref req);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работ

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));                          // Название работы
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            GetLastPartyByChiefEmail(ref panel, ref req,  EnumsHelper.GetSessionName(Photo.self));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Контактный телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            Content_Image_Common(ref panelResult, ref req, _pathToFotoFolder, _imgUrlPathFoto);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Foto_ComputerGraphic;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Foto_ComputerGraphic

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Foto_ComputerGraphic(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[ EnumsHelper.GetSessionName(Photo.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.Schools = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRooms = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion
               
                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region Итоговые операции

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetPhotoCode(Photo.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailgrafics";
                string fileUrlPath = _imgUrlPathFoto.Replace("~/", "");
                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Fio + " / " + req.Age +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Место учёбы/Класс с литерой|Курс:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Schools + " / " + req.ClassRooms +
                                     "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Photo.self)] = null;
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }

        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Foto_DPT1(string subName)

        /// <summary>Метод формирует html-код формы заявки для номинации фотоконкура</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Foto_DPT1(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[ EnumsHelper.GetSessionName(Photo.self)];
            req.CompetitionName = EnumsHelper.GetPhotoCode(Photo.self);
            req.SubsectionName = EnumsHelper.GetPhotoValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе \"Крымский вернисаж\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region ФИО, Дата рождения, Место учёбы, Класс с литерой

            Content_AddParty_Common_One(ref panel, ref req);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Название коллектива (если есть)"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работ

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));                          // Название работы
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            GetLastPartyByChiefEmail(ref panel, ref req,  EnumsHelper.GetSessionName(Photo.self));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Контактный телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            Content_Image_Common(ref panelResult, ref req, _pathToFotoFolder, _imgUrlPathFoto);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Foto_DPT1;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События
      
        #region lBtn_SendRequest_Foto_DPT1

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Foto_DPT1(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[ EnumsHelper.GetSessionName(Photo.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.Schools = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRooms = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (!string.IsNullOrEmpty(txtBox.Text.Trim()))
                {
                    req.ClubsName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion


                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region Итоговые операции

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetPhotoCode(Photo.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmaildpt1";
                string fileUrlPath = _imgUrlPathFoto.Replace("~/", "");
                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>" + 
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Fio + " / " + req.Age +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Место учёбы/Класс с литерой|Курс:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Schools + " / " + req.ClassRooms +
                                     "</td></tr>" +
                                     
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Photo.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }

        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Foto_DPT2(string subName)

        /// <summary>Метод формирует html-код формы заявки для номинации фотоконкура</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Foto_DPT2(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[ EnumsHelper.GetSessionName(Photo.self)];
            req.CompetitionName = EnumsHelper.GetPhotoCode(Photo.self);
            req.SubsectionName = EnumsHelper.GetPhotoValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе \"Крымский вернисаж\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            #region Код заполнения полей ФИО, Дата рождения

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО/Дата рождения</td>"));                        // ФИО/Дата рождения
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 392;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Ситников Андрей Игоревич");
            txtBox.Text = req.Fio; txtBox.ID = "txtBox_Fio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 80;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "04.11.2001");
            txtBox.Text = req.Age; txtBox.ID = "txtBox_Age"; txtBox.MaxLength = 10; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работ

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));                          // Название работы
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            //txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            //txtBox.Attributes.Add("placeholder", "Кратко опишите свою работу. Возможный вариант описания:\n" +
            //                                         "Место, где производилась съёмка. Кто или что отображено на фото. Почему я выбрал именно этот образ. " +
            //                                         "Что я хочу сказать этой фотографией людям, которые будут просматривать и оценивать её.");
            //txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            //panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация (полностью)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Образовательная организация (полностью) (аббревиатура полностью)</td>"));    // Образовательная организация (полностью)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "ГБОУ СОШ №, ГБОУ ДО ДДТиМ, МАОУ Лицей №");
            txtBox.Text = req.EducationalOrganization; txtBox.ID = "txtBox_EducationalOrganization"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если вы не учащийся, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Структурное подразделение

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Структурное подразделение</td>"));    // Структурное подразделение
            panel.Controls.Add(new LiteralControl("<td></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Структурное подразделение (дополнительная информация)");
            txtBox.Text = req.Division; txtBox.ID = "txtBox_Division"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Контактная информация участника

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта участника</td>"));          // Электронная почта участника
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            //txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "a.sitnikov@mail.ru");
            //txtBox.Text = req.Email; txtBox.ID = "txtBox_Email"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            //panel.Controls.Add(new LiteralControl("</td></tr>"));

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Контактный телефон участника</td>"));          // Контактный телефон участника
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            //txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89169985137 или +79169985137");
            //txtBox.Text = req.Telephone; txtBox.ID = "txtBox_Telephone"; txtBox.MaxLength = 12; panel.Controls.Add(txtBox);
            //panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Адрес

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Регион</td>"));                               // Регион
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Московская область");
            txtBox.Text = req.Region; txtBox.ID = "txtBox_Region"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Город</td>"));                               // Город
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            List<string> tmpList = XmlResources.GetTownsPrefList();
            if (tmpList != null)
            {
                foreach (string item in tmpList)
                {
                    ddl.Items.Add(item);
                }
            }
            ddl.ID = "DropDown_TownPrefs";
            ddl.SelectedValue = req.CityPref;
            ddl.Width = 200;
            panel.Controls.Add(ddl);

            panel.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 294;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Долгопрудный");
            txtBox.Text = req.City; txtBox.ID = "txtBox_City"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            GetLastPartyByChiefEmail(ref panel, ref req,  EnumsHelper.GetSessionName(Photo.self));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Контактный телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            Content_Image_Common(ref panelResult, ref req, _pathToFotoFolder, _imgUrlPathFoto);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Foto_DPT2;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Foto_DPT2

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Foto_DPT2(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[ EnumsHelper.GetSessionName(Photo.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                TextBox txtBox = new TextBox();

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Возраст

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Комментарий

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkComment");
                //if (txtBox.Text.Trim() == "")
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.WorkComment = txtBox.Text.Trim();
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Образовательная организация (полностью) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.EducationalOrganization = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 3)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.EducationalOrganization = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Структурное подразделение

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Division");
                if (!string.IsNullOrEmpty(txtBox.Text))
                {
                    req.Division = txtBox.Text.Trim();
                }

                #endregion

                #region Электронная почта участника

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Email");
                //if (!Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.emailPattern))
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.Email = txtBox.Text.Trim();
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Контактный телефон участника

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Telephone");
                //if (!Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.Telephone = txtBox.Text.Trim();
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefEmail = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefEmail = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefTelephone = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefTelephone = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region Протокол

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += ", загрузите файл протокола";
                }

                #endregion

                #region Количество участников I отборочного тура согласно протоколу отборочного тура

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ProtocolPartyCount");
                int res = StringToNum.ParseInt(txtBox.Text);
                if (res == -1 || res <= 0)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    errTxt += "  Количество участников I отборочного тура согласно протоколу должно быть больше 0";
                }
                else
                {
                    req.ProtocolPartyCount = res;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region Итоговые операции

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetPhotoCode(Photo.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmaildpt2";
                string fileUrlPath = _imgUrlPathFoto.Replace("~/", "");
                string fio = req.Fio, age1 = req.Age.ToString();

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fio +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     age1 +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     //"<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                     //"<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                     //"</td><td style='padding: 0 9px 5px 9px;'>" +
                                     //req.WorkComment +
                                     //"</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.EducationalOrganization + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Структурное подразделение:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Division + "</td></tr>" +
                                     //"<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     //"<span style='color:blue; font-weight:bold;'>Электронная почта участника:</span>" +
                                     //"</td><td style='padding: 0 9px 5px 9px;'>" +
                                     //req.Email + "</td></tr>" +
                                     //"<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     //"<span style='color:blue; font-weight:bold;'>Контактный телефон участника:</span>" +
                                     //"</td><td style='padding: 0 9px 5px 9px;'>" +
                                     //req.Telephone + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Region + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr></table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Photo.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }

        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Literary(string subName)

        /// <summary>Метод формирует html-код формы заявки для Литературного Конкурса, в зависимости от переданного строчного аргумента</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Literary(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(subName);

            if (subName == EnumsHelper.GetLiteraryCode(Literary.stihi) ||
                subName == EnumsHelper.GetLiteraryCode(Literary.esse) ||
                subName == EnumsHelper.GetLiteraryCode(Literary.rasskaz) ||
                subName == EnumsHelper.GetLiteraryCode(Literary.sochinenie))
            {
                panelResult = RequestPanel_Literary_all(subName);
            }

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Literary_all(string subName)

        /// <summary>Метод формирует html-код формы заявки для Литературного Конкурса, в зависимости от переданного строчного аргумента</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Literary_all(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Literary.self)];
            req.CompetitionName = EnumsHelper.GetLiteraryCode(Literary.self);
            req.SubsectionName = EnumsHelper.GetLiteraryValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>" + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetLiteraryCode(Literary.self)) + "<br/>Заявка на участие</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region ФИО, Дата рождения, Место учёбы, Класс с литерой

            Content_AddParty_Common_One(ref panel, ref req);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            #region Название работы, Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));                          // Название работы
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою работу. Возможный вариант описания:\n" +
                                                     "Что из себя представляет моя работа (стих, проза или другое). Что меня вдохновило. Кому или чему посвящается. " +
                                                     "Что я хочу сказать людям, которые будут просматривать и оценивать её.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация (полностью)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Образовательная организация (полностью)</td>"));    // Образовательная организация (полностью)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Средняя образовательная школа № 32 города Мытищи");
            txtBox.Text = req.EducationalOrganization; txtBox.ID = "txtBox_EducationalOrganization"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если вы не учащийся, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Структурное подразделение

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Структурное подразделение</td>"));    // Структурное подразделение
            panel.Controls.Add(new LiteralControl("<td></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Структурное подразделение (дополнительная информация)");
            txtBox.Text = req.Division; txtBox.ID = "txtBox_Division"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Контактная информация участника

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта участника</td>"));          // Электронная почта участника
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            //txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "a.sitnikov@mail.ru");
            //txtBox.Text = req.Email; txtBox.ID = "txtBox_Email"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            //panel.Controls.Add(new LiteralControl("</td></tr>"));

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Контактный телефон участника</td>"));          // Контактный телефон участника
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            //txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89169985137 или +79169985137");
            //txtBox.Text = req.Telephone; txtBox.ID = "txtBox_Telephone"; txtBox.MaxLength = 12; panel.Controls.Add(txtBox);
            //panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Адрес

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Регион</td>"));                               // Регион
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Московская область");
            txtBox.Text = req.Region; txtBox.ID = "txtBox_Region"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Город</td>"));                               // Город
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            List<string> tmpList = XmlResources.GetTownsPrefList();
            if (tmpList != null)
            {
                foreach (string item in tmpList)
                {
                    ddl.Items.Add(item);
                }
            }
            ddl.ID = "DropDown_TownPrefs";
            ddl.SelectedValue = req.CityPref;
            ddl.Width = 200;
            panel.Controls.Add(ddl);

            panel.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 294;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Долгопрудный");
            txtBox.Text = req.City; txtBox.ID = "txtBox_City"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Контактный телефон руководителя (или участника)</td>"));             // Контактный телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            Content_DocRar_Common(ref panelResult, ref req, _pathToLiteraryFolder, _imgUrlPathLiterary);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Literary_all;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;

        }

        #region События

        #region lBtn_SendRequest_Literary_all

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Literary_all(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Literary.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.Schools = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRooms = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion 

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");

                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Комментарий

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkComment");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkComment = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.EducationalOrganization = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 3)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.EducationalOrganization = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Структурное подразделение

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Division");
                if (!string.IsNullOrEmpty(txtBox.Text))
                {
                    req.Division = txtBox.Text.Trim();
                }

                #endregion

                #region Электронная почта участника

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Email");
                //if (!Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.emailPattern))
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.Email = txtBox.Text.Trim();
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Контактный телефон участника

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Telephone");
                //if (!Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.Telephone = txtBox.Text.Trim();
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");

                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefEmail = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefEmail = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefTelephone = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefTelephone = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region Итоговые операции

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetLiteraryCode(Literary.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailliterary";
                string fileUrlPath = _imgUrlPathLiterary.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                      "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Fio + " / " + req.Age +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Место учёбы/Класс с литерой|Курс:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Schools + " / " + req.ClassRooms +
                                     "</td></tr>" +
                                    
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                     "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkComment +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.EducationalOrganization + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Структурное подразделение:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Division + "</td></tr>" +
                                     //"<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     //"<span style='color:blue; font-weight:bold;'>Электронная почта участника:</span>" +
                                     //"</td><td style='padding: 0 9px 5px 9px;'>" +
                                     //req.Email + "</td></tr>" +
                                     //"<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     //"<span style='color:blue; font-weight:bold;'>Контактный телефон участника:</span>" +
                                     //"</td><td style='padding: 0 9px 5px 9px;'>" +
                                     //req.Telephone + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Region + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Literary.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Sport(string subName)

        /// <summary>Метод формирует html-код формы заявки для спортивного Конкурса</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Sport(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(subName);

            if (subName == EnumsHelper.GetSportCode(Sport.prostEdinoborstva))
            {
                panelResult = RequestPanel_Sport_prostEdinoborstva();
            }
            else if (subName == EnumsHelper.GetSportCode(Sport.thekvo))
            {
                panelResult = RequestPanel_Sport_thekvo();
            }
            else if (subName == EnumsHelper.GetSportCode(Sport.football))
            {
                panelResult = RequestPanel_Sport_football();
            }
            else if (subName == EnumsHelper.GetSportCode(Sport.basketball))
            {
                panelResult = RequestPanel_Sport_basketball();
            }
            else if (subName == EnumsHelper.GetSportCode(Sport.volleyball))
            {
                panelResult = RequestPanel_Sport_volleyball();
            }
            else if (subName == EnumsHelper.GetSportCode(Sport.stendStrelba))       //пейнтбол 
            {
                panelResult = RequestPanel_Sport_stendStrelba();
            }
            else if (subName == EnumsHelper.GetSportCode(Sport.shahmaty))
            {
                panelResult = RequestPanel_Sport_shahmaty();
            }
            else if (subName == EnumsHelper.GetSportCode(Sport.shashki))
            {
                panelResult = RequestPanel_Sport_shashki();
            }
            else if (subName == EnumsHelper.GetSportCode(Sport.boks))
            {
                panelResult = RequestPanel_Sport_boks();
            }
            else if (subName == EnumsHelper.GetSportCode(Sport.kungfu))
            {
                panelResult = RequestPanel_Sport_kungfu();
            }
            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Sport_prostEdinoborstva()

        /// <summary>Метод формирует html-код формы заявки для спортивного Конкурса</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Sport_prostEdinoborstva()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];
            req.CompetitionName = EnumsHelper.GetSportCode(Sport.self);
            req.SubsectionName = EnumsHelper.GetSportValue(Sport.prostEdinoborstva);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Спортивном турнире</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2, true);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование спортивного клуба (кружка)"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования спортивного клуба (кружка), то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1, true);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Sport_prostEdinoborstva;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Sport_prostEdinoborstva

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Sport_prostEdinoborstva(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Вес

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Weight");
                int weight = StringToNum.ParseInt(txtBox.Text.Trim());
                if (weight <= -1)   //сразу же проверка на неправильное значение и отрицательные цифры
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Weight = weight;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Weight = 0;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }
                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование клуба

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Согласие на предоставление медицинской справки

                //chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_ProcMedicine");
                //if (!chkBox.Checked)
                //{
                //    checker = false;
                //    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.ProcMedicine = true;
                //    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                //}

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Вес

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Weight_1");
                int weight_1 = StringToNum.ParseInt(txtBox.Text.Trim());
                if (weight_1 <= -1)   //сразу же проверка на неправильное значение и отрицательные цифры
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Weight_1 = weight_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Weight_1 = 0;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetSportCode(Sport.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailsport";
                string fileUrlPath = _imgUrlPathSport.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });
                string[] weights = req.Weights.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });
                string[] weights_1 = req.Weights_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения/Вес:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] + " / " + weights[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование клуба (кружка):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения/Вес:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] + " / " + weights_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Sport.self)] = null;
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Sport_boks()

        /// <summary>Метод формирует html-код формы заявки для спортивного Конкурса</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Sport_boks()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];
            req.CompetitionName = EnumsHelper.GetSportCode(Sport.self);
            req.SubsectionName = EnumsHelper.GetSportValue(Sport.boks);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Спортивном турнире</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2, true);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование спортивного клуба (кружка)"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования спортивного клуба (кружка), то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1, true);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Sport_boks;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Sport_boks

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Sport_boks(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Вес

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Weight");
                int weight = StringToNum.ParseInt(txtBox.Text.Trim());
                if (weight <= -1)   //сразу же проверка на неправильное значение и отрицательные цифры
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Weight = weight;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Weight = 0;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование клуба

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Согласие на предоставление медицинской справки

                //chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_ProcMedicine");
                //if (!chkBox.Checked)
                //{
                //    checker = false;
                //    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.ProcMedicine = true;
                //    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                //}

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Вес

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Weight_1");
                int weight_1 = StringToNum.ParseInt(txtBox.Text.Trim());
                if (weight_1 <= -1)   //сразу же проверка на неправильное значение и отрицательные цифры
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Weight_1 = weight_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Weight_1 = 0;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetSportCode(Sport.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailsport";
                string fileUrlPath = _imgUrlPathSport.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });
                string[] weights = req.Weights.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });
                string[] weights_1 = req.Weights_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                       "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                       "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения/Вес:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] + " / " + weights[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование клуба (кружка):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения/Вес:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] + " / " + weights_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Sport.self)] = null;
               
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Sport_kungfu()

        /// <summary>Метод формирует html-код формы заявки для спортивного Конкурса</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Sport_kungfu()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];
            req.CompetitionName = EnumsHelper.GetSportCode(Sport.self);
            req.SubsectionName = EnumsHelper.GetSportValue(Sport.kungfu);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Спортивном турнире</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            #region Код заполнения полей ФИО, Дата рождения, вес

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО/дата рождения/вес</td>"));

            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));              //ФИО
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 200;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Ситников Андрей Игоревич");
            txtBox.Text = req.Fio; txtBox.ID = "txtBox_Fio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 80;                      //Дата рождения
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "04.11.2001");
            txtBox.Text = req.Age; txtBox.ID = "txtBox_Age"; txtBox.MaxLength = 10; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 30;                      //Вес
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "40");
            if (req.Weight == 0) txtBox.Text = ""; else txtBox.Text = req.Weight.ToString();
            txtBox.ID = "txtBox_Weight"; txtBox.MaxLength = 2; panel.Controls.Add(txtBox);

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddParty_c";
            lBtn.Text = "Добавить участника";
            lBtn.ToolTip = "Добавляется участник к этой заявке (данные берутся из полей слева - ФИО и ВОЗРАСТ)";
            lBtn.Command += lBtn_AddParty_Sport_kungfu;

            panel.Controls.Add(lBtn);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("ОБЯЗАТЕЛЬНО НАЖМИТЕ НА КНОПКУ 'ДОБАВИТЬ УЧАСТНИКА' ПОСЛЕ ВВОДА ФИО И ДАТЫ, ЧТОБЫ ДОБАВИТЬ ЭТОГО УЧАСТНИКА В ЗАЯВКУ!!!</td></tr>"));

            #endregion

            #region Панель отображения добавленных участников

            if (req.Fios.Trim() != "")
            {
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] weights = req.Weights.Split(new[] { '|' });

                for (int i = 0; i < fios.Length; i++)
                {
                    panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'></td>"));
                    panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));

                    txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 200;
                    txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ReadOnly = true; txtBox.Enabled = false;
                    txtBox.Text = fios[i];
                    panel.Controls.Add(txtBox);

                    panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
                    txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 80;
                    txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ReadOnly = true; txtBox.Enabled = false;
                    txtBox.Text = agies[i];
                    panel.Controls.Add(txtBox);

                    panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
                    txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 30;
                    txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ReadOnly = true; txtBox.Enabled = false;
                    txtBox.Text = weights[i];
                    panel.Controls.Add(txtBox);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelParty_c";                  //кнопка удаления участника из временного списка
                    lBtn.Text = "удалить участника";
                    lBtn.ToolTip = "удалить участника из списка участников по данной заявке";
                    lBtn.CommandArgument = i.ToString();
                    lBtn.Command += lBtn_DelParty_Sport_kungfu;

                    panel.Controls.Add(lBtn);

                    panel.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #region Образовательная организация (полностью)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Образовательная организация (полностью)</td>"));    // Образовательная организация (полностью)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Средняя образовательная школа № 32 города Мытищи");
            txtBox.Text = req.EducationalOrganization; txtBox.ID = "txtBox_EducationalOrganization"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если вы не учащийся, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Структурное подразделение

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Структурное подразделение</td>"));    // Структурное подразделение
            panel.Controls.Add(new LiteralControl("<td></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Структурное подразделение (дополнительная информация)");
            txtBox.Text = req.Division; txtBox.ID = "txtBox_Division"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование спортивного клуба (кружка)"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования спортивного клуба (кружка), то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Sport_kungfu;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_AddParty_Sport_kungfu

        /// <summary>Нажатие на кнопку ДОБАВИТЬ участника</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddParty_Sport_kungfu(object sender, CommandEventArgs e)
        {
            bool err = false;

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Основной код

            try
            {
                #region Сбор, проверка переменных (ФИО, Дата рождения, Вес), и их запись в сессионную переменную

                bool checker = true;
                string errText = "Неправильно введено:";
                CompetitionRequest req = new CompetitionRequest();
                if ((CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)] != null)
                {
                    req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];
                }
                else
                {
                    throw new Exception("Не удалось получить объект Session[\""+ EnumsHelper.GetSessionName(Sport.self) + "\"] (первый случай)");
                }

                TextBox txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");                     // ФИО

                if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    errText += " ФИО участника";
                }
                else
                {
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                TextBox txtBox1 = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");                    // ДАТА РОЖДЕНИЯ
                string age = txtBox1.Text.Trim();
                DateTime dtTmp;
                if (!DateTime.TryParse(txtBox1.Text.Trim(), out dtTmp))
                {
                    checker = false;
                    txtBox1.BorderWidth = 1; txtBox1.BorderColor = Color.Red; txtBox1.BackColor = Color.Bisque;
                    if (errText.Contains("ФИО участника"))
                    {
                        errText += ", дата рождения участника";
                    }
                    else
                    {
                        errText += " дата рождения участника";
                    }
                }
                else
                {
                    txtBox1.BorderWidth = 0; txtBox1.BorderColor = Color.Transparent; txtBox1.BackColor = Color.White;
                }

                TextBox txtBox2 = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Weight");                 // ВЕС

                if (txtBox2.Text.Trim() == "" || StringToNum.ParseInt(txtBox2.Text.Trim()) == -1)
                {
                    checker = false;
                    txtBox2.BorderWidth = 1; txtBox2.BorderColor = Color.Red; txtBox2.BackColor = Color.Bisque;
                    if ((errText.Contains("ФИО участника") && errText.Contains("дата рождения участника")) ||
                        (errText.Contains("ФИО участника") || errText.Contains("дата рождения участника")))
                    {
                        errText += ", вес участника";
                    }
                    else
                    {
                        errText += " вес участника";
                    }
                }
                else
                {
                    txtBox2.BorderWidth = 0; txtBox2.BorderColor = Color.Transparent; txtBox2.BackColor = Color.White;
                }

                if (checker)
                {
                    if (req.Fios == "")
                    {
                        req.Fios = txtBox.Text.Trim();
                    }
                    else
                    {
                        req.Fios += "|" + txtBox.Text.Trim();
                    }

                    if (req.Agies == "")
                    {
                        req.Agies = txtBox1.Text.Trim();
                    }
                    else
                    {
                        req.Agies += "|" + txtBox1.Text.Trim();
                    }

                    if (req.Weights == "")
                    {
                        req.Weights = txtBox2.Text.Trim();
                    }
                    else
                    {
                        req.Weights += "|" + txtBox2.Text.Trim();
                    }

                    // для сохранения значений в сессии
                    if ((CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)] != null)
                    {
                        FieldsValueSave((CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)], _pag);
                    }
                    else
                    {
                        throw new Exception("Не удалось получить объект Session[\""+ EnumsHelper.GetSessionName(Sport.self) + "\"] (второй случай)");
                    }

                    // после успешного добавления участника, обнуляем значения общих полей ФИО и возраста
                    req.Fio = "";
                    req.Age = "";
                    req.Weight = 0;
                }
                else
                {
                    err = true;
                    lbl.Text = errText; panelWarn.Controls.Add(lbl);
                }

                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                err = true;

                #endregion
            }
            if (err) return;

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtn_DelParty_Sport_kungfu

        /// <summary>Нажатие на кнопку УДАЛИТЬ участника</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит index элемента в списках Fios и Ageis, который нужно удалить</param>
        private void lBtn_DelParty_Sport_kungfu(object sender, CommandEventArgs e)
        {
            bool err = false;

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;
            //lbl.Text = "Допускаются только файлы изображений размером не более 2-х мегабайт"; panelWarn.Controls.Add(lbl);

            #endregion

            #region Основной код

            try
            {
                #region Основной код

                CompetitionRequest req = new CompetitionRequest();
                int index = int.Parse(e.CommandArgument.ToString());

                if ((CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)] != null)
                {
                    req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];

                    List<string> weights = req.Weights.Split(new[] { '|' }).ToList();
                    weights.RemoveAt(index);

                    StringBuilder weightsStr = new StringBuilder();
                    for (int i = 0; i < weights.Count; i++)
                    {
                        if (i == 0) weightsStr.Append(weights[i]); else weightsStr.Append("|" + weights[i]);
                    }

                    req.Weights = weightsStr.ToString().Trim();
                }
                else
                {
                    throw new Exception("Не удалось получить объект Session[\""+ EnumsHelper.GetSessionName(Sport.self) + "\"] (первый случай)");
                }

                List<string> fios = req.Fios.Split(new[] { '|' }).ToList();
                List<string> agies = req.Agies.Split(new[] { '|' }).ToList();
                fios.RemoveAt(index);
                agies.RemoveAt(index);


                StringBuilder fiosStr = new StringBuilder();
                for (int i = 0; i < fios.Count; i++)
                {
                    if (i == 0) fiosStr.Append(fios[i]); else fiosStr.Append("|" + fios[i]);
                }
                StringBuilder agiesStr = new StringBuilder();
                for (int i = 0; i < agies.Count; i++)
                {
                    if (i == 0) agiesStr.Append(agies[i]); else agiesStr.Append("|" + agies[i]);
                }

                req.Fios = fiosStr.ToString().Trim();
                req.Agies = agiesStr.ToString().Trim();

                // для сохранения значений в сессии
                if ((CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)] != null)
                {
                    FieldsValueSave((CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)], _pag);
                }
                else
                {
                    throw new Exception("Не удалось получить объект Session[\""+ EnumsHelper.GetSessionName(Sport.self) + "\"] (второй случай)");
                }

                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не получилось удалить добавленного участника. Попробуйте повторить или сообщите нам."; panelWarn.Controls.Add(lbl);
                err = true;

                #endregion
            }
            if (err) return;

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtn_SendRequest_Sport_kungfu

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Sport_kungfu(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                TextBox txtBox = new TextBox();

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Вес

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Weight");
                int weight = StringToNum.ParseInt(txtBox.Text.Trim());
                if (weight <= -1)   //сразу же проверка на неправильное значение и отрицательные цифры
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Weight = weight;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Weight = 0;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.EducationalOrganization = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 3)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.EducationalOrganization = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Структурное подразделение

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Division");
                if (!string.IsNullOrEmpty(txtBox.Text))
                {
                    req.Division = txtBox.Text.Trim();
                }

                #endregion

                #region Наименование клуба

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefEmail = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefEmail = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefTelephone = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefTelephone = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Согласие на предоставление медицинской справки

                //chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_ProcMedicine");
                //if (!chkBox.Checked)
                //{
                //    checker = false;
                //    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.ProcMedicine = true;
                //    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                //}

                #endregion

                #region Протокол

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл протокола";
                }

                #endregion

                #region Проверка добавления участников

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов)";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetSportCode(Sport.self)) + ". Номинация «" + req.SubsectionName + "»"; ;
                string admMailParamName = "admmailkungfu";
                string fileUrlPath = _imgUrlPathSport.Replace("~/", ""); ;
                string[] fios = req.Fios.Split(new[] { '|' }), agies = req.Agies.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование клуба (кружка):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.EducationalOrganization + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Структурное подразделение:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Division + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr></table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Sport.self)] = null;
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Sport_thekvo()

        /// <summary>Метод формирует html-код формы заявки для спортивного турнира по Тхэквондо</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Sport_thekvo()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Дополнительные действия

            if (_pag.Request.QueryString["act"] != null)
            {
                string val = _pag.Request.QueryString["act"].ToString();
                string[] valArr = val.Split(new[] { '_' });

                if (valArr[0] == "success")
                {
                    #region В случае успешного приёма заявки

                    Panel panAll = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$addPanel");
                    panAll.Controls.Clear();

                    panelResult.Controls.Add(new LiteralControl("<table class='tblSuccess_c'><tr><td>"));
                    panelResult.Controls.Add(new LiteralControl("<img src='../../../images/galochka.png'>"));
                    panelResult.Controls.Add(new LiteralControl("<span>" + "Ваша заявка № " + valArr[1] + " успешно зарегистрирована!" +
                                                           " Запомните, а лучше - запишите этот номер, потому что он может понадобиться " +
                                                           "при дальнейших обращениях к нам.</span>"));
                    panelResult.Controls.Add(new LiteralControl("</td></tr></table>"));

                    return panelResult;

                    #endregion
                }
            }

            #endregion

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];
            req.CompetitionName = EnumsHelper.GetSportCode(Sport.self);
            req.SubsectionName = EnumsHelper.GetSportValue(Sport.thekvo);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Спортивном турнире</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            DropDownList ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton(); CheckBox chkBox;

            #region Код заполнения полей ФИО, Дата рождения, Весовая категория, Возрастная категория, Техническая квалификация, Вид программы

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Сведения об участнике</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));

            #region ФИО

            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 185;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Ситников Андрей Игоревич");
            txtBox.Text = ""; txtBox.ID = "txtBox_Party_Fio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);

            #endregion
            #region Дата рождения

            panel.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 70;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "04.11.2010");
            txtBox.Text = ""; txtBox.ID = "txtBox_Party_Birthday"; txtBox.MaxLength = 10; panel.Controls.Add(txtBox);

            #endregion
            #region Возрастная категория

            panel.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add("-");
            ddl.Items.Add("Дети 6-7 лет");
            ddl.Items.Add("Дети 8-9 лет");
            ddl.Items.Add("Младшие юноши и девушки 10-11 лет");
            ddl.Items.Add("Старшие юноши и девушки 12-13 лет");
            ddl.ID = "ddl_Party_AgeCat";
            ddl.Enabled = true;
            ddl.Width = 160;
            panel.Controls.Add(ddl);

            #endregion
            #region Весовая категория

            panel.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add("-");
            ddl.Items.Add("22 кг");
            ddl.Items.Add("26 кг");
            ddl.Items.Add("30 кг");
            ddl.Items.Add("34 кг");
            ddl.Items.Add("34+ кг");
            ddl.Items.Add("35 кг");
            ddl.Items.Add("38 кг");
            ddl.Items.Add("40 кг");
            ddl.Items.Add("42 кг");
            ddl.Items.Add("42+ кг");
            ddl.Items.Add("45 кг");
            ddl.Items.Add("50 кг");
            ddl.Items.Add("50+ кг");
            ddl.Items.Add("55 кг");
            ddl.Items.Add("60 кг");
            ddl.Items.Add("60+ кг");
            ddl.ID = "ddl_Party_Weight";
            ddl.Enabled = true;
            ddl.Width = 85;
            panel.Controls.Add(ddl);

            #endregion

            // Просто разрыв для отступа и перевода следующих элементов на новую строку
            panel.Controls.Add(new LiteralControl("<div style='padding: 7px 0px 0px 0px'></div>"));

            #region Техническая квалификация

            //panel.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add("-");
            ddl.Items.Add("1 гып");
            ddl.Items.Add("2 гып");
            ddl.Items.Add("3 гып");
            ddl.Items.Add("4 гып");
            ddl.Items.Add("5 гып");
            ddl.Items.Add("6 гып");
            ddl.Items.Add("7 гып");
            ddl.Items.Add("8 гып");
            ddl.Items.Add("9 гып");
            ddl.Items.Add("10 гып");
            ddl.ID = "ddl_Party_Kvalif";
            ddl.Enabled = true;
            ddl.Width = 90;
            panel.Controls.Add(ddl);

            #endregion
            #region Вид программы

            #region Туль

            panel.Controls.Add(new LiteralControl("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"));
            chkBox = new CheckBox(); chkBox.ID = "chkBox_Party_Prog_1";
            chkBox.Text = "Туль"; chkBox.CssClass = "span_incontent_c";
            panel.Controls.Add(chkBox);

            #endregion
            #region Спарринг

            panel.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            chkBox = new CheckBox(); chkBox.ID = "chkBox_Party_Prog_2";
            chkBox.Text = "Спарринг"; chkBox.CssClass = "span_incontent_c";
            panel.Controls.Add(chkBox);

            #endregion

            #endregion

            #region Кнопка ДОБАВИТЬ УЧАСТНИКА

            panel.Controls.Add(new Label() { Width = 141 });        // просто для отступа перед кнопкой

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnAddParty_c";
            lBtn.Text = "Добавить участника";
            lBtn.ToolTip = "Добавляется участник к этой заявке (данные берутся из полей - ФИО, Дата рождения, Весовая категория, Возрастная категория,  Техническая квалификация, Вид программы)";
            lBtn.Command += lBtn_AddParty_Sport_thekvo;
            panel.Controls.Add(lBtn);

            #endregion

            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("ОБЯЗАТЕЛЬНО НАЖМИТЕ НА КНОПКУ 'ДОБАВИТЬ УЧАСТНИКА' ПОСЛЕ ВВОДА ДАННЫХ ОБ УЧАСТНИКЕ, ЧТОБЫ ДОБАВИТЬ ЕГО В ЗАЯВКУ !!!</td></tr>"));

            #endregion

            #region Панель отображения добавленных участников

            if (req.Fios != "")
            {
                string[] fios = req.Fios.Split(new[] { '|' });

                for (int i = 0; i < fios.Length; i++)
                {
                    panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'></td>"));
                    panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));

                    txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 320;
                    txtBox.TextMode = TextBoxMode.SingleLine; txtBox.ReadOnly = true; txtBox.Enabled = false;
                    txtBox.Text = fios[i];
                    panel.Controls.Add(txtBox);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnDelParty_c";                  // Кнопка удаления участника из временного списка
                    lBtn.Text = "удалить участника";
                    lBtn.ToolTip = "удалить участника из списка участников по данной заявке";
                    lBtn.CommandArgument = i.ToString();
                    lBtn.Command += lBtn_DelParty_Sport_thekvo;

                    panel.Controls.Add(lBtn);

                    panel.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #region Название клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование спортивного клуба (полностью)"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Небесные Витязи");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные тренера

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО тренера (полностью)</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Sport_thekvo;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_AddParty_Sport_thekvo

        /// <summary>Нажатие на кнопку ДОБАВИТЬ участника</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddParty_Sport_thekvo(object sender, CommandEventArgs e)
        {
            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Получение данных

            if (_pag.Session[EnumsHelper.GetSessionName(Sport.self)] == null)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: сессионная переменная TempsportRequest равна null");
                lbl.Text = "Произошла ошибка на странице регистрации. Обновите страницу и повторите ввод данных."; panelWarn.Controls.Add(lbl);
                return;
            }

            FieldsValueSave((CompetitionRequest)_pag.Session[EnumsHelper.GetSessionName(Sport.self)], _pag);

            CompetitionRequest obj = (CompetitionRequest)_pag.Session[EnumsHelper.GetSessionName(Sport.self)];

            #endregion

            #region Проверка правильности заполнения полей со сведениями об участнике

            bool error = false;

            #region ФИО

            TextBox txtBoxFio = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Party_Fio");

            if (!CompetitonWorkCommon.IsFioOk(txtBoxFio.Text))
            {
                error = false;
                txtBoxFio.BorderWidth = 1; txtBoxFio.BorderColor = Color.Red; txtBoxFio.BackColor = Color.Bisque;
            }
            else
            {
                txtBoxFio.BorderWidth = 0; txtBoxFio.BorderColor = Color.Transparent; txtBoxFio.BackColor = Color.White;
            }

            #endregion
            #region Дата рождения

            TextBox txtBoxBirthday = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Party_Birthday");
            DateTime dtTmp;
            if (!DateTime.TryParse(txtBoxBirthday.Text.Trim(), out dtTmp))
            {
                error = true;
                txtBoxBirthday.BorderWidth = 1; txtBoxBirthday.BorderColor = Color.Red; txtBoxBirthday.BackColor = Color.Bisque;
            }
            else
            {
                txtBoxBirthday.BorderWidth = 0; txtBoxBirthday.BorderColor = Color.Transparent; txtBoxBirthday.BackColor = Color.White;
            }

            #endregion
            #region Весовая категория

            DropDownList ddlPartyWeight = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$ddl_Party_Weight");
            if (ddlPartyWeight.SelectedValue == "-")
            {
                error = true;
                ddlPartyWeight.BorderWidth = 1; ddlPartyWeight.BorderColor = Color.Red; ddlPartyWeight.BackColor = Color.Bisque;
            }
            else
            {
                ddlPartyWeight.BorderWidth = 0; ddlPartyWeight.BorderColor = Color.Transparent; ddlPartyWeight.BackColor = Color.White;
            }

            #endregion
            #region Возрастная категория

            DropDownList ddlPartyAgeCat = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$ddl_Party_AgeCat");
            if (ddlPartyAgeCat.SelectedValue == "-")
            {
                error = true;
                ddlPartyAgeCat.BorderWidth = 1; ddlPartyAgeCat.BorderColor = Color.Red; ddlPartyAgeCat.BackColor = Color.Bisque;
            }
            else
            {
                ddlPartyAgeCat.BorderWidth = 0; ddlPartyAgeCat.BorderColor = Color.Transparent; ddlPartyAgeCat.BackColor = Color.White;
            }

            #endregion
            #region Техническая квалификация

            DropDownList ddlPartyKvalif = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$ddl_Party_Kvalif");
            if (ddlPartyKvalif.SelectedValue == "-")
            {
                error = true;
                ddlPartyKvalif.BorderWidth = 1; ddlPartyKvalif.BorderColor = Color.Red; ddlPartyKvalif.BackColor = Color.Bisque;
            }
            else
            {
                ddlPartyKvalif.BorderWidth = 0; ddlPartyKvalif.BorderColor = Color.Transparent; ddlPartyKvalif.BackColor = Color.White;
            }

            #endregion
            #region Программа выступления

            CheckBox chkBox1 = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_Party_Prog_1");
            CheckBox chkBox2 = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_Party_Prog_2");

            if (!chkBox1.Checked && !chkBox2.Checked)
            {
                error = true;
                chkBox1.BorderWidth = 1; chkBox1.BorderColor = Color.Red; chkBox1.BackColor = Color.Bisque;
                chkBox2.BorderWidth = 1; chkBox2.BorderColor = Color.Red; chkBox2.BackColor = Color.Bisque;
            }
            else
            {
                chkBox1.BorderWidth = 0; chkBox1.BorderColor = Color.Transparent; chkBox1.BackColor = Color.White;
                chkBox2.BorderWidth = 0; chkBox2.BorderColor = Color.Transparent; chkBox2.BackColor = Color.White;
            }

            #endregion

            #region Итоговые действия

            if (error)
            {
                lbl.Text = "Не все сведения об участнике был введены правильно. Поля с неправильными значениями выделены красными цветом. " +
                           "Исправьте эти значения и нажмите снова на кнопку \"Добавить участника\"";
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            #endregion

            #region Сохранение полученных данных

            #region Получение форматированной строки с программой выступления

            string tmp = "";
            if (chkBox1.Checked)
            {
                tmp = chkBox1.Text;
                if (chkBox2.Checked)
                {
                    tmp += "/" + chkBox2.Text;
                }
            }
            else
            {
                tmp = chkBox2.Text;
            }

            #endregion

            obj.AddParty(txtBoxFio.Text.Trim(), txtBoxBirthday.Text.Trim(), ddlPartyAgeCat.SelectedValue,
                         ddlPartyWeight.SelectedValue, ddlPartyKvalif.SelectedValue, tmp);
            _pag.Session[EnumsHelper.GetSessionName(Sport.self)] = obj;

            _pag.Response.Redirect(_pag.Request.RawUrl);

            #endregion
        }

        #endregion
        #region lBtn_DelParty_Sport_thekvo

        /// <summary>Нажатие на кнопку УДАЛИТЬ участника</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит index элемента в строках данных</param>
        private void lBtn_DelParty_Sport_thekvo(object sender, CommandEventArgs e)
        {
            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Получение данных

            int index = StringToNum.ParseInt(e.CommandArgument.ToString());
            if (index == -1)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: получено неверное значение индекса удаляемого элемента. Значение - " +
                             e.CommandArgument.ToString());
                lbl.Text = "Произошла ошибка на странице регистрации."; panelWarn.Controls.Add(lbl);
                return;
            }

            if (_pag.Session[EnumsHelper.GetSessionName(Sport.self)] == null)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: сессионная переменная TempsportRequest равна null");
                lbl.Text = "Произошла ошибка на странице регистрации. Обновите страницу и повторите попытку удаления."; panelWarn.Controls.Add(lbl);
                return;
            }

            FieldsValueSave((CompetitionRequest)_pag.Session[EnumsHelper.GetSessionName(Sport.self)], _pag);

            CompetitionRequest obj = (CompetitionRequest)_pag.Session[EnumsHelper.GetSessionName(Sport.self)];

            #endregion

            #region Обновление и сохранение данных

            obj.DeleteParty(index);
            _pag.Session[EnumsHelper.GetSessionName(Sport.self)] = obj;

            _pag.Response.Redirect(_pag.Request.RawUrl);

            #endregion
        }

        #endregion
        #region lBtn_SendRequest_Sport_thekvo

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Sport_thekvo(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); TextBox txtBox;

            #region Готовим панель предупреждений

            Panel panelWarn = new Panel();
            panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Получение данных

            if (_pag.Session[EnumsHelper.GetSessionName(Sport.self)] == null)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: сессионная переменная TempsportRequest равна null");
                lbl.Text = "Произошла ошибка на странице регистрации при сохранении данных. Обновите страницу и повторите ввод данных."; panelWarn.Controls.Add(lbl);
                return;
            }

            FieldsValueSave((CompetitionRequest)_pag.Session[EnumsHelper.GetSessionName(Sport.self)], _pag);

            CompetitionRequest req = (CompetitionRequest)_pag.Session[EnumsHelper.GetSessionName(Sport.self)];

            #endregion

            #region Проверка правильности заполнения полей

            bool error = false;
            string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

            #region Наименование клуба

            txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
            if (txtBox.Text.Trim() == "")
            {
                error = true;
                errTxt += " Добавьте наименование спортивного клуба.";
                txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
            }
            else
            {
                txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
            }

            #endregion
            #region ФИО тренера

            txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
            if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
            {
                error = true;
                errTxt += " Добавьте ФИО тренера, соответствующее шаблону (ФИО полностью!).";
                txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
            }
            else
            {
                txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
            }

            #endregion
            #region Соглашение по обработке персданных

            CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
            if (!chkBox.Checked)
            {
                error = true;
                errTxt += " Отметьте галочкой, что вы согласны с правилами по обработке персональных данных.";
                chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
            }
            else
            {
                chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
            }

            #endregion
            #region Согласие на предоставление медицинской справки

            //chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_ProcMedicine");
            //if (!chkBox.Checked)
            //{
            //    error = true;
            //    errTxt += " Отметьте галочкой, что вы обязуетесь предоставить необходимые медицинские документы.";
            //    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
            //}
            //else
            //{
            //    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
            //}

            #endregion
            #region Проверка добавления участников

            if (req.Fios == "")
            {
                error = true;
                errTxt += " Добавьте участника(ов) в заявку.";
            }

            #endregion

            #region ИТОГОВЫЕ ОПЕРАЦИИ

            if (error)
            {
                lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            #endregion

            #region Сохранение заявки в базу данных

            req.DateReg = DateTime.Now.Ticks;
            req.DateApply = 0;
            req.IsApply = false;
            req.Approved = false;
            req.PdnProcessing = true;
            req.ProcMedicine = true;

            CompetitionsWork competitionsWork = new CompetitionsWork();
            competitionsWork.InsertOneRequest(ref req);
            if (req.Id == -1)
            {
                lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            #region Отправка уведомления администратору, ответственному за данный конкурс по почте

            string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetSportCode(Sport.self)) + ". Номинация «" + req.SubsectionName + "»";
            string admMailParamName = "admmailthekvo";
            var fileUrlPath = _imgUrlPathThekvo.Replace("~/", "");
            List<string[]> partyList = req.GetFioBirthAgecatWeightKvalifProgamResult_All();

            DateTime dt = new DateTime(req.DateReg);

            StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                 "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                 "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                 "</td><td style='padding: 0 9px 5px 9px;'>" +
                                 req.Id.ToString() + " от " + dt.ToShortDateString() +
                                 "</td></tr>" +
                                 "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                 "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                 "</td><td style='padding: 0 9px 5px 9px;'>" +
                                 req.SubsectionName + "</td></tr>"+
                                 "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                 "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                 "</td><td style='padding: 0 9px 5px 9px;'>" +
                                 CompetitionsWork.GetAgeCategory(req) +
                                 "</td></tr>");

            for (int i = 0; i < partyList.Count; i++)
            {
                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                 "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Участник:</span>" +
                                 "</td><td style='padding: 0 9px 5px 9px;'>" +
                                 partyList[i][0] + " / " + partyList[i][1] + " / " + partyList[i][3] + " / " +
                                 partyList[i][2] + " / " + partyList[i][4] + " / " + partyList[i][5] +
                                 "</td></tr>");
            }

            sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                 "<span style='color:blue; font-weight:bold;'>Наименование клуба:</span>" +
                                 "</td><td style='padding: 0 9px 5px 9px;'>" +
                                 req.ClubsName + "</td></tr>" +
                                 "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                 "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                 "</td><td style='padding: 0 9px 5px 9px;'>" +
                                 req.ChiefFio + "</td></tr>" +
                                 "</table>");

            StringBuilder mailbodyAdm = new StringBuilder();
            mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                "Поступила заявка на участие в конкурсе!<br /><br />" +
                                "<strong>" + competitionName + "</strong><br />" +
                                 sameEmailData.ToString());

            StringBuilder filesLinks = new StringBuilder();
            filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
            int counter = 1;
            foreach (string fName in req.Links)
            {
                if (fName.ToLower().StartsWith("http"))
                    filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                else
                    filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                counter++;
            }

            mailbodyAdm.Append(filesLinks.ToString());
            mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
            mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

            var config = new ConfigFile();
            string adminMail = config.GetParam(admMailParamName, true);
            if (adminMail == "-1")
            {
                DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
            }
            //если письмо не отослано, то..
            if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
            {
                DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
            }

            #endregion

            Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

            _pag.Session[EnumsHelper.GetSessionName(Sport.self)] = null;
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Sport_football()

        /// <summary>Метод формирует html-код формы заявки для спортивного Конкурса</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Sport_football()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];
            req.CompetitionName = EnumsHelper.GetSportCode(Sport.self);
            req.SubsectionName = EnumsHelper.GetSportValue(Sport.football);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Спортивном турнире</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование спортивного клуба (команды)"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Место проведения тренировок спортивного клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Место проведения тренировок спортивного клуба</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Название комплекса, Индекс, Регион, Город, Улица, Дом (Корпус, Строение)");
            txtBox.Text = req.Addr1; txtBox.ID = "txtBox_Addr1"; txtBox.MaxLength = 250; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Контактный телефон руководителя (или участника)</td>"));             // Контактный телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на соблюдение правил и обработку информации

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Согласие на обработку персональный данных
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            CheckBox chkBox = new CheckBox(); chkBox.CssClass = "chkBox_c"; chkBox.ID = "chkBox_PdnProcessing";
            chkBox.Checked = req.PdnProcessing; panel.Controls.Add(chkBox);
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Я (или родитель – если Вам нет еще 14 лет) даю свое согласие на обработку представленных мной персональных данных, для регистрации меня как участника мероприятия, а именно: ФИО, возраст, место учебы/работы, класс/должность, Контактный телефон, адрес электронной почты. Подтверждаю, что даю свое согласие на размещение моих фотографий по итогам проведения мероприятия на сайте, а также в официальных группах организации в социальных сетях. В случае победы в конкурсе, даю согласие на публикацию результатов на сайте, а также в официальной группе организации в социальных сетях.</p>"));
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Согласие и гарантия соблюдения Положения турнира "Вперед к победе"
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            chkBox = new CheckBox(); chkBox.CssClass = "chkBox_c"; chkBox.ID = "chkBox_PublicAgreement";
            chkBox.Checked = req.PublicAgreement; panel.Controls.Add(chkBox);
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Я (или родитель – если Вам нет еще 14 лет) соглашаюсь и гарантирую соблюдать Положение турнира \"Вперед к победе\"</p>"));
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("</table>"));

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Sport_football;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Sport_football

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Sport_football(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion   

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование клуба

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место проведения тренировок спортивного клуба +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Addr1");

                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 3)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Addr1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Согласие и гарантия соблюдения Положения турнира "Вперед к победе"

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetSportCode(Sport.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailfootball";
                string fileUrlPath = _imgUrlPathSport.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" + 
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Наименование спортивного клуба (команды):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.ClubsName + "</td></tr>" +
                                    
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Место проведения тренировок спортивного клуба:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Addr1 + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Sport.self)] = null;
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Sport_basketball()

        /// <summary>Метод формирует html-код формы заявки для спортивного Конкурса</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Sport_basketball()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];
            req.CompetitionName = EnumsHelper.GetSportCode(Sport.self);
            req.SubsectionName = EnumsHelper.GetSportValue(Sport.basketball);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Спортивном турнире</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Cоревнования проводятся 19 - 22 февраля 2024 года <strong>(возрастные группы 2009 - 2010 г.р., 2006 - 2008 г.р.)</strong>, время и место проведения Турнира будет сообщено дополнительно.</p>"));
            panelResult.Controls.Add(panel);
           
            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);
          

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование спортивного клуба (команды)"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Место проведения тренировок спортивного клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Место проведения тренировок спортивного клуба</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Название комплекса, Индекс, Регион, Город, Улица, Дом (Корпус, Строение)");
            txtBox.Text = req.Addr1; txtBox.ID = "txtBox_Addr1"; txtBox.MaxLength = 250; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Контактный телефон руководителя (или участника)</td>"));             // Контактный телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на соблюдение правил и обработку информации

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Согласие на обработку персональный данных
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            CheckBox chkBox = new CheckBox(); chkBox.CssClass = "chkBox_c"; chkBox.ID = "chkBox_PdnProcessing";
            chkBox.Checked = req.PdnProcessing; panel.Controls.Add(chkBox);
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Я (или родитель – если Вам нет еще 14 лет) даю свое согласие на обработку представленных мной персональных данных, для регистрации меня как участника мероприятия, а именно: ФИО, возраст, место учебы/работы, класс/должность, Контактный телефон, адрес электронной почты. Подтверждаю, что даю свое согласие на размещение моих фотографий по итогам проведения мероприятия на сайте, а также в официальных группах организации в социальных сетях. В случае победы в конкурсе, даю согласие на публикацию результатов на сайте, а также в официальной группе организации в социальных сетях.</p>"));
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Согласие и гарантия соблюдения Положения турнира "Вперед к победе"
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            chkBox = new CheckBox(); chkBox.CssClass = "chkBox_c"; chkBox.ID = "chkBox_PublicAgreement";
            chkBox.Checked = req.PublicAgreement; panel.Controls.Add(chkBox);
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Я (или родитель – если Вам нет еще 14 лет) соглашаюсь и гарантирую соблюдать Положение турнира \"Вперед к победе\"</p>"));
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("</table>"));

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Sport_basketball;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Sport_basketball

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Sport_basketball(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion      

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование клуба

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место проведения тренировок спортивного клуба +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Addr1");

                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 3)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Addr1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Согласие и гарантия соблюдения Положения турнира "Вперед к победе"

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetSportCode(Sport.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailbasketball";
                string fileUrlPath = _imgUrlPathSport.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                            "<tr><td style='padding: 0 9px 5px 9px;'>" +
                            "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                            "</td><td style='padding: 0 9px 5px 9px;'>" +
                            req.EducationalOrganization + "</td></tr>" +
                            "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                            "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                            "</td><td style='padding: 0 9px 5px 9px;'>" +
                            req.WorkComment +
                            "</td></tr>" +
                            "<tr><td style='padding: 0 9px 5px 9px;'>" +
                            "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                            "</td><td style='padding: 0 9px 5px 9px;'>" +
                            req.Region + "</td></tr>" +
                            "<tr><td style='padding: 0 9px 5px 9px;'>" +
                            "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                            "</td><td style='padding: 0 9px 5px 9px;'>" +
                            req.Area + "</td></tr>" +
                            "<tr><td style='padding: 0 9px 5px 9px;'>" +
                            "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                            "</td><td style='padding: 0 9px 5px 9px;'>" +
                            req.City + "</td></tr>" + 
                            "<tr><td style='padding: 0 9px 5px 9px;'>" +
                             "<span style='color:blue; font-weight:bold;'>Наименование спортивного клуба (команды):</span>" +
                             "</td><td style='padding: 0 9px 5px 9px;'>" +
                             req.ClubsName + "</td></tr>" +
                             "<tr><td style='padding: 0 9px 5px 9px;'>" +
                             "<span style='color:blue; font-weight:bold;'>Место проведения тренировок спортивного клуба:</span>" +
                             "</td><td style='padding: 0 9px 5px 9px;'>" +
                             req.Addr1 + "</td></tr>" +
                             "<tr><td style='padding: 0 9px 5px 9px;'>" +
                             "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                             "</td><td style='padding: 0 9px 5px 9px;'>" +
                             req.ChiefFio + "</td></tr>" +
                             "<tr><td style='padding: 0 9px 5px 9px;'>" +
                             "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                             "</td><td style='padding: 0 9px 5px 9px;'>" +
                             req.ChiefPosition + "</td></tr>" +
                             "<tr><td style='padding: 0 9px 5px 9px;'>" +
                             "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                             "</td><td style='padding: 0 9px 5px 9px;'>" +
                             req.ChiefEmail + "</td></tr>" +
                             "<tr><td style='padding: 0 9px 5px 9px;'>" +
                             "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                             "</td><td style='padding: 0 9px 5px 9px;'>" +
                             req.ChiefTelephone +
                             "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _pag.Session[EnumsHelper.GetSessionName(Sport.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Sport_volleyball()

        /// <summary>Метод формирует html-код формы заявки для спортивного Конкурса</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Sport_volleyball()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];
            req.CompetitionName = EnumsHelper.GetSportCode(Sport.self);
            req.SubsectionName = EnumsHelper.GetSportValue(Sport.volleyball);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Спортивном турнире</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование спортивного клуба (команды)"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Место проведения тренировок спортивного клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Место проведения тренировок спортивного клуба</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Название комплекса, Индекс, Регион, Город, Улица, Дом (Корпус, Строение)");
            txtBox.Text = req.Addr1; txtBox.ID = "txtBox_Addr1"; txtBox.MaxLength = 250; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Контактный телефон руководителя (или участника)</td>"));             // Контактный телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на соблюдение правил и обработку информации

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Согласие на обработку персональный данных
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            CheckBox chkBox = new CheckBox(); chkBox.CssClass = "chkBox_c"; chkBox.ID = "chkBox_PdnProcessing";
            chkBox.Checked = req.PdnProcessing; panel.Controls.Add(chkBox);
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Я (или родитель – если Вам нет еще 14 лет) даю свое согласие на обработку представленных мной персональных данных, для регистрации меня как участника мероприятия, а именно: ФИО, возраст, место учебы/работы, класс/должность, Контактный телефон, адрес электронной почты. Подтверждаю, что даю свое согласие на размещение моих фотографий по итогам проведения мероприятия на сайте, а также в официальных группах организации в социальных сетях. В случае победы в конкурсе, даю согласие на публикацию результатов на сайте, а также в официальной группе организации в социальных сетях.</p>"));
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Согласие и гарантия соблюдения Положения турнира "Вперед к победе"
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            chkBox = new CheckBox(); chkBox.CssClass = "chkBox_c"; chkBox.ID = "chkBox_PublicAgreement";
            chkBox.Checked = req.PublicAgreement; panel.Controls.Add(chkBox);
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Я (или родитель – если Вам нет еще 14 лет) соглашаюсь и гарантирую соблюдать Положение турнира \"Вперед к победе\"</p>"));
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("</table>"));

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Sport_volleyball;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Sport_volleyball

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Sport_volleyball(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion      

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование клуба

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место проведения тренировок спортивного клуба +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Addr1");

                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 3)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Addr1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Согласие и гарантия соблюдения Положения турнира "Вперед к победе"

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetSportCode(Sport.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailvolleyball";
                string fileUrlPath = _imgUrlPathSport.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                    "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                    dt.ToShortTimeString() + ")" +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.SubsectionName + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                  "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                  "</td></tr>");

                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" + 
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Наименование спортивного клуба (команды):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.ClubsName + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Место проведения тренировок спортивного клуба:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Addr1 + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.ChiefFio + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.ChiefPosition + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.ChiefEmail + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _pag.Session[EnumsHelper.GetSessionName(Sport.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Sport_stendStrelba()

        /// <summary>Метод формирует html-код формы заявки для спортивного Конкурса</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Sport_stendStrelba()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];
            req.CompetitionName = EnumsHelper.GetSportCode(Sport.self);
            req.SubsectionName = EnumsHelper.GetSportValue(Sport.stendStrelba);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Спортивном турнире</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion


            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование спортивного клуба (кружка)"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // КоКонтактный телефон педагогаммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Sport_stendStrelba;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Sport_stendStrelba

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Sport_stendStrelba(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion   

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование клуба

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                req.ClubsName = txtBox.Text;

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Согласие на предоставление медицинской справки

                //chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_ProcMedicine");
                //if (!chkBox.Checked)
                //{
                //    checker = false;
                //    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.ProcMedicine = true;
                //    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                //}

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetSportCode(Sport.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "";
                string fileUrlPath = _imgUrlPathSport.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" + 
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование клуба (кружка):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _pag.Session[EnumsHelper.GetSessionName(Sport.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Sport_shahmaty()

        /// <summary>Метод формирует html-код формы заявки для спортивного Конкурса</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Sport_shahmaty()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];
            req.CompetitionName = EnumsHelper.GetSportCode(Sport.self);
            req.SubsectionName = EnumsHelper.GetSportValue(Sport.shahmaty);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Спортивном турнире</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();
            
            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование спортивного клуба (кружка)"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Клуб 4 ладьи");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Sport_shahmaty;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Sport_shahmaty

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Sport_shahmaty(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion   

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование клуба

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                req.ClubsName = txtBox.Text;

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Согласие на предоставление медицинской справки

                //chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_ProcMedicine");
                //if (!chkBox.Checked)
                //{
                //    checker = false;
                //    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.ProcMedicine = true;
                //    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                //}

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                int requestNumber = competitionsWork.InsertOneRequest(ref req);
                if (requestNumber == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetSportCode(Sport.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailshahmaty";
                string fileUrlPath = _imgUrlPathSport.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование клуба (кружка):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _pag.Session[EnumsHelper.GetSessionName(Sport.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Sport_shashki()

        /// <summary>Метод формирует html-код формы заявки для спортивного Конкурса</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Sport_shashki()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];
            req.CompetitionName = EnumsHelper.GetSportCode(Sport.self);
            req.SubsectionName = EnumsHelper.GetSportValue(Sport.shashki);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Спортивном турнире</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название клуба

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование спортивного клуба (кружка)"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Sport_shashki;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Sport_shashki

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Sport_shashki(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Sport.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование клуба

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                req.ClubsName = txtBox.Text;

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Согласие на предоставление медицинской справки

                //chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_ProcMedicine");
                //if (!chkBox.Checked)
                //{
                //    checker = false;
                //    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.ProcMedicine = true;
                //    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                //}

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetSportCode(Sport.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailshashky";
                string fileUrlPath = _imgUrlPathSport.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" + 
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование клуба (кружка):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _pag.Session[EnumsHelper.GetSessionName(Sport.self)] = null;
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Theatre(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="cName">условное наименование конкурса. Может быть - foto, literary, theatre</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Theatre(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(subName);

            if (subName == EnumsHelper.GetTheatreCode(Theatre.hudSlovo))
            {
                panelResult = RequestPanel_Theatre_hudSlovo();
            }
            else if (subName == EnumsHelper.GetTheatreCode(Theatre.teatrIskusLitMuzKom) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.teatrIskusSpekt) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.teatrIskusMultiGanr))
            {
                panelResult = RequestPanel_Theatre_teatrIskus(subName);
            }
            else if (subName == EnumsHelper.GetTheatreCode(Theatre.xoreoBalniyTanets) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.xoreoClassichTanets) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.xoreoEstradTanets) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.xoreoNarodTanets) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.xoreoStilNarodTanets) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.xoreoSovremTanets) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.xoreoCircIskus) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.xoreoKadeti) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.xoreoCherliding))
            {
                panelResult = RequestPanel_Theatre_xoreo(subName);
            }
            else if (subName == EnumsHelper.GetTheatreCode(Theatre.vokalAkademVokal) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.vokalEstradVokal) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.vokalFolklor))
            {
                panelResult = RequestPanel_Theatre_vokal(subName);
            }
            else if (subName == EnumsHelper.GetTheatreCode(Theatre.insrumZanrAnsambli) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.insrumZanrDuhovieUdarnInstrum) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.insrumZanrFortepiano) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.insrumZanrGitara) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.insrumZanrNarodnieInstrum) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.insrumZanrOrkestri) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.insrumZanrSintezator) ||
                     subName == EnumsHelper.GetTheatreCode(Theatre.insrumZanrStrunnoSmichkovieInstrumenti))
            {
                panelResult = RequestPanel_Theatre_instrum(subName);
            }
            

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Theatre_hudSlovo()

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Theatre_hudSlovo()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Theatre.self)];
            req.CompetitionName = EnumsHelper.GetTheatreCode(Theatre.self);
            req.SubsectionName = EnumsHelper.GetTheatreValue(Theatre.hudSlovo);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе творческого мастерства \"Мастер сцены\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Автор и название произведения

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Автор и название произведения</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Ситников А.Ю., Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Техническое сопровождение

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Техническое сопровождение</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Наличие видеоряда, музыкального сопровождения и другое");
            txtBox.Text = req.TechnicalInfo; txtBox.ID = "txtBox_TechnicalInfo"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарии

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою работу. Возможный вариант описания:\n" +
                                                     "Кто автор постановки. О актёрах (возможно фамилии и имена), участвующих в постановке. " +
                                                     "Что я хочу сказать людям, которые будут просматривать и оценивать её.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование группы, кружка, коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));          // Наименование группы, ансамбля, спорт кружка.
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования группы, кружка, коллектива, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Theatre_hudSlovo;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Theatre_hudSlovo

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Theatre_hudSlovo(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Theatre.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Автор и название произведения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Техническое сопровождение

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_TechnicalInfo");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.TechnicalInfo = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Комментарий

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkComment");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkComment = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование группы, кружка, коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                /*if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }*/

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetTheatreCode(Theatre.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailslovo";
                string fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");     //на самом деле для этого конкурса эта переменная не применяется, так как там прямые ссылки на ролики в ютубе
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +

                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Автор и название произведения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Техническое сопровождение:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.TechnicalInfo +
                                     "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование группы, кружка, коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>" +
                                     
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Theatre.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Theatre_teatrIskus(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование конкурса</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Theatre_teatrIskus(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Theatre.self)];
            req.CompetitionName = EnumsHelper.GetTheatreCode(Theatre.self);
            req.SubsectionName = EnumsHelper.GetTheatreValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе творческого мастерства \"Мастер сцены\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Название группы, кружка, коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Название группы, кружка, коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования группы, кружка, коллектива, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Название работы

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарии

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою работу. Возможный вариант описания:\n" +
                                                     "Кто автор постановки. О актёрах (возможно фамилии и имена), участвующих в постановке. " +
                                                     "Что я хочу сказать людям, которые будут просматривать и оценивать её.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Theatre_teatrIskus;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Theatre_teatrIskus

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Theatre_teatrIskus(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Theatre.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Комментарий

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkComment");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkComment = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region Проверка добавления участников

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов)";
                }

                #endregion

                #region Проверка добавления Педагогов

                if (req.ChiefFios.Count == 0)
                {
                    checker = false;
                    errTxt += "  Добавьте педагога(ов) (учителей).";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetTheatreCode(Theatre.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailtheatre";
                string fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");     //на самом деле для этого конкурса эта переменная не применяется, так как там прямые ссылки на ролики в ютубе
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>"+
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Автор и название произведения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                     "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkComment +
                                     "</td></tr>");

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                 "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Theatre.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Theatre_xoreo(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Theatre_xoreo(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Theatre.self)];
            req.CompetitionName = EnumsHelper.GetTheatreCode(Theatre.self);
            req.SubsectionName = EnumsHelper.GetTheatreValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе творческого мастерства \"Мастер сцены\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Возрастная категория

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Возрастная категория</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.mladshaya));
            ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.srednaya));
            ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.starshaya));
            ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.smeshannaya));
            ddl.ID = "DropDown_AgeСategories";
            ddl.SelectedValue = req.AgeСategory;
            ddl.Width = 200;
            panel.Controls.Add(ddl);

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("Младшая - 7-10 лет, Средняя - 11-13 лет, Старшая - 14-18 лет, Смешанная - 7-18 лет</td></tr>"));

            #endregion

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование ансамбля, труппы, театрального кружка

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование ансамбля, труппы, театрального кружка"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования ансамбля, труппы, театрального кружка, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            Content_Audio_Common(ref panelResult, ref req, _pathToTheatreFolder, _imgUrlPathTheatre);
            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Theatre_xoreo;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Theatre_xoreo

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Theatre_xoreo(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Theatre.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование ансамбля, труппы, театрального кружка

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_AgeСategories");

                //if (ddl.SelectedValue == "НЕТ")
                //{
                //    checker = false;
                //    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                //}
                //else
                //{
                req.AgeСategory = ddl.SelectedValue;
                ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                //}

                //ИСКЛЮЧЕНИЯ ДЛЯ КОНКУРСА МАСТЕР СЦЕНЫ "ХОРЕОГРАФИЯ"
                ////// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                ////if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                ////{
                ////    checker = false;
                ////    errTxt = "Участники команды должны быть в одной возрастной категории.";
                ////}

                //// Проверка попадания участников в одну из возрастных категорий
                //if (checker)
                //{
                //    if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                //    {
                //        checker = false;
                //        errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                //    }
                //    else
                //        req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                //}

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetTheatreCode(Theatre.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailkhoreografia";
                string fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                        "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                        "</td><td style='padding: 0 9px 5px 9px;'>" +
                                        fios[i] + " / " + agies[i] +
                                        "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование ансамбля, труппы, театрального кружка:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>");

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                        "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                        "</td><td style='padding: 0 9px 5px 9px;'>" +
                                        req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                        "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                //"<tr><td style='padding: 0 9px 5px 9px;'>" +
                //                     "<span style='color:blue; font-weight:bold;'>Количество участников в конкурсе:</span>" +
                //                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                //                     req.PartyCount +
                //                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Theatre.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Theatre_vokal(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Theatre_vokal(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Theatre.self)];
            req.CompetitionName = EnumsHelper.GetTheatreCode(Theatre.self);
            req.SubsectionName = EnumsHelper.GetTheatreValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе творческого мастерства \"Мастер сцены\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Номинация

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Техническое задание: сколько нужно микрофонов, стульев, стоек, какие подключения и др.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название номера

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Хронометраж номера (минуты секунды)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Хронометраж номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));

            string tmp = "";

            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 120;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "минуты (цифрой)");
            if (req.Timing_min >= 0)
            {
                tmp = req.Timing_min.ToString();
            }
            txtBox.Text = tmp; txtBox.ID = "txtBox_Timing_min"; txtBox.MaxLength = 3; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 120;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "секунды  (цифрой)");
            tmp = "";
            if (req.Timing_sec >= 0)
            {
                tmp = req.Timing_sec.ToString();
            }
            txtBox.Text = tmp; txtBox.ID = "txtBox_Timing_sec"; txtBox.MaxLength = 2; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("укажите длительность номера, первое поле - минуты (цифрами), второе поле - секунды (цифрами)</td></tr>"));

            #endregion

            #region Название ансамбля, коллектива, объединения

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Название ансамбля, коллектива, объединения"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Названия, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Theatre_vokal;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Theatre_vokal

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Theatre_vokal(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Theatre.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название номера

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - минуты

                TextBox txtBox_min = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Timing_min");
                int min = StringToNum.ParseInt(txtBox_min.Text.Trim());
                if (min < 0)
                {
                    checker = false;
                    txtBox_min.BorderWidth = 1; txtBox_min.BorderColor = Color.Red; txtBox_min.BackColor = Color.Bisque;
                }
                else
                {
                    req.Timing_min = min;
                    txtBox_min.BorderWidth = 0; txtBox_min.BorderColor = Color.Transparent; txtBox_min.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - секунды

                TextBox txtBox_sec = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Timing_sec");
                int sec = StringToNum.ParseInt(txtBox_sec.Text.Trim());
                if (sec < 0)
                {
                    checker = false;
                    txtBox_sec.BorderWidth = 1; txtBox_sec.BorderColor = Color.Red; txtBox_sec.BackColor = Color.Bisque;
                }
                else
                {
                    req.Timing_sec = sec;
                    txtBox_sec.BorderWidth = 0; txtBox_sec.BorderColor = Color.Transparent; txtBox_sec.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - общая проверка

                if (min == 0 && sec == 0)
                {
                    checker = false;
                    txtBox_min.BorderWidth = 1; txtBox_min.BorderColor = Color.Red; txtBox_min.BackColor = Color.Bisque;
                    txtBox_sec.BorderWidth = 1; txtBox_sec.BorderColor = Color.Red; txtBox_sec.BackColor = Color.Bisque;
                }

                #endregion

                #region Название ансамбля, коллектива, объединения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Комментарий

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkComment");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkComment = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Проверка добавления Педагогов

                if (req.ChiefFios.Count == 0)
                {
                    checker = false;
                    errTxt += "  Добавьте педагога(ов) (учителей).";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetTheatreCode(Theatre.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailvoice";
                string fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" + "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название номера:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Хронометраж:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Timing_min + " мин. " + req.Timing_sec + " сек.</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название ансамбля, коллектива, объединения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>");

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Theatre.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Theatre_instrum(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Theatre_instrum(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Theatre.self)];
            req.CompetitionName = EnumsHelper.GetTheatreCode(Theatre.self);
            req.SubsectionName = EnumsHelper.GetTheatreValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе творческого мастерства \"Мастер сцены\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Номинация

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Название номера

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Хронометраж номера (минуты секунды)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Хронометраж номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));

            string tmp = "";

            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 120;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "минуты (цифрой)");
            if (req.Timing_min >= 0)
            {
                tmp = req.Timing_min.ToString();
            }
            txtBox.Text = tmp; txtBox.ID = "txtBox_Timing_min"; txtBox.MaxLength = 3; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 120;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "секунды  (цифрой)");
            tmp = "";
            if (req.Timing_sec >= 0)
            {
                tmp = req.Timing_sec.ToString();
            }
            txtBox.Text = tmp; txtBox.ID = "txtBox_Timing_sec"; txtBox.MaxLength = 2; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("укажите длительность номера, первое поле - минуты (цифрами), второе поле - секунды (цифрами)</td></tr>"));

            #endregion

            #region Название ансамбля, коллектива, объединения

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Название ансамбля, коллектива, объединения"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Названия, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Техническое задание: сколько нужно микрофонов, стульев, стоек, какие подключения и др.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Theatre_instrum;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Theatre_instrum

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Theatre_instrum(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Theatre.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название номера

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - минуты

                TextBox txtBox_min = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Timing_min");
                int min = StringToNum.ParseInt(txtBox_min.Text.Trim());
                if (min < 0)
                {
                    checker = false;
                    txtBox_min.BorderWidth = 1; txtBox_min.BorderColor = Color.Red; txtBox_min.BackColor = Color.Bisque;
                }
                else
                {
                    req.Timing_min = min;
                    txtBox_min.BorderWidth = 0; txtBox_min.BorderColor = Color.Transparent; txtBox_min.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - секунды

                TextBox txtBox_sec = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Timing_sec");
                int sec = StringToNum.ParseInt(txtBox_sec.Text.Trim());
                if (sec < 0)
                {
                    checker = false;
                    txtBox_sec.BorderWidth = 1; txtBox_sec.BorderColor = Color.Red; txtBox_sec.BackColor = Color.Bisque;
                }
                else
                {
                    req.Timing_sec = sec;
                    txtBox_sec.BorderWidth = 0; txtBox_sec.BorderColor = Color.Transparent; txtBox_sec.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - общая проверка

                if (min == 0 && sec == 0)
                {
                    checker = false;
                    txtBox_min.BorderWidth = 1; txtBox_min.BorderColor = Color.Red; txtBox_min.BackColor = Color.Bisque;
                    txtBox_sec.BorderWidth = 1; txtBox_sec.BorderColor = Color.Red; txtBox_sec.BackColor = Color.Bisque;
                }

                #endregion

                #region Название ансамбля, коллектива, объединения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Комментарий

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkComment");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkComment = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Количество участников I отборочного тура согласно протоколу отборочного тура

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ProtocolPartyCount");
                //int res = StringToNum.ParseInt(txtBox.Text);
                //if (res == -1 || res <= 0)
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //    errTxt += "  Количество участников I отборочного тура согласно протоколу должно быть больше 0";
                //}
                //else
                //{
                //    req.ProtocolPartyCount = res;
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Проверка добавления Педагогов

                if (req.ChiefFios.Count == 0)
                {
                    checker = false;
                    errTxt += "  Добавьте педагога(ов) (учителей).";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetTheatreCode(Theatre.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailensemble";
                string fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" + 
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название номера:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Хронометраж:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Timing_min + " мин. " + req.Timing_sec + " сек.</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название ансамбля, коллектива, объединения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>"
                                     );

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Theatre.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Clothes_TheatreModa()

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Clothes_TheatreModa(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Clothes.self)];
            req.CompetitionName = EnumsHelper.GetClothesCode(Clothes.self);
            req.SubsectionName = EnumsHelper.GetClothesValueFromCode(subName);
            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе \"Индустрия моды\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Номинация

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            //#region Возрастная категория

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Возрастная категория</td>"));
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            //ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.mladshaya));
            //ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.srednaya));
            //ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.starshaya));
            //ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.profi));
            //ddl.ID = "DropDown_AgeСategories";
            //ddl.SelectedValue = req.AgeСategory;
            //ddl.Width = 200;
            //panel.Controls.Add(ddl);

            //panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            //panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            //panel.Controls.Add(new LiteralControl("Младшая - 6-9 лет, Средняя - 10-13 лет, Старшая - 14-18 лет, Профи - 19-23 лет.</td></tr>"));

            //#endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название коллекции

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название коллекции</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерние платья");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Название коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Названия, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            if (subName == EnumsHelper.GetClothesCode(Clothes.tmavtorcollect) ||
                subName == EnumsHelper.GetClothesCode(Clothes.tmindividpokaz) ||
                subName == EnumsHelper.GetClothesCode(Clothes.tmcollectpokaz) ||
                subName == EnumsHelper.GetClothesCode(Clothes.tmnetradicmaterial))
            {
                Content_Image_Common(ref panelResult, ref req, _pathToClothesFolder, _imgUrlPathClothes);
                Content_VideoLink_Common(ref panelResult, ref req);
            }
            else if (subName == EnumsHelper.GetClothesCode(Clothes.tmissledovproject))
            {
                Content_Presentaion_Common(ref panelResult, ref req, _pathToClothesFolder, _imgUrlPathClothes);
            }

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Clothes_TheatreModa;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Clothes_TheatreModa

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Clothes_TheatreModa(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Clothes.self)];
                req.CompetitionName = EnumsHelper.GetClothesCode(Clothes.self);
                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название коллекции

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Количество участников I отборочного тура согласно протоколу отборочного тура

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ProtocolPartyCount");
                //int res = StringToNum.ParseInt(txtBox.Text);
                //if (res == -1 || res <= 0)
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //    errTxt += "  Количество участников I отборочного тура согласно протоколу должно быть больше 0";
                //}
                //else
                //{
                //    req.ProtocolPartyCount = res;
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Проверка добавления Педагогов

                if (req.ChiefFios.Count == 0)
                {
                    checker = false;
                    errTxt += "  Добавьте педагога(ов) (учителей)";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомление администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetClothesCode(Clothes.self)) + ". Номинация «" + req.SubsectionName + "»";
                var fileUrlPath = _imgUrlPathClothes.Replace("~/", "");
                string admMailParamName = "admmailmoda";
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");

                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" + 
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название коллекции:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Хронометраж:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Timing_min + " мин. " + req.Timing_sec + " сек.</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>");

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Clothes.self)] = null;
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Toponim(string subName)

        /// <summary>Метод формирует html-код формы заявки для Конкурса "Черноморский флот Великой Отечественной войны в топонимике городов России"</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Toponim(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(subName);

            if (subName == EnumsHelper.GetToponimCode(Toponim.toponimika))
            {
                panelResult = RequestPanel_Toponim_toponimika();
            }

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Toponim_toponimika()

        /// <summary>Метод формирует html-код формы заявки для одной номинации (пока условно, потому что у этого конкурса нет номинаций)</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Toponim_toponimika()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Toponim.self)];
            req.CompetitionName = EnumsHelper.GetToponimCode(Toponim.self);
            req.SubsectionName = EnumsHelper.GetToponimValue(Toponim.toponimika);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма отправки ответов на вопросы<br/>для Конкурса \"Черноморский флот Великой Отечественной войны в топонимике городов России\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            #region Код заполнения полей ФИО, Дата рождения, Комментарии к работе

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО/Дата рождения</td>"));                        // ФИО/Дата рождения
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 392;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Ситников Андрей Игоревич");
            txtBox.Text = req.Fio; txtBox.ID = "txtBox_Fio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 80;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "04.11.2001");
            txtBox.Text = req.Age; txtBox.ID = "txtBox_Age"; txtBox.MaxLength = 10; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));                          // Название работы
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою работу");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация (полностью)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Образовательная организация (полностью)</td>"));    // Образовательная организация (полностью)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Средняя образовательная школа № 32 города Мытищи");
            txtBox.Text = req.EducationalOrganization; txtBox.ID = "txtBox_EducationalOrganization"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если вы не учащийся, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Структурное подразделение

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Структурное подразделение</td>"));    // Структурное подразделение
            panel.Controls.Add(new LiteralControl("<td></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Структурное подразделение (дополнительная информация)");
            txtBox.Text = req.Division; txtBox.ID = "txtBox_Division"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактная информация участника

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта участника</td>"));          // Электронная почта участника
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            //txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "a.sitnikov@mail.ru");
            //txtBox.Text = req.Email; txtBox.ID = "txtBox_Email"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            //panel.Controls.Add(new LiteralControl("</td></tr>"));

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Контактный телефон участника</td>"));          // Контактный телефон участника
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            //txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89169985137 или +79169985137");
            //txtBox.Text = req.Telephone; txtBox.ID = "txtBox_Telephone"; txtBox.MaxLength = 12; panel.Controls.Add(txtBox);
            //panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Адрес

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Регион</td>"));                               // Регион
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Московская область");
            txtBox.Text = req.Region; txtBox.ID = "txtBox_Region"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Город</td>"));                               // Город
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            List<string> tmpList = XmlResources.GetTownsPrefList();
            if (tmpList != null)
            {
                foreach (string item in tmpList)
                {
                    ddl.Items.Add(item);
                }
            }
            ddl.ID = "DropDown_TownPrefs";
            ddl.SelectedValue = req.CityPref;
            ddl.Width = 200;
            panel.Controls.Add(ddl);

            panel.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 294;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Долгопрудный");
            txtBox.Text = req.City; txtBox.ID = "txtBox_City"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Контактный телефон руководителя (или участника)</td>"));             // Контактный телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ответов на вопросы

            Content_DocRar_Common(ref panelResult, ref req, _pathToToponimFolder, _imgUrlPathToponim);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Toponim_toponimika;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Toponim_toponimika

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ОТВЕТЫ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Toponim_toponimika(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Toponim.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                TextBox txtBox = new TextBox();

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");

                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Комментарий

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkComment");
                req.WorkComment = txtBox.Text.Trim();
                /*if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkComment = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }*/

                #endregion

                #region Образовательная организация (полностью) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.EducationalOrganization = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 3)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.EducationalOrganization = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Структурное подразделение

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Division");
                if (!string.IsNullOrEmpty(txtBox.Text))
                {
                    req.Division = txtBox.Text.Trim();
                }

                #endregion

                #region Электронная почта участника

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Email");
                //if (!Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.emailPattern))
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.Email = txtBox.Text.Trim();
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Контактный телефон участника

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Telephone");
                //if (!Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.Telephone = txtBox.Text.Trim();
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");

                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefEmail = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefEmail = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefTelephone = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefTelephone = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region Итоговые операции

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetToponimCode(Toponim.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailtoponim";
                string fileUrlPath = _imgUrlPathToponim.Replace("~/", "");
                string fio = req.Fio, age1 = req.Age.ToString();

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fio +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     age1 +
                                     "</td></tr>" +
                                     
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                     "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkComment +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.EducationalOrganization + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Структурное подразделение:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Division + "</td></tr>" +
                                     //"<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     //"<span style='color:blue; font-weight:bold;'>Электронная почта участника:</span>" +
                                     //"</td><td style='padding: 0 9px 5px 9px;'>" +
                                     //req.Email + "</td></tr>" +
                                     //"<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     //"<span style='color:blue; font-weight:bold;'>Контактный телефон участника:</span>" +
                                     //"</td><td style='padding: 0 9px 5px 9px;'>" +
                                     //req.Telephone + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Region + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr></table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Toponim.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }

        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Robotech(string subName)

        /// <summary>Метод формирует html-код формы заявки для Конкурса по Робототехнике и моделированию 3D ручкой «Шаг в будущее»</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Robotech(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(EnumsHelper.GetRobotechValue(Robotech.self)); // CheckReqestOnOff(subName);

            if (subName == EnumsHelper.GetRobotechCode(Robotech.robototechnika) ||
                subName == EnumsHelper.GetRobotechCode(Robotech.robototechnikaproject) ||
                subName == EnumsHelper.GetRobotechCode(Robotech.robototechnika3dmodel) ||
                subName == EnumsHelper.GetRobotechCode(Robotech.tinkercad) ||
                subName == EnumsHelper.GetRobotechCode(Robotech.programmproject))
            {
                panelResult = RequestPanel_Robotech_all(subName);
            }

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Robotech_all()

        /// <summary>Метод формирует html-код формы заявки для Конкурса по Робототехнике и моделированию 3D ручкой «Шаг в будущее»</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Robotech_all(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Robotech.self)];
            req.CompetitionName = EnumsHelper.GetRobotechCode(Robotech.self);
            req.SubsectionName = EnumsHelper.GetRobotechValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе по Робототехнике и моделированию 3D ручкой «Шаг в будущее»</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название команды

            /*panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название команды</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Мастера пайки");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));*/

            #endregion

            #region Название работы

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Манипулятор");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Контактный телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Robotech_robototechnika;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Robotech_robototechnika

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Robotech_robototechnika(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Robotech.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion   

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование команды

                /*txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }*/

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }
 
                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetRobotechCode(Robotech.self)) + ". Номинация «" + req.SubsectionName + "»";
               
                string admMailParamName = "admmailrobotech";
                string fileUrlPath = _imgUrlPathRobotech.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" + 
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Robotech.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Kultura(string subName)

        /// <summary>Метод формирует html-код формы заявки для Конкурса творческих и исследовательских работ «Открытый мир»</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Kultura(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(EnumsHelper.GetKulturaValue(Kultura.self));

            if (//subName == EnumsHelper.GetKulturaCode(Kultura.vossoedCrimaSRossiei) ||
                //subName == EnumsHelper.GetKulturaCode(Kultura.zashitaobsihgranits) ||
                //subName == EnumsHelper.GetKulturaCode(Kultura.kultrnNasledieCrima) ||
                //subName == EnumsHelper.GetKulturaCode(Kultura.krimskyMostVSZ) ||
                //subName == EnumsHelper.GetKulturaCode(Kultura.iSeeCrimea) ||
                subName == EnumsHelper.GetKulturaCode(Kultura.iSeeCrimeaEn) ||
                subName == EnumsHelper.GetKulturaCode(Kultura.presentaionEn) ||
                subName == EnumsHelper.GetKulturaCode(Kultura.audioGaid) ||
                subName == EnumsHelper.GetKulturaCode(Kultura.publishVkontakte) ||
                subName == EnumsHelper.GetKulturaCode(Kultura.intellektualKviz))
            {
                panelResult = RequestPanel_Kultura_all(subName);
            }

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Kultura_all(string subName)

        /// <summary>Метод формирует html-код формы заявки для 3-х номинаций Конкурса творческих и исследовательских работ «Открытый мир»</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Kultura_all(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Kultura.self)];
            req.CompetitionName = EnumsHelper.GetKulturaCode(Kultura.self);
            req.SubsectionName = EnumsHelper.GetKulturaValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе творческих и исследовательских работ «Открытый мир»</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));                          // Название работы
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            if (subName == EnumsHelper.GetKulturaCode(Kultura.iSeeCrimeaEn))
            {
                Content_DocRar_Common(ref panelResult, ref req, _pathToKulturaFolder, _imgUrlPathKultura);
            }
            else if (subName == EnumsHelper.GetKulturaCode(Kultura.presentaionEn))
            {
                Content_Presentaion_Common(ref panelResult, ref req, _pathToKulturaFolder, _imgUrlPathKultura);
            }
            else if (subName == EnumsHelper.GetKulturaCode(Kultura.publishVkontakte))
            {
                Content_VkontakteLink_Common(ref panelResult, ref req);
            }
            else if (subName == EnumsHelper.GetKulturaCode(Kultura.audioGaid))
            {
                Content_VideoLink_Common(ref panelResult, ref req);
            }
            //else if  (subName == EnumsHelper.GetKulturaCode(Kultura.intellektualKviz))
            //{
            //    Content_VideoLink_Common(ref panelResult, ref req);
            //}
            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Kultura_all;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Kultura_all

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Kultura_all(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Kultura.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion  

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion


                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");

                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.SubsectionName != EnumsHelper.GetKulturaValueFromCode(EnumsHelper.GetKulturaCode(Kultura.intellektualKviz)))
                { 
                    if (req.Links.Count == 0)
                    {
                        checker = false;
                        errTxt += "<br/>Загрузите файл(ы) работ";
                    }
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region Итоговые операции

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetKulturaCode(Kultura.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailkultura";
                string fileUrlPath = _imgUrlPathKultura.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>");

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                 "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Kultura.self)] = null;
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }

        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_VmesteSila(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="cName">условное наименование конкурса. Может быть - foto, literary, VmesteSila</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_VmesteSila(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(EnumsHelper.GetVmesteSilaValue(VmesteSila.self));

            if (subName == EnumsHelper.GetVmesteSilaCode(VmesteSila.hudSlovo))
            {
                panelResult = RequestPanel_VmesteSila_hudSlovo(subName);
            }
            else if (subName == EnumsHelper.GetVmesteSilaCode(VmesteSila.horeographia))
            {
                panelResult = RequestPanel_VmesteSila_horeographia(subName);
            }
            else if (subName == EnumsHelper.GetVmesteSilaCode(VmesteSila.vokal))
            {
                panelResult = RequestPanel_VmesteSila_vokal(subName);
            }
            else if (subName == EnumsHelper.GetVmesteSilaCode(VmesteSila.instrumental))
            {
                panelResult = RequestPanel_VmesteSila_instrumental(subName);
            }
            else if (subName == EnumsHelper.GetVmesteSilaCode(VmesteSila.theatre))
            {
                panelResult = RequestPanel_VmesteSila_theatre(subName);
            }
            else if (subName == EnumsHelper.GetVmesteSilaCode(VmesteSila.masterMakeup))
            {
                panelResult = RequestPanel_VmesteSila_masterMakeup(subName);
            }
            else if (subName == EnumsHelper.GetVmesteSilaCode(VmesteSila.masterShair))
            {
                panelResult = RequestPanel_VmesteSila_masterShair(subName);
            }

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_VmesteSila_hudSlovo(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_VmesteSila_hudSlovo(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];
            req.CompetitionName = EnumsHelper.GetVmesteSilaCode(VmesteSila.self);
            //req.SubsectionName = EnumsHelper.GetVmesteSilaValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Фестиваль-конкурсе \"Вместе мы сильнее!\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.hudSlovoPoeziya));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.hudSlovoProza));
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = true;
            ddl.Width = 516;
            ddl.SelectedValue = req.SubsectionName;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название номера

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование группы, кружка, коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));          // Наименование группы, ансамбля, спорт кружка.
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования группы, кружка, коллектива, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_VmesteSila_hudSlovo;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_VmesteSila_hudSlovo

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_VmesteSila_hudSlovo(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion   

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название номера

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование группы, кружка, коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailvmestesila";
                string fileUrlPath = _imgUrlPathVmesteSila.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Автор и название произведения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование группы, кружка, коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>"
                                     );

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(VmesteSila.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_VmesteSila_horeographia(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_VmesteSila_horeographia(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];
            req.CompetitionName = EnumsHelper.GetVmesteSilaCode(VmesteSila.self);
            //req.SubsectionName = EnumsHelper.GetVmesteSilaValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Фестиваль-конкурсе \"Вместе мы сильнее!\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.horeographiaBalniyTanets));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.horeographiaClassichTanets));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.horeographiaEstradTanets));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.horeographiaNarodTanets));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.horeographiaSovremenTanets));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.horeographiaOstalnieGanri));
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = true;
            ddl.Width = 516;
            ddl.SelectedValue = req.SubsectionName;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название номера

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование группы, кружка, коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования группы, кружка, коллектива, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_VmesteSila_horeographia;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_VmesteSila_horeographia

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_VmesteSila_horeographia(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Возрастная категория

                //ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_AgeСategories");

                //req.AgeСategory = ddl.SelectedValue;
                //ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название номера

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование группы, кружка, коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                //if (!req.Links.Any(x => x.ToLower().EndsWith(".mp3")))
                //{
                //    checker = false;
                //    errTxt += "<br/>Загрузите mp3 файл. ";
                //}
                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailvmestesila";
                string fileUrlPath = _imgUrlPathVmesteSila.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");

                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" + 
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название номера:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование группы, кружка, коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>"
                                     );

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");

                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(VmesteSila.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_VmesteSila_vokal(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_VmesteSila_vokal(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];
            req.CompetitionName = EnumsHelper.GetVmesteSilaCode(VmesteSila.self);
            //req.SubsectionName = EnumsHelper.GetVmesteSilaValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Фестиваль-конкурсе \"Вместе мы сильнее!\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Номинация

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.vokalAkademVokal));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.vokalEstradVokal));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.vokalFolklor));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.vokalZest));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.vokalOstalnieGanri));
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = true;
            ddl.Width = 516;
            ddl.SelectedValue = req.SubsectionName;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой|Курс

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название номера

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование группы, кружка, коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования группы, кружка, коллектива, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_VmesteSila_vokal;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_VmesteSila_vokal

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_VmesteSila_vokal(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой|Курс

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Название номера

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование группы, кружка, коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }
 
                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailvmestesila";
                string fileUrlPath = _imgUrlPathVmesteSila.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" + 
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название номера:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование группы, кружка, коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>"
                                    );

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(VmesteSila.self)] = null;
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_VmesteSila_instrumental(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_VmesteSila_instrumental(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];
            req.CompetitionName = EnumsHelper.GetVmesteSilaCode(VmesteSila.self);
            //req.SubsectionName = EnumsHelper.GetVmesteSilaValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Фестиваль-конкурсе \"Вместе мы сильнее!\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Номинация

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.insrumZanrAnsambli));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.insrumZanrDuhovieUdarnInstrum));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.insrumZanrFortepiano));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.insrumZanrGitara));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.insrumZanrNarodnieInstrum));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.insrumZanrSintezator));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.insrumZanrStrunnoSmichkovieInstrumenti));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.insrumZanrOstalnieGanri));
            
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = true;
            ddl.Width = 516;
            ddl.SelectedValue = req.SubsectionName;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название номера

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование группы, кружка, коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования группы, кружка, коллектива, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_VmesteSila_instrumental;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_VmesteSila_instrumental

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_VmesteSila_instrumental(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой|Курс

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название номера

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование группы, кружка, коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion


                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailvmestesila";
                string fileUrlPath = _imgUrlPathVmesteSila.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название номера:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование группы, кружка, коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>"
                                     );

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(VmesteSila.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_VmesteSila_theatre(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_VmesteSila_theatre(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];
            req.CompetitionName = EnumsHelper.GetVmesteSilaCode(VmesteSila.self);
            //req.SubsectionName = EnumsHelper.GetVmesteSilaValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Фестиваль-конкурсе \"Вместе мы сильнее!\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Номинация

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.theatreSpektakl));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.theatreScenka));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.theatreLiteraturnoMusikalnaya));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.theatreDrama));
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = true;
            ddl.Width = 516;
            ddl.SelectedValue = req.SubsectionName;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название номера

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование группы, кружка, коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования группы, кружка, коллектива, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_VmesteSila_theatre;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_VmesteSila_theatre

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_VmesteSila_theatre(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой|Курс

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название номера

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование группы, кружка, коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailvmestesila";
                string fileUrlPath = _imgUrlPathVmesteSila.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название номера:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование группы, кружка, коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>"
                                     );

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(VmesteSila.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_VmesteSila_masterMakeup(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_VmesteSila_masterMakeup(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];
            req.CompetitionName = EnumsHelper.GetVmesteSilaCode(VmesteSila.self);
            //req.SubsectionName = EnumsHelper.GetVmesteSilaValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Фестиваль-конкурсе \"Вместе мы сильнее!\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.masterMakeupDay));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.masterMakeupNight));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.masterMakeupStsena));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.masterMakeupFantasy));
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = true;
            ddl.Width = 516;
            ddl.SelectedValue = req.SubsectionName;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название номера

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование группы, кружка, коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования группы, кружка, коллектива, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            Content_Image_Common(ref panelResult, ref req, _pathToVmesteSilaFolder, _imgUrlPathVmesteSila);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_VmesteSila_masterMakeup;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_VmesteSila_masterMakeup

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_VmesteSila_masterMakeup(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой|Курс

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название номера

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование группы, кружка, коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailvmestesila"; //admmailvmestesilamakeup
                string fileUrlPath = _imgUrlPathVmesteSila.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название номера:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование группы, кружка, коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>"
                                     );

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(VmesteSila.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_VmesteSila_masterShair(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_VmesteSila_masterShair(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];
            req.CompetitionName = EnumsHelper.GetVmesteSilaCode(VmesteSila.self);
            //req.SubsectionName = EnumsHelper.GetVmesteSilaValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Фестиваль-конкурсе \"Вместе мы сильнее!\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.masterShairPletenie));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.masterShairDay));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.masterShairNight));
            ddl.Items.Add(EnumsHelper.GetVmesteSilaValue(VmesteSila.masterShairFantasy));
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = true;
            ddl.Width = 516;
            ddl.SelectedValue = req.SubsectionName;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название номера

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование группы, кружка, коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования группы, кружка, коллектива, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_VmesteSila_masterShair;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_VmesteSila_masterShair

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_VmesteSila_masterShair(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(VmesteSila.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой|Курс

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название номера

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование группы, кружка, коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailvmestesila"; //admmailvmestesilashair
                string fileUrlPath = _imgUrlPathVmesteSila.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название номера:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование группы, кружка, коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>"
                                     );

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                    "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(VmesteSila.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Clothes(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="cName">условное наименование конкурса. Может быть -  uniyKuturie, uniyKuturieTkan, uniyKuturieNetradicMaterial, chudoLoskutki, eskiziModelier, eskiziModelierTvorRisunok, eskiziModelierFashion, eskiziModelierTechRisunok, sedobnayaModa, sedobnayaModaFoodArt, sedobnayaModaOgorod, sedobnayaModaBeauty</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Clothes(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(EnumsHelper.GetClothesValue(Clothes.self));

            if (//subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturie) ||
                 subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturieTkan)
                || subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturieNetradicMaterial)
                || subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturieFashion)
                || subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturieTechRisunok)
                || subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturieFoodArt)
                || subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturieOgorod)
                || subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturieBeauty)

                || subName == EnumsHelper.GetClothesCode(Clothes.chudoLoskutkiIgrushkiKukliTvorRisunok)
                || subName == EnumsHelper.GetClothesCode(Clothes.chudoLoskutkiIgrushkiKukli)

                //|| subName == EnumsHelper.GetClothesCode(Clothes.eskiziModelier)
                //|| subName == EnumsHelper.GetClothesCode(Clothes.eskiziModelierTvorRisunok)
                //|| subName == EnumsHelper.GetClothesCode(Clothes.eskiziModelierFashion)
                //|| subName == EnumsHelper.GetClothesCode(Clothes.eskiziModelierTechRisunok)

                //|| subName == EnumsHelper.GetClothesCode(Clothes.sedobnayaModa)
                //|| subName == EnumsHelper.GetClothesCode(Clothes.sedobnayaModaFoodArt)
                //|| subName == EnumsHelper.GetClothesCode(Clothes.sedobnayaModaOgorod)
                //|| subName == EnumsHelper.GetClothesCode(Clothes.sedobnayaModaBeauty)

                )
            {
                panelResult = RequestPanel_Clothes_all(subName);
            }
            else if (subName == EnumsHelper.GetClothesCode(Clothes.tmavtorcollect) ||
                subName == EnumsHelper.GetClothesCode(Clothes.tmindividpokaz) ||
                subName == EnumsHelper.GetClothesCode(Clothes.tmcollectpokaz) ||
                subName == EnumsHelper.GetClothesCode(Clothes.tmnetradicmaterial)
                //|| subName == EnumsHelper.GetClothesCode(Clothes.tmissledovproject)
                )
            {
                panelResult = RequestPanel_Clothes_TheatreModa(subName);
            }
            
            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Clothes_all(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Clothes_all(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Clothes.self)];
            req.CompetitionName = EnumsHelper.GetClothesCode(Clothes.self);
            req.SubsectionName = EnumsHelper.GetClothesValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>" + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetClothesCode(Clothes.self)) + "</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование группы, кружка, коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования группы, кружка, коллектива, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            var countFiles = 1;
            if (
                subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturieOgorod))
            {
                countFiles = 5;
                Content_Image_Common(ref panelResult, ref req, _pathToClothesFolder, _imgUrlPathClothes, countFiles);
            }

            else if (subName == EnumsHelper.GetClothesCode(Clothes.chudoLoskutkiIgrushkiKukliTvorRisunok) || 
                subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturieFashion) ||
                subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturieTechRisunok) ||
                subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturieFoodArt))
            {
                countFiles = 3;
                Content_Image_Common(ref panelResult, ref req, _pathToClothesFolder, _imgUrlPathClothes, countFiles);
            }
            else if (subName == EnumsHelper.GetClothesCode(Clothes.uniyKuturieBeauty)) {
                countFiles = 1;
                Content_Presentaion_Common(ref panelResult, ref req, _pathToClothesFolder, _imgUrlPathClothes);
            }
            else
            {
                countFiles = 1;
                Content_Image_Common(ref panelResult, ref req, _pathToClothesFolder, _imgUrlPathClothes, countFiles);
            }

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Clothes_all;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Clothes_all

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Clothes_all(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Clothes.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование группы, кружка, коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetClothesCode(Clothes.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailclothes";
                string fileUrlPath = _imgUrlPathClothes.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");
                
                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");

                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Образовательная организация:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.EducationalOrganization + "</td></tr>" +
                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.WorkComment +
                    "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.Region + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.Area + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.City + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.WorkName +
                    "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Наименование группы, кружка, коллектива:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.ClubsName + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>ФИО руководителя коллектива:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.ChiefFio + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.ChiefPosition + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.ChiefEmail + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.ChiefTelephone +
                "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Clothes.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Multimedia(string subName)

        /// <summary>Метод формирует html-код формы заявки для Конкурса мультимедийных проектов «Герой войны, достойный Славы, любимый город Севастополь!»</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Multimedia(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(EnumsHelper.GetMultimediaValue(Multimedia.self));

            if (
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.uniygeroi) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.uniyzashitnik)
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.characteristica) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.prichinietapi) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.rolvistorii)
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.podandreevskimflagom) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.pomoryampovolnam) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.korablimorykimore) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.chernomorskomurossiiposvyashaetsa) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.metodicheskierazrabotki)

                //subName == EnumsHelper.GetMultimediaCode(Multimedia.morepobedkolibelsmelchakov) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.netzapyatihtolkotochki) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.vashipodvigineumrut) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.sevastopol44) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.nadevaemmitelnyashku) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.klyatvudaemsevastopolvernem) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.hranitalbomsemeinipamyat) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.ihpamaytuzivushiipoklonis) ||
                //subName == EnumsHelper.GetMultimediaCode(Multimedia.multimediinieizdaniya)

                subName == EnumsHelper.GetMultimediaCode(Multimedia.yarisuupobedy) ||
                subName == EnumsHelper.GetMultimediaCode(Multimedia.spesneirpobede) ||
                subName == EnumsHelper.GetMultimediaCode(Multimedia.geroyamotserdca) ||
                subName == EnumsHelper.GetMultimediaCode(Multimedia.plechomkplechu) ||
                subName == EnumsHelper.GetMultimediaCode(Multimedia.pamyatsilneevremeni)

                )
            {
                panelResult = RequestPanel_Multimedia_all(subName);
            }

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Multimedia_all()

        /// <summary>Метод формирует html-код формы заявки для Конкурса мультимедийных проектов «Герой войны, достойный Славы, любимый город Севастополь!»</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Multimedia_all(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Multimedia.self)];
            req.CompetitionName = EnumsHelper.GetMultimediaCode(Multimedia.self);
            req.SubsectionName = EnumsHelper.GetMultimediaValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе мультимедийных проектов<br />«Герой войны, достойный Славы, любимый город Севастополь!»</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название проекта</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Юные герои");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            //if (subName == EnumsHelper.GetMultimediaCode(Multimedia.morepobedkolibelsmelchakov) ||
            //    subName == EnumsHelper.GetMultimediaCode(Multimedia.sevastopol44) ||
            //    subName == EnumsHelper.GetMultimediaCode(Multimedia.hranitalbomsemeinipamyat) ||
            //    subName == EnumsHelper.GetMultimediaCode(Multimedia.ihpamaytuzivushiipoklonis) ||
            //    subName == EnumsHelper.GetMultimediaCode(Multimedia.multimediinieizdaniya))
            //{
            //    #region Панель добавления материалов работ

            //    Content_Presentaion_Common(ref panelResult, ref req, _pathToMultimediaFolder, _imgUrlPathMultimedia);

            //    #endregion
            //}
            if (subName == EnumsHelper.GetMultimediaCode(Multimedia.spesneirpobede) ||
                 subName == EnumsHelper.GetMultimediaCode(Multimedia.plechomkplechu) || 
                 subName == EnumsHelper.GetMultimediaCode(Multimedia.pamyatsilneevremeni))
            {
                #region Панель добавления ссылки на видео

                Content_VideoLink_Common(ref panelResult, ref req);

                #endregion
            }
            else if (subName == EnumsHelper.GetMultimediaCode(Multimedia.yarisuupobedy) ||
                 subName == EnumsHelper.GetMultimediaCode(Multimedia.geroyamotserdca))
            {
                #region Панель добавления материалов работ

                Content_Image_Common(ref panelResult, ref req, _pathToMultimediaFolder, _imgUrlPathMultimedia);

                #endregion
            }

            /*
            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion
            */

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Multimedia_all;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Multimedia_all

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Multimedia_all(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Multimedia.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion 

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                /*
                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion
                */
                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion
                /*
                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                //if (req.ProtocolFile == "")
                //{
                //    checker = false;
                //    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                //}

                #endregion

                */

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetMultimediaCode(Multimedia.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailmultimedia";
                string fileUrlPath = _imgUrlPathMultimedia.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                //string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                //string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                //string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                //string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" + 
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название проекта:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName + "</td></tr>" +
                                     "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                     "<span style='color:blue; font-weight:bold;'>Комментарии:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkComment + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.EducationalOrganization + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Структурное подразделение:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Division + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Region + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.City + "</td></tr>");
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                //sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                //                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                //                    "</td></tr>");
                //for (int i = 0; i < fios_1.Length; i++)
                //{
                //    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                //                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                //                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                //                     fios_1[i] + " / " + agies_1[i] +
                //                     "</td></tr>");
                //    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                //                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                //                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                //                    schools_1[i] + " / " + classRooms_1[i] +
                //                    "</td></tr>");
                //}
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Multimedia.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Korablik(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="cName">условное наименование конкурса. Может быть - foto, literary, Korablik</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Korablik(string subName)
        {
            Panel panelResult = new Panel();

            var configName = "";
            var isHudSlovo = new string[] { EnumsHelper.GetKorablikCode(Korablik.hudSlovo) }.Contains(subName);
            var isVokal = new string[] { EnumsHelper.GetKorablikCode(Korablik.vokal) }.Contains(subName); 
            var isHoreo = new string[] { EnumsHelper.GetKorablikCode(Korablik.horeographia) }.Contains(subName);
            if (isHudSlovo)
                configName = EnumsHelper.GetKorablikValue(Korablik.self);
            else if (isHoreo || isVokal)
                configName = EnumsHelper.GetKorablikValue(Korablik.self) + subName;
            else
                configName = "";

            CheckReqestOnOff(configName);

            if (subName == EnumsHelper.GetKorablikCode(Korablik.hudSlovo))
            {
                panelResult = RequestPanel_Korablik_hudSlovo();
            }
            else if (subName == EnumsHelper.GetKorablikCode(Korablik.horeographia))
            {
                panelResult = RequestPanel_Korablik_horeographia(subName);
            }
            else if (subName == EnumsHelper.GetKorablikCode(Korablik.vokal))
            {
                panelResult = RequestPanel_Korablik_vokal(subName);
            }

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Korablik_hudSlovo()

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Korablik_hudSlovo()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Korablik.self)];
            req.CompetitionName = EnumsHelper.GetKorablikCode(Korablik.self);
            req.SubsectionName = EnumsHelper.GetKorablikValue(Korablik.hudSlovo);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в конкурсе \"Кораблик детства (дошкольники)\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Возрастная категория

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Возрастная категория</td>"));
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            //ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.baybi));
            //ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.mladshaya));
            //ddl.ID = "DropDown_AgeСategories";
            //ddl.SelectedValue = req.AgeСategory;
            //ddl.Width = 200;
            //panel.Controls.Add(ddl);

            //panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            //panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            //panel.Controls.Add(new LiteralControl("Бэби - 3-5 лет, Младшая - 6-7 лет</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Автор и название произведения

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Автор и название произведения</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Ситников А.Ю., Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Хронометраж номера (минуты секунды)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Хронометраж номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));

            string tmp = "";

            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 120;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "минуты (цифрой)");
            if (req.Timing_min >= 0)
            {
                tmp = req.Timing_min.ToString();
            }
            txtBox.Text = tmp; txtBox.ID = "txtBox_Timing_min"; txtBox.MaxLength = 3; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 120;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "секунды  (цифрой)");
            tmp = "";
            if (req.Timing_sec >= 0)
            {
                tmp = req.Timing_sec.ToString();
            }
            txtBox.Text = tmp; txtBox.ID = "txtBox_Timing_sec"; txtBox.MaxLength = 2; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("укажите длительность номера, первое поле - минуты (цифрами), второе поле - секунды (цифрами)</td></tr>"));

            #endregion

            #region Техническое сопровождение

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Техническое сопровождение</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "музыкальное сопровождение. количество микрофонов, необходимые атрибуты, наличие видеоряда и др.");
            txtBox.Text = req.TechnicalInfo; txtBox.ID = "txtBox_TechnicalInfo"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование группы, кружка, коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));          // Наименование группы, ансамбля, спорт кружка.
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования группы, кружка, коллектива, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Korablik_hudSlovo;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Korablik_hudSlovo

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Korablik_hudSlovo(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Korablik.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion  

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Автор и название произведения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - минуты

                TextBox txtBox_min = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Timing_min");
                int min = StringToNum.ParseInt(txtBox_min.Text.Trim());
                if (min < 0)
                {
                    checker = false;
                    txtBox_min.BorderWidth = 1; txtBox_min.BorderColor = Color.Red; txtBox_min.BackColor = Color.Bisque;
                }
                else
                {
                    req.Timing_min = min;
                    txtBox_min.BorderWidth = 0; txtBox_min.BorderColor = Color.Transparent; txtBox_min.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - секунды

                TextBox txtBox_sec = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Timing_sec");
                int sec = StringToNum.ParseInt(txtBox_sec.Text.Trim());
                if (sec < 0)
                {
                    checker = false;
                    txtBox_sec.BorderWidth = 1; txtBox_sec.BorderColor = Color.Red; txtBox_sec.BackColor = Color.Bisque;
                }
                else
                {
                    req.Timing_sec = sec;
                    txtBox_sec.BorderWidth = 0; txtBox_sec.BorderColor = Color.Transparent; txtBox_sec.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - общая проверка

                if (min == 0 && sec == 0)
                {
                    checker = false;
                    txtBox_min.BorderWidth = 1; txtBox_min.BorderColor = Color.Red; txtBox_min.BackColor = Color.Bisque;
                    txtBox_sec.BorderWidth = 1; txtBox_sec.BorderColor = Color.Red; txtBox_sec.BackColor = Color.Bisque;
                }

                #endregion

                #region Техническое сопровождение

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_TechnicalInfo");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.TechnicalInfo = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование группы, кружка, коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Проверка добавления Педагогов

                if (req.ChiefFios.Count == 0)
                {
                    checker = false;
                    errTxt += "  Добавьте педагога(ов) (учителей).";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetKorablikCode(Korablik.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailkorablik";
                string fileUrlPath = _imgUrlPathKorablik.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");

                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Автор и название произведения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Хронометраж:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Timing_min + " мин. " + req.Timing_sec + " сек.</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Техническое сопровождение:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.TechnicalInfo +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование группы, кружка, коллектива:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>");

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                        "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                        "</td><td style='padding: 0 9px 5px 9px;'>" +
                                        req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                        "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                        "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                        "</td><td style='padding: 0 9px 5px 9px;'>" +
                                        req.ChiefEmail + "</td></tr>" +
                                        "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                        "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                        "</td><td style='padding: 0 9px 5px 9px;'>" +
                                        req.ChiefTelephone +
                                        "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                     "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                     "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Korablik.self)] = null;
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Korablik_horeographia(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Korablik_horeographia(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Korablik.self)];
            req.CompetitionName = EnumsHelper.GetKorablikCode(Korablik.self);
            req.SubsectionName = EnumsHelper.GetKorablikValueFromCode(EnumsHelper.GetKorablikCode(Korablik.horeographia));

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в конкурсе \"Кораблик детства (дошкольники)\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            //ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.horeographiaBalniyTanets));
            //ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.horeographiaClassichTanets));
            //ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.horeographiaEstradTanets));
            //ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.horeographiaNarodTanets));
            //ddl.ID = "DropDown_Subsection";
            //ddl.Enabled = true;
            //ddl.Width = 516;
            //ddl.SelectedValue = req.SubsectionName;
            //panel.Controls.Add(ddl);
            //panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Возрастная категория

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Возрастная категория</td>"));
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            //ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.baybi));
            //ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.mladshaya));
            //ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.smeshannaya));
            //ddl.ID = "DropDown_AgeСategories";
            //ddl.SelectedValue = req.AgeСategory;
            //ddl.Width = 200;
            //panel.Controls.Add(ddl);

            //panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            //panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            //panel.Controls.Add(new LiteralControl("Бэби - 3-5 лет, Младшая - 6-7 лет, Смешанная - до 7 лет.</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Хронометраж номера (минуты секунды)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Хронометраж номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));

            string tmp = "";

            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 120;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "минуты (цифрой)");
            if (req.Timing_min >= 0)
            {
                tmp = req.Timing_min.ToString();
            }
            txtBox.Text = tmp; txtBox.ID = "txtBox_Timing_min"; txtBox.MaxLength = 3; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 120;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "секунды  (цифрой)");
            tmp = "";
            if (req.Timing_sec >= 0)
            {
                tmp = req.Timing_sec.ToString();
            }
            txtBox.Text = tmp; txtBox.ID = "txtBox_Timing_sec"; txtBox.MaxLength = 2; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("укажите длительность номера, первое поле - минуты (цифрами), второе поле - секунды (цифрами)</td></tr>"));

            #endregion

            #region Техническое сопровождение

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Техническое сопровождение</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "музыкальное сопровождение. количество микрофонов, необходимые атрибуты, наличие видеоряда и др.");
            txtBox.Text = req.TechnicalInfo; txtBox.ID = "txtBox_TechnicalInfo"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование ансамбля, труппы, театрального кружка

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование ансамбля, труппы, театрального кружка"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования ансамбля, труппы, театрального кружка, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Korablik_horeographia;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Korablik_horeographia

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Korablik_horeographia(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Korablik.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                //DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                //if (ddl.SelectedValue == "НЕТ")
                //{
                //    checker = false;
                //    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.SubsectionName = ddl.SelectedValue;
                //    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                //}

                #endregion

                #region Возрастная категория

                //var ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_AgeСategories");

                //req.AgeСategory = ddl.SelectedValue;
                //ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;

                #endregion

                #region Количество участников в конкурсе

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_PartyCount");
                //tmpNum = StringToNum.ParseInt(txtBox.Text);
                //if (tmpNum < 1)
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.PartyCount = tmpNum;
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - минуты

                TextBox txtBox_min = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Timing_min");
                int min = StringToNum.ParseInt(txtBox_min.Text.Trim());
                if (min < 0)
                {
                    checker = false;
                    txtBox_min.BorderWidth = 1; txtBox_min.BorderColor = Color.Red; txtBox_min.BackColor = Color.Bisque;
                }
                else
                {
                    req.Timing_min = min;
                    txtBox_min.BorderWidth = 0; txtBox_min.BorderColor = Color.Transparent; txtBox_min.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - секунды

                TextBox txtBox_sec = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Timing_sec");
                int sec = StringToNum.ParseInt(txtBox_sec.Text.Trim());
                if (sec < 0)
                {
                    checker = false;
                    txtBox_sec.BorderWidth = 1; txtBox_sec.BorderColor = Color.Red; txtBox_sec.BackColor = Color.Bisque;
                }
                else
                {
                    req.Timing_sec = sec;
                    txtBox_sec.BorderWidth = 0; txtBox_sec.BorderColor = Color.Transparent; txtBox_sec.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - общая проверка

                if (min == 0 && sec == 0)
                {
                    checker = false;
                    txtBox_min.BorderWidth = 1; txtBox_min.BorderColor = Color.Red; txtBox_min.BackColor = Color.Bisque;
                    txtBox_sec.BorderWidth = 1; txtBox_sec.BorderColor = Color.Red; txtBox_sec.BackColor = Color.Bisque;
                }

                #endregion

                #region Техническое сопровождение

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_TechnicalInfo");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.TechnicalInfo = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование ансамбля, труппы, театрального кружка

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                //if (!req.Links.Any(x => x.ToLower().EndsWith(".mp3")))
                //{
                //    checker = false;
                //    errTxt += "<br/>Загрузите mp3 файл";
                //}
                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Количество участников I отборочного тура согласно протоколу отборочного тура

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ProtocolPartyCount");
                //int res = StringToNum.ParseInt(txtBox.Text);
                //if (res == -1 || res <= 0)
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //    errTxt += "  Количество участников I отборочного тура согласно протоколу должно быть больше 0";
                //}
                //else
                //{
                //    req.ProtocolPartyCount = res;
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Проверка добавления Педагогов

                if (req.ChiefFios.Count == 0)
                {
                    checker = false;
                    errTxt += "  Добавьте педагога(ов) (учителей).";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetKorablikCode(Korablik.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailkorablikhoreo";
                string fileUrlPath = _imgUrlPathKorablik.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.SubsectionName +
                                    "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");

                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" + 
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Хронометраж:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Timing_min + " мин. " + req.Timing_sec + " сек.</td></tr>" +
                                      "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Техническое сопровождение:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.TechnicalInfo +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Наименование ансамбля, труппы, театрального кружка:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>");

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Korablik.self)] = null;
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Korablik_vokal(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Korablik_vokal(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Korablik.self)];
            req.CompetitionName = EnumsHelper.GetKorablikCode(Korablik.self);
            //req.SubsectionName = EnumsHelper.GetKorablikValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в конкурсе \"Кораблик детства (дошкольники)\"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Номинация

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.vokalSolo));
            ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.vokalMalieFormi));
            ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.vokalAnsambli));
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = true;
            ddl.Width = 516;
            ddl.SelectedValue = req.SubsectionName;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название номера

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Хронометраж номера (минуты секунды)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Хронометраж номера</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));

            string tmp = "";

            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 120;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "минуты (цифрой)");
            if (req.Timing_min >= 0)
            {
                tmp = req.Timing_min.ToString();
            }
            txtBox.Text = tmp; txtBox.ID = "txtBox_Timing_min"; txtBox.MaxLength = 3; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("&nbsp;/&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 120;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "секунды  (цифрой)");
            tmp = "";
            if (req.Timing_sec >= 0)
            {
                tmp = req.Timing_sec.ToString();
            }
            txtBox.Text = tmp; txtBox.ID = "txtBox_Timing_sec"; txtBox.MaxLength = 2; panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("укажите длительность номера, первое поле - минуты (цифрами), второе поле - секунды (цифрами)</td></tr>"));

            #endregion

            #region Название ансамбля, коллектива, объединения

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Название ансамбля, коллектива, объединения"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Названия, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Техническое сопровождение

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Техническое сопровождение</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "музыкальное сопровождение. количество микрофонов, необходимые атрибуты, наличие видеоряда и др.");
            txtBox.Text = req.TechnicalInfo; txtBox.ID = "txtBox_TechnicalInfo"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления ссылки на видео

            Content_VideoLink_Common(ref panelResult, ref req);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Korablik_vokal;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Korablik_vokal

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Korablik_vokal(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Korablik.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название номера

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - минуты

                TextBox txtBox_min = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Timing_min");
                int min = StringToNum.ParseInt(txtBox_min.Text.Trim());
                if (min < 0)
                {
                    checker = false;
                    txtBox_min.BorderWidth = 1; txtBox_min.BorderColor = Color.Red; txtBox_min.BackColor = Color.Bisque;
                }
                else
                {
                    req.Timing_min = min;
                    txtBox_min.BorderWidth = 0; txtBox_min.BorderColor = Color.Transparent; txtBox_min.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - секунды

                TextBox txtBox_sec = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Timing_sec");
                int sec = StringToNum.ParseInt(txtBox_sec.Text.Trim());
                if (sec < 0)
                {
                    checker = false;
                    txtBox_sec.BorderWidth = 1; txtBox_sec.BorderColor = Color.Red; txtBox_sec.BackColor = Color.Bisque;
                }
                else
                {
                    req.Timing_sec = sec;
                    txtBox_sec.BorderWidth = 0; txtBox_sec.BorderColor = Color.Transparent; txtBox_sec.BackColor = Color.White;
                }

                #endregion

                #region Хронометраж - общая проверка

                if (min == 0 && sec == 0)
                {
                    checker = false;
                    txtBox_min.BorderWidth = 1; txtBox_min.BorderColor = Color.Red; txtBox_min.BackColor = Color.Bisque;
                    txtBox_sec.BorderWidth = 1; txtBox_sec.BorderColor = Color.Red; txtBox_sec.BackColor = Color.Bisque;
                }

                #endregion

                #region Название ансамбля, коллектива, объединения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Техническое сопровождение

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_TechnicalInfo");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.TechnicalInfo = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Количество участников I отборочного тура согласно протоколу отборочного тура

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ProtocolPartyCount");
                //int res = StringToNum.ParseInt(txtBox.Text);
                //if (res == -1 || res <= 0)
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //    errTxt += "  Количество участников I отборочного тура согласно протоколу должно быть больше 0";
                //}
                //else
                //{
                //    req.ProtocolPartyCount = res;
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Проверка добавления Педагогов

                if (req.ChiefFios.Count == 0)
                {
                    checker = false;
                    errTxt += "  Добавьте педагога(ов) (учителей).";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    //// Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    //if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    //{
                    //    checker = false;
                    //    errTxt = "Участники команды должны быть в одной возрастной категории.";
                    //}

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetKorablikCode(Korablik.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailkorablikvokal";
                string fileUrlPath = _imgUrlPathKorablik.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название номера:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Хронометраж:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Timing_min + " мин. " + req.Timing_sec + " сек.</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название ансамбля, коллектива, объединения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Техническое сопровождение:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.TechnicalInfo +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.EducationalOrganization + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Структурное подразделение:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Division + "</td></tr>");

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Korablik.self)] = null;
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Crimroute(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="cName">условное наименование конкурса. Может быть -  historyplace, militaryhistoryplace, literaturehistoryplace</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Crimroute(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(EnumsHelper.GetCrimrouteValue(Crimroute.self));

            if (subName == EnumsHelper.GetCrimrouteCode(Crimroute.historyplace)
                || subName == EnumsHelper.GetCrimrouteCode(Crimroute.militaryhistoryplace)
                || subName == EnumsHelper.GetCrimrouteCode(Crimroute.literaturehistoryplace))
            {
                panelResult = RequestPanel_Crimroute_all(subName);
            }

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Crimroute_all(string subName)

        /// <summary>Метод формирует html-код формы заявки для страниц Конкурсов, в зависимости от переданного строчного аргумента</summary>
        /// <param name="subName">условное наименование номенации</param>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Crimroute_all(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Crimroute.self)];
            req.CompetitionName = EnumsHelper.GetCrimrouteCode(Crimroute.self);
            req.SubsectionName = EnumsHelper.GetCrimrouteValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>" + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetCrimrouteCode(Crimroute.self)) + "</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            #region Название работы

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарии

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою работу.\n" +
                                                     "Что я хочу сказать людям, которые будут просматривать и оценивать её.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация (полностью)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Образовательная организация (полностью)</td>"));    // Образовательная организация (полностью)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Средняя образовательная школа № 32 города Мытищи");
            txtBox.Text = req.EducationalOrganization; txtBox.ID = "txtBox_EducationalOrganization"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если вы не учащийся, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Структурное подразделение

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Структурное подразделение</td>"));    // Структурное подразделение
            panel.Controls.Add(new LiteralControl("<td></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Структурное подразделение (дополнительная информация)");
            txtBox.Text = req.Division; txtBox.ID = "txtBox_Division"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>"));
            panel.Controls.Add(new LiteralControl("Наименование группы, кружка, коллектива"));
            panel.Controls.Add(new LiteralControl("</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Веселые ребята");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td><td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет Наименования группы, кружка, коллектива, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Адрес

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Регион</td>"));                               // Регион
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Московская область");
            txtBox.Text = req.Region; txtBox.ID = "txtBox_Region"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Город</td>"));                               // Город
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            List<string> tmpList = XmlResources.GetTownsPrefList();
            if (tmpList != null)
            {
                foreach (string item in tmpList)
                {
                    ddl.Items.Add(item);
                }
            }
            ddl.ID = "DropDown_TownPrefs";
            ddl.SelectedValue = req.CityPref;
            ddl.Width = 200;
            panel.Controls.Add(ddl);

            panel.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 294;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Долгопрудный");
            txtBox.Text = req.City; txtBox.ID = "txtBox_City"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет педагога, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            Content_DocRar_Common(ref panelResult, ref req, _pathToCrimrouteFolder, _imgUrlPathCrimroute);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Crimroute_all;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Crimroute_all

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Crimroute_all(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Crimroute.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Возрастная категория (Проверка даты рождения на соответствие возраста участника требованиям Конкурса)

                //CompetitionRequest objTmp = new CompetitionRequest();
                //objTmp.CompetitionName = req.CompetitionName;
                //objTmp.SubsectionName = req.SubsectionName;
                //objTmp.Agies = req.Agies;
                //string ageCat = CompetitionsWork.GetAgeCategory(objTmp);
                //if (ageCat == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                //{
                //    checker = false;
                //    errTxt += ", дата рождения участника (участник не подходит по возрасту)";
                //}
                //else
                //    req.AgeСategory = CompetitionsWork.GetAgeCategory(req);

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Комментарий

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkComment");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkComment = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование группы, кружка, коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.EducationalOrganization = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 3)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.EducationalOrganization = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Структурное подразделение

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Division");
                if (!string.IsNullOrEmpty(txtBox.Text))
                {
                    req.Division = txtBox.Text.Trim();
                }

                #endregion

                #region ФИО руководителя коллектива

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion


                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetCrimrouteCode(Crimroute.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailcrimroute";
                string fileUrlPath = _imgUrlPathCrimroute.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номинация:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.WorkName +
                    "</td></tr>" +
                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.WorkComment +
                    "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Наименование группы, кружка, коллектива:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.ClubsName + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.City + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.EducationalOrganization + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Структурное подразделение:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.Division + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>ФИО руководителя коллектива:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.ChiefFio + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.ChiefPosition + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.ChiefEmail + "</td></tr>" +
                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                    "<span style='color:blue; font-weight:bold;'>Телефон руководителя (или участника):</span>" +
                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                    req.ChiefTelephone +
                 "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Crimroute.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Mathbattle(string subName)

        /// <summary>Метод формирует html-код формы заявки для конкурса Математический батл</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Mathbattle(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(EnumsHelper.GetMathbattleValue(Mathbattle.self));

            if (subName == EnumsHelper.GetMathbattleCode(Mathbattle.battle))
            {
                panelResult = RequestPanel_Mathbattle_all(subName);
            }

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Mathbattle()

        /// <summary>Метод формирует html-код формы заявки для конкурса Математический батл</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Mathbattle_all(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Mathbattle.self)];
            req.CompetitionName = EnumsHelper.GetMathbattleCode(Mathbattle.self);
            req.SubsectionName = EnumsHelper.GetMathbattleValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в конкурсе " + EnumsHelper.GetMathbattleValueFromCode(EnumsHelper.GetMathbattleCode(Mathbattle.battle)) + "</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            //#region Выпадающий список номинаций

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            //ddl.Items.Add(req.SubsectionName);
            //ddl.ID = "DropDown_Subsection";
            //ddl.Enabled = false;
            //ddl.Width = 516;
            //panel.Controls.Add(ddl);
            //panel.Controls.Add(new LiteralControl("</td></tr>"));

            //#endregion

            #region Возрастная категория

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Возрастная категория</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.group7_9));
            ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.group8_11));
            ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.group10_13));
            ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.group12_15));
            ddl.ID = "DropDown_AgeСategories";
            ddl.SelectedValue = req.AgeСategory;
            ddl.Width = 200;
            panel.Controls.Add(ddl);

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("Младшая - 7-9 лет, Средняя - 8-11 лет, Старшая - 10-13 лет, Молодеж - 12-15 лет.</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            Content_AddEducationOrganization_Common(ref panel, ref req);

            #region Комментарий

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий к заявке
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою проблему. Возможный вариант описания:\n" +
                                                     "Не нашел свое образовательное учереждение в списке или не нашел своего города.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название команды

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название команды</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Логарифмологи");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Контактный телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Mathbattle;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Mathbattle

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Mathbattle(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Mathbattle.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "")
                {
                    var dd = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                    if (dd.Text.Trim().ToUpper() != "")
                    {
                        req.EducationalOrganization = "Индивидуальная заявка";
                        txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                    }
                    else
                    {
                        checker = false;
                        dd.BorderColor = Color.Red; dd.BackColor = Color.Bisque;
                        txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (req.EducationalOrganization != "Индивидуальная заявка" && txtBox.Text.Trim().ToUpper() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.District = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Район

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Area = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderColor = Color.FromArgb(204, 204, 204); txtBox.BackColor = Color.White;
                }

                #endregion

                #region Наименование команды

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                //if (req.Links.Count == 0)
                //{
                //    checker = false;
                //    errTxt += "<br/>Загрузите ссылку на видео с вашей работой";
                //}

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Возрастная категория

                var ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_AgeСategories");

                req.AgeСategory = ddl.SelectedValue;
                ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;

                if (!string.IsNullOrEmpty(req.AgeСategory) && !string.IsNullOrEmpty(req.Agies))
                {
                    var listOfAgies = new List<int>();
                    DateTime dt1;

                    string[] Agies = req.Agies.Split(new Char[] { '|' }).Where(x => x != "" && x != "0").ToArray();
                    foreach (string item in Agies)
                    {
                        if (DateTime.TryParse(item, out dt1))
                        {
                            listOfAgies.Add(CompetitionsWork.GetAgeFromBurth(dt1));
                        }
                        else
                        {
                            if (StringToNum.ParseInt(item) != -1)
                            {
                                listOfAgies.Add(int.Parse(item));
                            }
                        }
                    }

                    var range = req.AgeСategory.Replace(" лет", "").Split(new Char[] { '-' });
                    if (range.ElementAtOrDefault(0) != null && range.ElementAtOrDefault(1) != null)
                    {
                        if (listOfAgies.Where(x => x >= int.Parse(range[0]) && x <= int.Parse(range[1])).Count() != listOfAgies.Count) {
                            checker = false;
                            errTxt += "  Выбранная возрастная категория не соответствует возрастам участника(ов) 2-го тура.";
                        }
                    }
                    
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                //if (checker)
                //{
                //    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                //    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                //    {
                //        checker = false;
                //        errTxt = "Участники команды должны быть в одной возрастной категории.";
                //    }

                //    // Проверка попадания участников в одну из возрастных категорий
                //    if (checker)
                //    {
                //        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                //        {
                //            checker = false;
                //            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                //        }
                //        else
                //            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                //    }
                //}

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetMathbattleCode(Mathbattle.self));
                string admMailParamName = "admmailmathbattle";
                string fileUrlPath = _imgUrlPathtMathbattle.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.EducationalOrganization + "</td></tr>" +
                                    "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                    "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.WorkComment +
                                    "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Region + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Область:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.Area + "</td></tr>" +
                                    "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название команды:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Mathbattle.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Kosmos(string subName)

        /// <summary>Метод формирует html-код формы заявки для конкурса Покоряя космос</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Kosmos(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(EnumsHelper.GetKosmosValue(Kosmos.self));

            if (subName == EnumsHelper.GetKosmosCode(Kosmos.kosmos))
            {
                panelResult = RequestPanel_Kosmos_all(subName);
            }

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Kosmos()

        /// <summary>Метод формирует html-код формы заявки для конкурса Покоряя космос</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Kosmos_all(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            // Сохраним ссылку на структуру запроса во временную структуру для удобства использования в этом методе
            CompetitionRequest req = new CompetitionRequest();

            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Kosmos.self)];
            req.CompetitionName = EnumsHelper.GetKosmosCode(Kosmos.self);
            req.SubsectionName = EnumsHelper.GetKosmosValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в квест-игре " + EnumsHelper.GetKosmosValueFromCode(EnumsHelper.GetKosmosCode(Kosmos.kosmos)) + "</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            //#region Выпадающий список номинаций

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            //ddl.Items.Add(req.SubsectionName);
            //ddl.ID = "DropDown_Subsection";
            //ddl.Enabled = false;
            //ddl.Width = 516;
            //panel.Controls.Add(ddl);
            //panel.Controls.Add(new LiteralControl("</td></tr>"));

            //#endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            #region Название команды

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название команды</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Космонавты");
            txtBox.Text = req.ClubsName; txtBox.ID = "txtBox_ClubName"; txtBox.MaxLength = 60; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            //#region Название работы

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            //txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Манипулятор");
            //txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            //panel.Controls.Add(new LiteralControl("</td></tr>"));

            //#endregion

            //#region Комментарии

            //panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарии</td>"));                     // Комментарий
            //panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            //txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            //txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            //txtBox.Attributes.Add("placeholder", "Кратко опишите свою работу");
            //txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            //panel.Controls.Add(new LiteralControl("</td></tr>"));

            //#endregion

            #region Образовательная организация (полностью)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Образовательная организация (полностью)</td>"));    // Образовательная организация (полностью)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Средняя образовательная школа № 32 города Мытищи");
            txtBox.Text = req.EducationalOrganization; txtBox.ID = "txtBox_EducationalOrganization"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Структурное подразделение

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Структурное подразделение</td>"));    // Структурное подразделение
            panel.Controls.Add(new LiteralControl("<td></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Структурное подразделение (дополнительная информация)");
            txtBox.Text = req.Division; txtBox.ID = "txtBox_Division"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Адрес

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Регион</td>"));                               // Регион
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Московская область");
            txtBox.Text = req.Region; txtBox.ID = "txtBox_Region"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Город</td>"));                               // Город
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            List<string> tmpList = XmlResources.GetTownsPrefList();
            if (tmpList != null)
            {
                foreach (string item in tmpList)
                {
                    ddl.Items.Add(item);
                }
            }
            ddl.ID = "DropDown_TownPrefs";
            ddl.SelectedValue = req.CityPref;
            ddl.Width = 200;
            panel.Controls.Add(ddl);

            panel.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 294;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Долгопрудный");
            txtBox.Text = req.City; txtBox.ID = "txtBox_City"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>ФИО руководителя</td>"));                     // ФИО руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Звягенцев Олег Георгиевич");
            txtBox.Text = req.ChiefFio; txtBox.ID = "txtBox_ChiefFio"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Должность руководителя</td>"));                     // Должность руководителя
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Заведующий по учебной части");
            txtBox.Text = req.ChiefPosition; txtBox.ID = "txtBox_ChiefPosition"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если у вас нет руководителя, то введите 'НЕТ' в этом поле</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Электронная почта руководителя (или участника)</td>"));             // Электронная почта руководителя (или участника)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "o.zvyagentsev@yandex.ru");
            txtBox.Text = req.ChiefEmail; txtBox.ID = "txtBox_ChiefEmail"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Контактный телефон руководителя (или участника)</td>"));             // Телефон руководителя (или участника) 
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "89065556677 или +79065556677");
            txtBox.Text = req.ChiefTelephone; txtBox.ID = "txtBox_ChiefTelephone"; txtBox.MaxLength = 20; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Kosmos;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Kosmos

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Kosmos(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Kosmos.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Подраздел в тематике (SubsectionName) - Номинация

                //DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                //if (ddl.SelectedValue == "НЕТ")
                //{
                //    checker = false;
                //    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.SubsectionName = ddl.SelectedValue;
                //    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                //}

                #endregion

                #region Наименование команды

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ClubsName = txtBox.Text;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                //if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.WorkName = txtBox.Text.Trim();
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Комментарии

                //txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkComment");
                //if (txtBox.Text.Trim() == "")
                //{
                //    checker = false;
                //    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                //}
                //else
                //{
                //    req.WorkComment = txtBox.Text.Trim();
                //    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                //}

                #endregion

                #region Образовательная организация (полностью)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 3)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.EducationalOrganization = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Структурное подразделение

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Division");
                if (!string.IsNullOrEmpty(txtBox.Text))
                {
                    req.Division = txtBox.Text.Trim();
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefFio = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.ChiefPosition = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                //if (req.Links.Count == 0)
                //{
                //    checker = false;
                //    errTxt += "<br/>Загрузите ссылку на видео с вашей работой";
                //}

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region ИТОГОВЫЕ ОПЕРАЦИИ

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetKosmosCode(Kosmos.self));
                string admMailParamName = "admmailkosmos";
                string fileUrlPath = _imgUrlPathKosmos.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" + 
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название команды:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ClubsName + "</td></tr>" +
                                   
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.EducationalOrganization + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Структурное подразделение:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Division + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Region + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.City + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>ФИО руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFio + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Должность руководителя:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefPosition + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Kosmos.self)] = null;

            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }
        }

        #endregion

        #endregion

        #endregion

        #region Метод RequestPanel_Science(string subName)

        /// <summary>Метод формирует html-код формы заявки для Конкурса научных работ "В моей лаборатории вот что... "</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Science(string subName)
        {
            Panel panelResult = new Panel();

            CheckReqestOnOff(EnumsHelper.GetScienceValue(Science.self));

            if (
                subName == EnumsHelper.GetScienceCode(Science.ekologia_ochno) ||
                subName == EnumsHelper.GetScienceCode(Science.ekologia_zaochno) ||
                subName == EnumsHelper.GetScienceCode(Science.himiya_ochno) ||
                subName == EnumsHelper.GetScienceCode(Science.himiya_zaochno) ||
                subName == EnumsHelper.GetScienceCode(Science.fizika_ochno) ||
                subName == EnumsHelper.GetScienceCode(Science.fizika_zaochno) ||
                subName == EnumsHelper.GetScienceCode(Science.biologiya_ochno) ||
                subName == EnumsHelper.GetScienceCode(Science.biologiya_zaochno))
            {
                panelResult = RequestPanel_Science_all(subName);
            }

            return panelResult;
        }

        #endregion

        #region Метод RequestPanel_Science_all(string subName)

        /// <summary>Метод формирует html-код формы заявки для 3-х номинаций Конкурса научных работ "В моей лаборатории вот что... "</summary>
        /// <returns>Возвращает форму заявки</returns>
        public Panel RequestPanel_Science_all(string subName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_c";

            #region Получение структуры данных

            CompetitionRequest req = new CompetitionRequest();
            req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Science.self)];
            req.CompetitionName = EnumsHelper.GetScienceCode(Science.self);
            req.SubsectionName = EnumsHelper.GetScienceValueFromCode(subName);

            #endregion

            #region ЗАГОЛОВОК

            panelResult.Controls.Add(new LiteralControl("<h1>Форма заявки<br/>на участие в Конкурсе научных работ \"В моей лаборатории вот что... \"</h1>"));

            #endregion

            #region Панель с ознакомительной информацией

            Panel panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Добрый день! Оргкомитет конкурса просит вас заполнить все пункты Заявки. В случае отсутствии информации, в поля для заполнения вводится слово \"НЕТ\".</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Дата окончания приема заявок указана в положении конкурса.</p>"));
            panel.Controls.Add(new LiteralControl("<p class='abzac_c'>Поля, отмеченные звёздочкой (<span class='span_red_c'>*</span>) - <span class='span_red_c'>обязательны для заполнения</span></p>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель с полями для заполнения

            panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Выпадающий список номинаций

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Номинация</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            var ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            ddl.Items.Add(req.SubsectionName);
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = false;
            ddl.Width = 516;
            panel.Controls.Add(ddl);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 2);

            #endregion

            TextBox txtBox = new TextBox(); LinkButton lBtn = new LinkButton();

            #region Код заполнения полей Комментарии к работе

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Название работы</td>"));                          // Название работы
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Вечерний Севастополь");
            txtBox.Text = req.WorkName; txtBox.ID = "txtBox_WorkName"; txtBox.MaxLength = 100; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Комментарий</td>"));                     // Комментарий
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.MultiLine; txtBox.Rows = 5;
            txtBox.Attributes.Add("placeholder", "Кратко опишите свою работу. Возможный вариант описания:\n" +
                                                     "Что из себя представляет моя работа (стих, проза или другое). Что меня вдохновило. Кому или чему посвящается. " +
                                                     "Что я хочу сказать людям, которые будут просматривать и оценивать её.");
            txtBox.Text = req.WorkComment; txtBox.ID = "txtBox_WorkComment"; txtBox.MaxLength = 500; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация (полностью)

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Образовательная организация (полностью)</td>"));    // Образовательная организация (полностью)
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Средняя образовательная школа № 32 города Мытищи");
            txtBox.Text = req.EducationalOrganization; txtBox.ID = "txtBox_EducationalOrganization"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c'>"));
            panel.Controls.Add(new LiteralControl("если вы не учащийся, то введите 'НЕТ' в этом поле</td></tr>"));

            #endregion

            #region Структурное подразделение

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Структурное подразделение</td>"));    // Структурное подразделение
            panel.Controls.Add(new LiteralControl("<td></td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Структурное подразделение (дополнительная информация)");
            txtBox.Text = req.Division; txtBox.ID = "txtBox_Division"; txtBox.MaxLength = 150; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Адрес

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Регион</td>"));                               // Регион
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c";
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Московская область");
            txtBox.Text = req.Region; txtBox.ID = "txtBox_Region"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Город</td>"));                               // Город
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));
            ddl = new DropDownList(); ddl.CssClass = "txtBox_c placeHolderForm_c";
            List<string> tmpList = XmlResources.GetTownsPrefList();
            if (tmpList != null)
            {
                foreach (string item in tmpList)
                {
                    ddl.Items.Add(item);
                }
            }
            ddl.ID = "DropDown_TownPrefs";
            ddl.SelectedValue = req.CityPref;
            ddl.Width = 200;
            panel.Controls.Add(ddl);

            panel.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            txtBox = new TextBox(); txtBox.CssClass = "txtBox_c placeHolderForm_c"; txtBox.Width = 294;
            txtBox.TextMode = TextBoxMode.SingleLine; txtBox.Attributes.Add("placeholder", "Долгопрудный");
            txtBox.Text = req.City; txtBox.ID = "txtBox_City"; txtBox.MaxLength = 50; panel.Controls.Add(txtBox);
            panel.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Данные руководителя

            Content_AddChief_Common(ref panel, ref req);

            #endregion

            #region Согласие на предоставление и обработку информации.

            Content_Agreements_Common(ref panel, ref req);

            #endregion

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления материалов работ

            Content_DocRar_Common(ref panelResult, ref req, _pathToScienceFolder, _imgUrlPathScience);

            #endregion

            if (new string[] { EnumsHelper.GetScienceCode(Science.ekologia_zaochno), EnumsHelper.GetScienceCode(Science.himiya_zaochno), EnumsHelper.GetScienceCode(Science.fizika_zaochno), EnumsHelper.GetScienceCode(Science.biologiya_zaochno) }.Contains(subName))
            {
                #region Панель добавления ссылки на видео

                Content_VideoLink_Common(ref panelResult, ref req);

                #endregion
            }

            #region Панель добавления участников первого тура

            panel = new Panel(); panel.CssClass = "panelSub_c";

            panel.Controls.Add(new LiteralControl("<table class='table_Form_c'>"));

            #region Поля ФИО, Дата рождения, Место учебы, Класс с литерой

            Content_AddParty_Common(ref panel, ref req, 1);

            #endregion

            panel.Controls.Add(new LiteralControl("</table>"));

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель добавления файла протокола

            Content_AddProtocol_Common(ref panelResult, ref req);

            #endregion

            #region Панель с кнопками отправить заявку и очистить заявку

            panel = new Panel(); panel.CssClass = "panelSub_c";

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnSendRequest_c";
            lBtn.Text = "ОТПРАВИТЬ ЗАЯВКУ";
            lBtn.Command += lBtn_SendRequest_Science_all;
            panel.Controls.Add(lBtn);
            lBtn.OnClientClick = "ym(68802841,'reachGoal','SendRequest'); return formBtnClick()";       //formBtnClick() находится в файле site.js и предотвращает дубликование добавления заявок при множественных кликах на кнопку ОТПРАВИТЬ ЗАЯВКУ

            panel.Controls.Add(lBtn);

            Content_ClearRequest_Common(ref panel, ref req);

            panelResult.Controls.Add(panel);

            #endregion

            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c";
            panelWarning.ID = "panelWarning_c";
            panelResult.Controls.Add(panelWarning);

            #endregion

            return panelResult;
        }

        #region События

        #region lBtn_SendRequest_Science_all

        /// <summary>Нажатие на кнопку ОТПРАВИТЬ ЗАЯВКУ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_SendRequest_Science_all(object sender, CommandEventArgs e)
        {
            Label lbl = new Label(); Panel panelWarn = new Panel(); TextBox txtBox = new TextBox();

            try
            {
                #region Получение ссылки на структуру данных

                CompetitionRequest req = new CompetitionRequest();
                req = (CompetitionRequest)_context.Session[EnumsHelper.GetSessionName(Science.self)];

                #endregion

                #region Готовим панель предупреждений

                panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
                panelWarn.Controls.Clear();
                lbl.Text = ""; lbl.ForeColor = Color.Red;

                #endregion

                #region Сбор переменных и привязка их к структуре

                bool checker = true;
                req.DateReg = DateTime.Now.Ticks;
                req.DateApply = 0;
                req.IsApply = false;
                req.Approved = false;
                string errTxt = "Неправильное заполнение полей. Исправьте значения в выделенных красным полях и повторите попытку.";

                #region ФИО

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios != "")
                {
                    req.Fio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                DateTime dtTmp;
                string age = txtBox.Text.Trim();
                if (age == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age = age;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios != "")
                {
                    req.Age = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox.Text != "")
                {
                    req.School = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools != "")
                {
                    req.School = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox.Text != "")
                {
                    req.ClassRoom = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms != "")
                {
                    req.ClassRoom = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion  

                #region Подраздел в тематике (SubsectionName) - Номинация

                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");

                if (ddl.SelectedValue == "НЕТ")
                {
                    checker = false;
                    ddl.BorderWidth = 1; ddl.BorderColor = Color.Red; ddl.BackColor = Color.Bisque;
                }
                else
                {
                    req.SubsectionName = ddl.SelectedValue;
                    ddl.BorderWidth = 0; ddl.BorderColor = Color.Transparent; ddl.BackColor = Color.White;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");

                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkName = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Комментарий

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkComment");
                if (txtBox.Text.Trim() == "")
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.WorkComment = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Образовательная организация (полностью) +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox.Text.Trim().ToUpper() == "НЕТ")
                {
                    req.EducationalOrganization = txtBox.Text.Trim().ToUpper();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 3)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.EducationalOrganization = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }

                #endregion

                #region Структурное подразделение

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Division");
                if (!string.IsNullOrEmpty(txtBox.Text))
                {
                    req.Division = txtBox.Text.Trim();
                }

                #endregion

                #region Регион

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");

                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Region = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Город

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 2)
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.City = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region ФИО руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefFio = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefFios.Count > 0)
                {
                    req.ChiefFio = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Должность руководителя (учителя)

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");

                if (txtBox.Text != "")
                {
                    if (txtBox.Text.Trim() == "" && txtBox.Text.Trim().Length < 5)
                    {
                        checker = false;
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.ChiefPosition = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.ChiefPositions.Count > 0)
                {
                    req.ChiefPosition = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Электронная почта руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox.Text.Trim().ToUpper() == "" || !CompetitonWorkCommon.IsValidEmail(txtBox.Text.Trim()))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefEmail = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Контактный телефон руководителя +

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox.Text.Trim().ToUpper() == "" || !Regex.IsMatch(txtBox.Text.Trim(), CompetitonWorkCommon.phonePattern))
                {
                    checker = false;
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.ChiefTelephone = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение по обработке персданных

                CheckBox chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PdnProcessing = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (!chkBox.Checked)
                {
                    checker = false;
                    chkBox.BorderWidth = 1; chkBox.BorderColor = Color.Red; chkBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.PublicAgreement = true;
                    chkBox.BorderWidth = 0; chkBox.BorderColor = Color.Transparent; chkBox.BackColor = Color.White;
                }

                #endregion

                #region Работы

                if (req.Links.Count == 0)
                {
                    checker = false;
                    errTxt += "<br/>Загрузите файл(ы) работ";
                }

                #endregion

                #region ФИО_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");

                if (txtBox.Text != "")
                {
                    if (!CompetitonWorkCommon.IsFioOk(txtBox.Text))
                    {
                        txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                    }
                    else
                    {
                        req.Fio_1 = txtBox.Text.Trim();
                        txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                    }
                }
                else if (req.Fios_1 != "")
                {
                    req.Fio_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                DateTime dtTmp_1;
                var age_1 = txtBox.Text.Trim();
                if (age_1 == "")
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else if (!DateTime.TryParse(txtBox.Text.Trim(), out dtTmp_1))
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }
                else
                {
                    req.Age_1 = age_1;
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                if (req.Fios_1 != "")
                {
                    req.Age_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox.Text != "")
                {
                    req.School_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.Schools_1 != "")
                {
                    req.School_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox.Text != "")
                {
                    req.ClassRoom_1 = txtBox.Text.Trim();
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else if (req.ClassRooms_1 != "")
                {
                    req.ClassRoom_1 = "";
                    txtBox.BorderWidth = 0; txtBox.BorderColor = Color.Transparent; txtBox.BackColor = Color.White;
                }
                else
                {
                    txtBox.BorderWidth = 1; txtBox.BorderColor = Color.Red; txtBox.BackColor = Color.Bisque;
                }

                #endregion

                #region Проверка добавления участников 2-го тура

                if (req.Fios == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 2-го тура.";
                }

                #endregion

                #region Проверка добавления участников 1-го тура, не прошедшие во 2-й тур

                if (req.Fios_1 == "")
                {
                    checker = false;
                    errTxt += "  Добавьте участника(ов) 1-го тура, не прошедшие во 2-й тур.";
                }

                #endregion

                #region Протокол PDF

                if (req.ProtocolFile == "")
                {
                    checker = false;
                    errTxt += "  Загрузите файл протокола 1-го тура или согласие на обработку персональных данных в формате PDF.";
                }

                #endregion

                #region Проверка ВОЗРАСТНОЙ КАТЕГОРИИ

                if (checker)
                {
                    // Проверка того, что все участники команды находятся в одной и той же возрастной категории
                    if (!CompetitionsWork.IsPartiesFromOneAgeCategory(req))
                    {
                        checker = false;
                        errTxt = "Участники команды должны быть в одной возрастной категории.";
                    }

                    // Проверка попадания участников в одну из возрастных категорий
                    if (checker)
                    {
                        if (CompetitionsWork.GetAgeCategory(req) == EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY))
                        {
                            checker = false;
                            errTxt = "Возраст(ы) участника(ов) не подходит(ят) ни под одну возрастную категорию";
                        }
                        else
                            req.AgeСategory = CompetitionsWork.GetAgeCategory(req);
                    }
                }

                #endregion

                #region Итоговые операции

                if (!checker)
                {
                    lbl.Text = errTxt; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #endregion

                #region Сохранение заявки в базу данных

                CompetitionsWork competitionsWork = new CompetitionsWork();
                competitionsWork.InsertOneRequest(ref req);
                if (req.Id == -1)
                {
                    lbl.Text = "Не удалось сохранить вашу заявку. Попробуйте повторить или сообщите нам об этом!"; panelWarn.Controls.Add(lbl);
                    return;
                }

                #endregion

                #region Отправка уведомления администратору, ответственному за данный конкурс по почте

                string competitionName = EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetScienceCode(Science.self)) + ". Номинация «" + req.SubsectionName + "»";
                string admMailParamName = "admmailscience";
                string fileUrlPath = _imgUrlPathScience.Replace("~/", "");
                string fio = req.Fios.Replace("|", "<br/>");
                string age1 = req.Agies.Replace("|", "<br/>");
                string[] fios = req.Fios.Split(new[] { '|' });
                string[] agies = req.Agies.Split(new[] { '|' });
                string[] schools = req.Schools.Split(new[] { '|' });
                string[] classRooms = req.ClassRooms.Split(new[] { '|' });

                string[] fios_1 = req.Fios_1.Split(new[] { '|' });
                string[] agies_1 = req.Agies_1.Split(new[] { '|' });
                string[] schools_1 = req.Schools_1.Split(new[] { '|' });
                string[] classRooms_1 = req.ClassRooms_1.Split(new[] { '|' });

                DateTime dt = new DateTime(req.DateReg);

                StringBuilder sameEmailData = new StringBuilder("<br /><br />" + "Данные по заявке:" + "<br /><br />" +
                                     "<table><tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Номер заявки и дата:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Id.ToString() + " от " + dt.ToShortDateString() + " (поступила в " +
                                     dt.ToShortTimeString() + ")" +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название тематики:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.SubsectionName + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Возрастная категория:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     CompetitionsWork.GetAgeCategory(req) +
                                     "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                      "<span style='color:#000; font-weight:bold;'>Участники 2-го тура</span>" +
                                      "</td></tr>");
                for (int i = 0; i < fios.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios[i] + " / " + agies[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools[i] + " / " + classRooms[i] +
                                    "</td></tr>");
                }

                sameEmailData.Append(
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Название работы:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkName +
                                     "</td></tr>" +
                                     "<tr><td style = 'padding: 0 9px 5px 9px;' > " +
                                     "<span style='color:blue; font-weight:bold;'>Комментарий:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.WorkComment +
                                     "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Образовательная организация (полностью):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.EducationalOrganization + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Структурное подразделение:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Division + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Регион:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.Region + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Город:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.City + "</td></tr>");

                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". ФИО руководителя/Должность:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefFios[i] + " / " + req.ChiefPositions[i] +
                                     "</td></tr>");
                }

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Электронная почта руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefEmail + "</td></tr>" +
                                     "<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>Контактный телефон руководителя (или участника):</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     req.ChiefTelephone +
                 "</td></tr>");

                sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;' colspan='2'>" +
                                    "<span style='color:#000; font-weight:bold;'>Участники 1-го тура, не прошедшие во 2-й тур</span>" +
                                    "</td></tr>");
                for (int i = 0; i < fios_1.Length; i++)
                {
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                     "<span style='color:blue; font-weight:bold;'>" + (i + 1) + ". Фамилия Имя Отчетство/Дата рождения:</span>" +
                                     "</td><td style='padding: 0 9px 5px 9px;'>" +
                                     fios_1[i] + " / " + agies_1[i] +
                                     "</td></tr>");
                    sameEmailData.Append("<tr><td style='padding: 0 9px 5px 9px;'>" +
                                    "<span style='color:blue; font-weight:bold;'>" + "   Место учёбы/Класс с литерой|Курс:</span>" +
                                    "</td><td style='padding: 0 9px 5px 9px;'>" +
                                    schools_1[i] + " / " + classRooms_1[i] +
                                    "</td></tr>");
                }
                sameEmailData.Append("</table>");

                StringBuilder mailbodyAdm = new StringBuilder();
                mailbodyAdm.Append("Здравствуйте!" + "<br /><br />" +
                                    "Поступила заявка на участие в конкурсе!<br /><br />" +
                                    "<strong>" + competitionName + "</strong><br />" +
                                     sameEmailData.ToString());

                StringBuilder filesLinks = new StringBuilder();
                filesLinks.Append("<br />Прямые ссылки на работы заявителя:<br />");
                int counter = 1;
                foreach (string fName in req.Links)
                {
                    if (fName.ToLower().StartsWith("http"))
                        filesLinks.Append("<a href='" + fName + "'>ссылка" + counter + "</a><br/>");
                    else
                        filesLinks.Append("<a href='" + baseUrl + fileUrlPath + fName + "'>ссылка" + counter + "</a><br/>");
                    counter++;
                }

                mailbodyAdm.Append(filesLinks.ToString());
                mailbodyAdm.Append("<br /><br />Для утверждения заявки перейдите в <a href='" + baseUrl + "adm" + "'>Консоль администрирования</a>");
                mailbodyAdm.Append("<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно.");

                var config = new ConfigFile();
                string adminMail = config.GetParam(admMailParamName, true);
                if (adminMail == "-1")
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось найти почтовый ящик администратора конкурса (искался ящик - " + admMailParamName + ").");
                }
                //если письмо не отослано, то..
                if (!new SendMailClass().SendMail(adminMail, "Письмо о поступлении заявки. " + competitionName, mailbodyAdm.ToString(), req))
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо о поступлении заявки (№ " + req.Id.ToString() + ") на почтовый ящик администратора конкурса (" + adminMail + ").");
                }

                #endregion

                Content_SuccessRegistrationRequest(req, competitionName, sameEmailData.Append(filesLinks.ToString()));

                _context.Session[EnumsHelper.GetSessionName(Science.self)] = null;
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось отправить заявку. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);

                #endregion
            }

        }

        #endregion

        #endregion

        #endregion
        
        #region Метод FieldsValueSave(CompetitionRequest req, Page page)

        /// <summary>Метод пробегается по полям формы заявки и сохраняет их в переданную структуру</summary>
        /// <param name="req">структура данных заявки, в которую метод записывает данные</param>
        /// <param name="page">страница, с которой собираются данные</param>
        private void FieldsValueSave(CompetitionRequest req, Page page)
        {
            CheckBox chkBox;
            TextBox txtBox;
            DropDownList ddl;
            //string tmp = "";
            int tmpNum = 0;

            try
            {
                #region Номинация

                ddl = (DropDownList)page.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                if (ddl != null)
                {
                    req.SubsectionName = ddl.SelectedValue;
                }

                #endregion

                #region Возрастная категория

                ddl = (DropDownList)page.FindControl("ctl00$ContentPlaceHolder1$DropDown_AgeСategories");
                if (ddl != null)
                {
                    req.AgeСategory = ddl.SelectedValue;
                }

                #endregion

                #region Количество участников I отборочного тура

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_PartyCount");
                if (txtBox != null)
                {
                    tmpNum = StringToNum.ParseInt(txtBox.Text);
                    if (tmpNum < 0)
                    {
                        tmpNum = 0;
                    }
                    req.PartyCount = tmpNum;
                }

                #endregion

                #region ФИО

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio");
                if (txtBox != null)
                {
                    req.Fio = txtBox.Text;
                }

                #endregion

                #region Дата рождения

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age");
                if (txtBox != null)
                {
                    req.Age = txtBox.Text;
                }

                #endregion

                #region Место учебы

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_School");
                if (txtBox != null)
                {
                    req.School = txtBox.Text;
                }
                #endregion

                #region Класс с литерой

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom");
                if (txtBox != null)
                {
                    req.ClassRoom = txtBox.Text;
                }


                #endregion

                #region ФИО_1

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Fio_1");
                if (txtBox != null)
                {
                    req.Fio_1 = txtBox.Text;
                }

                #endregion

                #region Дата рождения_1

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Age_1");
                if (txtBox != null)
                {
                    req.Age_1 = txtBox.Text;
                }

                #endregion

                #region Место учебы_1

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_School_1");
                if (txtBox != null)
                {
                    req.School_1 = txtBox.Text;
                }

                #endregion

                #region Класс с литерой_1

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClassRoom_1");
                if (txtBox != null)
                {
                    req.ClassRoom_1 = txtBox.Text;
                }

                #endregion

                #region ФИО автора

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_AthorFio");
                if (txtBox != null)
                {
                    req.AthorFio = txtBox.Text;
                }

                #endregion

                #region Хронометраж - минуты

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Timing_min");
                if (txtBox != null)
                {
                    tmpNum = StringToNum.ParseInt(txtBox.Text);
                    if (tmpNum < 0)
                    {
                        tmpNum = 0;
                    }
                    req.Timing_min = tmpNum;
                }

                #endregion

                #region Хронометраж - секунды

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Timing_sec");
                if (txtBox != null)
                {
                    tmpNum = StringToNum.ParseInt(txtBox.Text);
                    if (tmpNum < 0)
                    {
                        tmpNum = 0;
                    }
                    req.Timing_sec = tmpNum;
                }

                #endregion

                #region Вес

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Weight");
                if (txtBox != null)
                {
                    int res = StringToNum.ParseInt(txtBox.Text);
                    if (res <= -1)   //сразу проверка на ошибочное значение и на отрицательные цифры
                    {
                        req.Weight = 0;
                    }
                    else
                    {
                        req.Weight = res;
                    }
                }

                #endregion

                #region Вес_1

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Weight_1");
                if (txtBox != null)
                {
                    int res = StringToNum.ParseInt(txtBox.Text);
                    if (res <= -1)   //сразу проверка на ошибочное значение и на отрицательные цифры
                    {
                        req.Weight_1 = 0;
                    }
                    else
                    {
                        req.Weight_1 = res;
                    }
                }

                #endregion

                #region Техническое сопровождение

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_TechnicalInfo");
                if (txtBox != null)
                {
                    req.TechnicalInfo = txtBox.Text;
                }

                #endregion

                #region Название работы

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkName");
                if (txtBox != null)
                {
                    req.WorkName = txtBox.Text;
                }

                #endregion

                #region Комментарий

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_WorkComment");
                if (txtBox != null)
                {
                    req.WorkComment = txtBox.Text;
                }

                #endregion

                #region Фактический адрес образовательной организации (полностью)	

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Addr");
                if (txtBox != null)
                {
                    req.Addr = txtBox.Text;
                }

                #endregion

                #region Место проведения тренировок спортивного клуба	

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Addr1");
                if (txtBox != null)
                {
                    req.Addr1 = txtBox.Text;
                }

                #endregion

                #region Структурное подразделение

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Division");
                if (txtBox != null)
                {
                    req.Division = txtBox.Text.Trim();
                }

                #endregion

                //if (((RadioButton)this._pag.FindControl("ctl00$ContentPlaceHolder1$organization")).Checked)
                //{
                //    req.EducationalOrganization = "";
                //    req.EducationalOrganizationShort = "";
                //}
                //else
                //{
                //    req.EducationalOrganization = "Индивидуальная заявка";
                //    req.EducationalOrganizationShort = "";
                //}

                #region Образовательная организация (полностью) +

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganization");
                if (txtBox != null)
                {
                    req.EducationalOrganization = txtBox.Text;
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationCity");
                if (txtBox != null && !string.IsNullOrEmpty(txtBox.Text))
                {
                    if (string.IsNullOrEmpty(req.EducationalOrganization) && txtBox.Text != "Регион: , Район: , Город: ")
                        req.EducationalOrganization = "Индивидуальная заявка";
                }

                #endregion

                #region Образовательная организация

                txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBox_EducationalOrganizationShort");
                if (txtBox != null)
                {
                    req.EducationalOrganizationShort = txtBox.Text.Trim();
                }

                #endregion

                #region ФО

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_District");
                if (txtBox != null)
                {
                    req.District = txtBox.Text;
                }

                #endregion

                #region Регион

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Region");
                if (txtBox != null)
                {
                    req.Region = txtBox.Text;
                }

                #endregion

                #region Район

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_Area");
                if (txtBox != null)
                {
                    req.Area = txtBox.Text;
                }

                #endregion

                #region Город

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_City");
                if (txtBox != null)
                {
                    req.City = txtBox.Text;
                }

                #endregion

                #region ФИО руководителя +

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefFio");
                if (txtBox != null)
                {
                    req.ChiefFio = txtBox.Text;
                }

                #endregion

                #region Должность руководителя +

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefPosition");
                if (txtBox != null)
                {
                    req.ChiefPosition = txtBox.Text;
                }

                #endregion

                #region Электронная почта руководителя (или участника) +

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefEmail");
                if (txtBox != null)
                {
                    req.ChiefEmail = txtBox.Text;
                }

                #endregion

                #region Контактный телефон руководителя (или участника) +

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_ChiefTelephone");
                if (txtBox != null)
                {
                    req.ChiefTelephone = txtBox.Text;
                }

                #endregion

                #region Соглашение по обработке персданных

                chkBox = (CheckBox)page.FindControl("ctl00$ContentPlaceHolder1$chkBox_PdnProcessing");
                if (chkBox != null)
                {
                    req.PdnProcessing = chkBox.Checked;
                }

                #endregion

                #region Соглашение на публикацию работ с сохранением авторства

                chkBox = (CheckBox)page.FindControl("ctl00$ContentPlaceHolder1$chkBox_PublicAgreement");
                if (chkBox != null)
                {
                    req.PublicAgreement = chkBox.Checked;
                }

                #endregion

                #region Медицинская справка

                chkBox = (CheckBox)page.FindControl("ctl00$ContentPlaceHolder1$chkBox_ProcMedicine");
                if (chkBox != null)
                {
                    req.ProcMedicine = chkBox.Checked;
                }

                #endregion

                #region Наименование клуба

                txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_ClubName");
                if (txtBox != null)
                {
                    req.ClubsName = txtBox.Text;
                }

                #endregion

                #region Количество участников I отборочного тура согласно протоколу

                //txtBox = (TextBox)page.FindControl("ctl00$ContentPlaceHolder1$txtBox_ProtocolPartyCount");
                //if (txtBox != null)
                //{
                //    int res = StringToNum.ParseInt(txtBox.Text);
                //    if (res != -1)
                //    {
                //        req.ProtocolPartyCount = res;
                //    }
                //}

                #endregion

            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }
        }

        #endregion

        #region Методы VotingPanel_Theatre(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только по конкурсу "Мастер сцены" с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса thеatre, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Theatre(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            if (cName != EnumsHelper.GetTheatreCode(Theatre.self))
            {
                if (cName == EnumsHelper.GetTheatreCode(Theatre.teatrIskusSpekt) ||
                cName == EnumsHelper.GetTheatreCode(Theatre.teatrIskusLitMuzKom) ||
                cName == EnumsHelper.GetTheatreCode(Theatre.teatrIskusMultiGanr))
                {
                    panelResult = VotingPanel_Theatre_teatrIskus(cName);
                }
                else
                {
                    panelResult = VotingPanel_Theatre_all(cName);
                }
            }
            else
            {
                #region Добавление title и description

                _pag.Title = "Номинация \"" + EnumsHelper.GetTheatreValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetTheatreCode(Theatre.self));
                _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetTheatreValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetTheatreCode(Theatre.self));

                #endregion
                #region Добавление кнопок перехода к номинациям

                ///Вокал
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.vokalAkademVokal) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.vokalAkademVokal) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.vokalFolklor) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.vokalFolklor) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.vokalEstradVokal) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.vokalEstradVokal) + "</a>"));

                //Инструментальный жанр
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.insrumZanrAnsambli) + "' class='aCompetitions'>" +
                                            EnumsHelper.GetTheatreValue(Theatre.insrumZanrAnsambli) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.insrumZanrGitara) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetTheatreValue(Theatre.insrumZanrGitara) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.insrumZanrDuhovieUdarnInstrum) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetTheatreValue(Theatre.insrumZanrDuhovieUdarnInstrum) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.insrumZanrNarodnieInstrum) + "' class='aCompetitions'>" +
                                                          EnumsHelper.GetTheatreValue(Theatre.insrumZanrNarodnieInstrum) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.insrumZanrOrkestri) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetTheatreValue(Theatre.insrumZanrOrkestri) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.insrumZanrSintezator) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.insrumZanrSintezator) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.insrumZanrStrunnoSmichkovieInstrumenti) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.insrumZanrStrunnoSmichkovieInstrumenti) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.insrumZanrFortepiano) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.insrumZanrFortepiano) + "</a>"));


                //Театральное искусство
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.teatrIskusLitMuzKom) + "' class='aCompetitions'>" +
                                                       EnumsHelper.GetTheatreValue(Theatre.teatrIskusLitMuzKom) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.teatrIskusSpekt) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.teatrIskusSpekt) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.teatrIskusMultiGanr) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.teatrIskusMultiGanr) + "</a>"));
                
                //Хореография
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.xoreoBalniyTanets) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetTheatreValue(Theatre.xoreoBalniyTanets) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.xoreoKadeti) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.xoreoKadeti) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.xoreoClassichTanets) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.xoreoClassichTanets) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.xoreoNarodTanets) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.xoreoNarodTanets) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.xoreoSovremTanets) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetTheatreValue(Theatre.xoreoSovremTanets) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.xoreoStilNarodTanets) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.xoreoStilNarodTanets) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.xoreoCircIskus) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.xoreoCircIskus) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.xoreoCherliding) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetTheatreValue(Theatre.xoreoCherliding) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.xoreoEstradTanets) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetTheatreValue(Theatre.xoreoEstradTanets) + "</a>"));

                //Художественное слово
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/competitiontheatre.aspx?subname=" + EnumsHelper.GetTheatreCode(Theatre.hudSlovo) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetTheatreValue(Theatre.hudSlovo) + "</a>"));

                return panelResult;

                #endregion
            }

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Theatre_all(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только по конкурсу "Мастер сцены" с возможностью голосования.</summary>
        /// <param name="cName">может принимать код конкурса thеatre, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Theatre_all(string cName)
        {
            Panel panelResult = new Panel();

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
            if (EnumsHelper.GetTheatreValueFromCode(cName) == "")
            {
                _pag.Response.Redirect("~/");
            }

            if (cfg.IsReqGettingOn(cName))       //Контроль отображения кнопки приема заявок
            {
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/reg.aspx?subname=" + cName +
                                                        "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов 

            //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
            if (EnumsHelper.GetTheatreValueFromCode(cName) == "")
            {
                _pag.Response.Redirect("~/");
            }

            CompetitionsForm form = new CompetitionsForm(_pag);

            //для театра моды сделана такая "логика", потому что раньше этот конкурс был в театре, а сейчас в одежде
            var compName = EnumsHelper.GetTheatreCode(Theatre.self);
            if (CompetitonWorkCommon.subnames_editorTheatreModa().Contains(EnumsHelper.GetTheatreValueFromCode(cName))) {
                compName = EnumsHelper.GetClothesCode(Clothes.self);
            }

            panelResult.Controls.Add(form.ResultsListPanel_Common(cName, compName, EnumsHelper.GetTheatreValueFromCode(cName)));

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetTheatreValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetTheatreCode(Theatre.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetTheatreValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetTheatreCode(Theatre.self));

            #endregion

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(cName))
            {
                return panelResult;
            }

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetTheatreCode(Theatre.self), "1", EnumsHelper.GetTheatreValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    if (req.Fios.Length == 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Автор:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Fio + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Возраст:</span>"));

                        DateTime dt = new DateTime(req.DateReg);
                        if (req.Age == "")
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Age + "</h4><br/>"));
                        }
                        else
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeFromBurth(Convert.ToDateTime(req.Age)) + "</h4><br/>"));
                        }

                        #endregion
                    }
                    else if (req.Fios.Length != 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участники(возраста):</span>"));
                        string[] fios = req.Fios.Split(new[] { '|' });
                        string[] agies = req.Agies.Split(new[] { '|' });
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>"));
                        DateTime dt = new DateTime(req.DateReg);
                        panelReqHeader.Controls.Add(new LiteralControl(CompetitionsWork.GetFiosAndAgesInOne(req.Fio + "|" + req.Fios, req.Age + "|" + req.Agies, " </br> ")));

                        panelReqHeader.Controls.Add(new LiteralControl("</h4><br/>"));

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                        #endregion
                    }

                    #endregion

                    #region Блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    foreach (string link in req.Links)
                    {
                        if (link.Contains(".mp3"))
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<a class='aFileVoice_vc' href='" + _imgUrlPathTheatre.Replace("~/", "../../../") + link + "'></a>"));
                            panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                        }
                        else if (link.StartsWith("http"))
                        {
                            ShowLinkInPanelResult(ref panelReqContent, link);
                        }
                        else
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<span class='youtubeWrap_vc'>" +
                                                                            "&nbsp;&nbsp;Работа не загружена.." +
                                                                            "</span>"));
                            panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                        }

                        panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;'>" + req.WorkComment + "</div>"));
                    }

                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу моей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    //условие для отключения кнопок голосования
                    if (cfg.IsVoitingBtnsOn(cName))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Theatre_teatrIskus(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами по номинациям Театрального искусства конкурса "Мастер сцены" с возможностью голосования.</summary>
        /// <param name="cName">может принимать код конкурса thеatre, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Theatre_teatrIskus(string cName)
        {
            Panel panelResult = new Panel();

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cfg.IsReqGettingOn(cName))       // Контроль отображения кнопки приема заявок
            {
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontheatre/reg.aspx?subname=" + cName +
                                                        "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов 

            CompetitionsForm form = new CompetitionsForm(_pag);
            panelResult.Controls.Add(form.ResultsListPanel_Common(EnumsHelper.GetTheatreCode(Theatre.teatrIskusLitMuzKom), EnumsHelper.GetTheatreCode(Theatre.self), EnumsHelper.GetTheatreValueFromCode(cName)));
            
            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetTheatreValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetTheatreCode(Theatre.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetTheatreValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetTheatreCode(Theatre.self));

            #endregion

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(cName))
            {
                return panelResult;
            }

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetTheatreCode(Theatre.self), "1", EnumsHelper.GetTheatreValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);

                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>№ заявки:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Id + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>Возрастная категория:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeCategory(req) + "</h4><br/>"));

                    if (req.Fios.Length == 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участник (возраст):</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Fio + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Возраст:</span>"));

                        DateTime dt = new DateTime(req.DateReg);
                        if (req.Age == "")
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Age + "</h4><br/>"));
                        }
                        else
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeFromBurth(Convert.ToDateTime(req.Age)) + "</h4><br/>"));
                        }

                        #endregion
                    }
                    else if (req.Fios.Length != 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участники (возраста):</span>"));
                        string[] fios = req.Fios.Split(new[] { '|' });
                        string[] agies = req.Agies.Split(new[] { '|' });
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>"));
                        DateTime dt = new DateTime(req.DateReg);
                        panelReqHeader.Controls.Add(new LiteralControl(CompetitionsWork.GetFiosAndAgesInOne(req.Fio + "|" + req.Fios, req.Age + "|" + req.Agies, " </br> ")));

                        panelReqHeader.Controls.Add(new LiteralControl("</h4><br/>"));

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                        #endregion
                    }

                    #endregion

                    #region Блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    foreach (string link in req.Links)
                    {
                        if (link.Contains(".mp3"))
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<a class='aFileVoice_vc' href='" + _imgUrlPathTheatre.Replace("~/", "../../../") + link + "'></a>"));
                            panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                        }
                        else if (link.StartsWith("http"))
                        {
                            ShowLinkInPanelResult(ref panelReqContent, link);
                        }
                        else
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<span class='youtubeWrap_vc'>" +
                                                                            "&nbsp;&nbsp;работа не загружена.." +
                                                                            "</span>"));
                            panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                        }

                        panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;'>" + req.WorkComment + "</div>"));
                    }

                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу моей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    //условие для отключения кнопок голосования
                    if (cfg.IsVoitingBtnsOn(cName))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Photo(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только по конкурсу "Крымский вернисаж" с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса foto, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Photo(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cName != EnumsHelper.GetPhotoCode(Photo.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetPhotoValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if (cfg.IsReqGettingOn(cName))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                }
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов 

            if (cName != EnumsHelper.GetPhotoCode(Photo.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetPhotoValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                string confCode = "";
                if (CompetitonWorkCommon.subnames_editorPhotoCompGraphic().Contains(EnumsHelper.GetPhotoValueFromCode(cName)))
                    confCode = EnumsHelper.GetPhotoCode(Photo.computerGraphic);
                else if (CompetitonWorkCommon.subnames_editorDPI1().Contains(EnumsHelper.GetPhotoValueFromCode(cName)))
                    confCode = EnumsHelper.GetPhotoCode(Photo.DPT1);
                else
                    confCode = cName;

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(confCode, EnumsHelper.GetPhotoCode(Photo.self), EnumsHelper.GetPhotoValueFromCode(cName)));
            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetPhotoCode(Photo.self))
            {
                #region Код

                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.photo) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.photo) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.izo) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.izo) + "</a>"));
                /*panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.computerGraphic) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.computerGraphic) + "</a>"));*/
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.computer_risunok) + "' class='aCompetitions'>" +
                                                            "Компьютерная графика. " + EnumsHelper.GetPhotoValue(Photo.computer_risunok) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.collazh_fotomontazh) + "' class='aCompetitions'>" +
                                                             "Компьютерная графика. " + EnumsHelper.GetPhotoValue(Photo.collazh_fotomontazh) + "</a>"));
                /*panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT1_makrame) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT1_makrame) + "</a>"));*/
                /*panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT1_gobelen) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT1_gobelen) + "</a>"));*/
                /*panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT1_hud_vishivka) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT1_hud_vishivka) + "</a>"));*/
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT1_hud_vyazanie) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetPhotoValue(Photo.DPT1_hud_vyazanie) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT1_bumagoplastika) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT1_bumagoplastika) + "</a>"));
                /*panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT1_loskut_shitie) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT1_loskut_shitie) + "</a>"));*/
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT1_avtor_igrushka) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT1_avtor_igrushka) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT1_voilokovalyanie) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT1_voilokovalyanie) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT1_biseropletenie) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT1_biseropletenie) + "</a>"));
                /*panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT1_fitodisign) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT1_fitodisign) + "</a>"));*/
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT2_keramika) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT2_keramika) + "</a>"));
                /*panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT2_hud_obr_stekla) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT2_hud_obr_stekla) + "</a>"));*/
                /*panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT2_hud_obr_kozhi) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT2_hud_obr_kozhi) + "</a>"));*/
                /*panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT2_narod_igrush_isglini) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT2_narod_igrush_isglini) + "</a>"));*/
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT2_batik) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT2_batik) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT2_dekupazh) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT2_dekupazh) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT2_rospis_poderevu) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetPhotoValue(Photo.DPT2_rospis_poderevu) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT1_combitehnics) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetPhotoValue(Photo.DPT1_combitehnics) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionfoto/competitionfoto.aspx?subname=" + EnumsHelper.GetPhotoCode(Photo.DPT1_plastilonografiya) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetPhotoValue(Photo.DPT1_plastilonografiya) + "</a>"));

                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetPhotoValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetPhotoCode(Photo.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetPhotoValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetPhotoCode(Photo.self));

            #endregion

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(cName))
            {
                return panelResult;
            }

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetPhotoCode(Photo.self), "1", EnumsHelper.GetPhotoValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;
            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    if (req.Fios.Length == 0)
                    {
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Автор:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Fio + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Возраст:</span>"));

                        DateTime dt = new DateTime(req.DateReg);
                        if (req.Age == "")
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Age + "</h4><br/>"));
                        else
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeFromBurth(Convert.ToDateTime(req.Age)) + "</h4><br/>"));
                    }
                    else if (req.Fios.Length != 0)
                    {
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участники(возраста):</span>"));
                        string[] fios = req.Fios.Split(new[] { '|' });
                        string[] agies = req.Agies.Split(new[] { '|' });
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>"));
                        DateTime dt = new DateTime(req.DateReg);
                        panelReqHeader.Controls.Add(new LiteralControl(CompetitionsWork.GetFiosAndAgesInOne(req.Fio + "|" + req.Fios, req.Age + "|" + req.Agies, " </br> ")));

                        panelReqHeader.Controls.Add(new LiteralControl("</h4><br/>"));

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));
                    }

                    #endregion

                    #region блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    //ImageForm imgForm = new ImageForm(_pag);
                    foreach (string link in req.Links)
                    {
                        try
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<img id='" + Guid.NewGuid().ToString().Replace("-", "") + "' data-src='" + _imgUrlPathFoto + link + "' src='../../../images/waiting.gif' class='imageStyle imageShadow lazyload' loading='lazy' style='width: 50px;' alt='фоторабота на тему " + req.CompetitionName + "' title='фоторабота на тему " + req.CompetitionName + "'>"));
                            //var imageF = imgForm.GetImage("785", "", "on", "on", _imgUrlPathFoto + link, "фоторабота на тему " + req.CompetitionName, "фоторабота на тему " + req.CompetitionName, Guid.NewGuid().ToString().Replace("-", ""));
                            //if (imageF != null) panelReqContent.Controls.Add(imageF);
                        }
                        catch (Exception ex)
                        {
                            DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, ex.Message);
                        }
                        //panelReqContent.Controls.Add(imgForm.GetImage("349", "", "on", "on", _imgUrlPathFoto + link, "фоторабота на тему " + req.CompetitionName, "фоторабота на тему " + req.CompetitionName, Guid.NewGuid().ToString().Replace("-", "")));
                    }

                    //panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;'>" + req.WorkComment + "</div>"));

                    #endregion

                    #region Блок с кнопками для голосования (с проверкой на включенность кнопок голосования)

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу моей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    if (cfg.IsVoitingBtnsOn(cName))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        //lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnZa_Command;
                        panelReqFooter.Controls.Add(lBtn);
                    }


                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Literary(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только по литературному конкурсу "Боевая слава Севастополя" с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса literary, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Literary(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cName != EnumsHelper.GetLiteraryCode(Literary.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetLiteraryValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if (cfg.IsReqGettingOn(cName))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionliterary/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                }
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов для номенаций

            if (cName != EnumsHelper.GetLiteraryCode(Literary.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetLiteraryValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(EnumsHelper.GetLiteraryCode(Literary.self), EnumsHelper.GetLiteraryCode(Literary.self), EnumsHelper.GetLiteraryValueFromCode(cName)));
            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetLiteraryCode(Literary.self))
            {
                #region Код

                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionliterary/competitionliterary.aspx?subname=" + EnumsHelper.GetLiteraryCode(Literary.stihi) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetLiteraryValue(Literary.stihi) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionliterary/competitionliterary.aspx?subname=" + EnumsHelper.GetLiteraryCode(Literary.esse) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetLiteraryValue(Literary.esse) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionliterary/competitionliterary.aspx?subname=" + EnumsHelper.GetLiteraryCode(Literary.rasskaz) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetLiteraryValue(Literary.rasskaz) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionliterary/competitionliterary.aspx?subname=" + EnumsHelper.GetLiteraryCode(Literary.sochinenie) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetLiteraryValue(Literary.sochinenie) + "</a>"));

                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetLiteraryValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetLiteraryCode(Literary.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetLiteraryValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetLiteraryCode(Literary.self));

            #endregion

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(cName))
            {
                return panelResult;
            }

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetLiteraryCode(Literary.self), "1", EnumsHelper.GetLiteraryValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    if (req.Fios.Length == 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Автор:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Fio + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Возраст:</span>"));

                        DateTime dt = new DateTime(req.DateReg);
                        if (req.Age == "")
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Age + "</h4><br/>"));
                        }
                        else
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeFromBurth(Convert.ToDateTime(req.Age)) + "</h4><br/>"));
                        }

                        #endregion
                    }
                    else if (req.Fios.Length != 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участники(возраста):</span>"));
                        string[] fios = req.Fios.Split(new[] { '|' });
                        string[] agies = req.Agies.Split(new[] { '|' });
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>"));
                        DateTime dt = new DateTime(req.DateReg);
                        panelReqHeader.Controls.Add(new LiteralControl(CompetitionsWork.GetFiosAndAgesInOne(req.Fio + "|" + req.Fios, req.Age + "|" + req.Agies, " </br> ")));

                        panelReqHeader.Controls.Add(new LiteralControl("</h4><br/>"));

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                        #endregion
                    }

                    #endregion

                    #region Блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    foreach (string link in req.Links)
                    {
                        panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                        panelReqContent.Controls.Add(new LiteralControl("<a class='aFile_vc' href='" + _imgUrlPathLiterary.Replace("~/", "../../../") + link + "'></a>"));
                        panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                    }

                    //panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;'>" + req.WorkComment + "</div>"));

                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу моей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    if (cfg.IsVoitingBtnsOn(cName))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Kultura(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только по конкурсу творческих и исследовательских работ «Открытый мир» с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса kultura, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Kultura(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cName != EnumsHelper.GetKulturaCode(Kultura.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetKulturaValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if (cfg.IsReqGettingOn(EnumsHelper.GetKulturaValue(Kultura.self)))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkultura/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                }
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов для номенаций

            if (cName != EnumsHelper.GetKulturaCode(Kultura.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetKulturaValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(EnumsHelper.GetKulturaCode(Kultura.self), EnumsHelper.GetKulturaCode(Kultura.self), EnumsHelper.GetKulturaValueFromCode(cName)));
            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetKulturaCode(Kultura.self))
            {
                #region Код

                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkultura/competitionkultura.aspx?subname=" + EnumsHelper.GetKulturaCode(Kultura.vossoedCrimaSRossiei) + "' class='aCompetitions'>" +
                //                                           EnumsHelper.GetKulturaValue(Kultura.vossoedCrimaSRossiei) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkultura/competitionkultura.aspx?subname=" + EnumsHelper.GetKulturaCode(Kultura.k75letiyu) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetKulturaValue(Kultura.k75letiyu) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkultura/competitionkultura.aspx?subname=" + EnumsHelper.GetKulturaCode(Kultura.zashitaobsihgranits) + "' class='aCompetitions'>" +
                //                                          EnumsHelper.GetKulturaValue(Kultura.zashitaobsihgranits) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkultura/competitionkultura.aspx?subname=" + EnumsHelper.GetKulturaCode(Kultura.kultrnNasledieCrima) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetKulturaValue(Kultura.kultrnNasledieCrima) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkultura/competitionkultura.aspx?subname=" + EnumsHelper.GetKulturaCode(Kultura.krimskyMostVSZ) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetKulturaValue(Kultura.krimskyMostVSZ) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkultura/competitionkultura.aspx?subname=" + EnumsHelper.GetKulturaCode(Kultura.iSeeCrimea) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetKulturaValue(Kultura.iSeeCrimea) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkultura/competitionkultura.aspx?subname=" + EnumsHelper.GetKulturaCode(Kultura.iSeeCrimeaEn) + "' class='aCompetitions'>" +
                                            EnumsHelper.GetKulturaValue(Kultura.iSeeCrimeaEn) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkultura/competitionkultura.aspx?subname=" + EnumsHelper.GetKulturaCode(Kultura.presentaionEn) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetKulturaValue(Kultura.presentaionEn) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkultura/competitionkultura.aspx?subname=" + EnumsHelper.GetKulturaCode(Kultura.audioGaid) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetKulturaValue(Kultura.audioGaid) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkultura/competitionkultura.aspx?subname=" + EnumsHelper.GetKulturaCode(Kultura.publishVkontakte) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetKulturaValue(Kultura.publishVkontakte) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkultura/competitionkultura.aspx?subname=" + EnumsHelper.GetKulturaCode(Kultura.intellektualKviz) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetKulturaValue(Kultura.intellektualKviz) + "</a>"));


                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetKulturaValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetKulturaCode(Kultura.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetKulturaValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetKulturaCode(Kultura.self));

            #endregion

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(EnumsHelper.GetKulturaValue(Kultura.self)))
            {
                return panelResult;
            }

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetKulturaCode(Kultura.self), "1", EnumsHelper.GetKulturaValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    if (req.Fios.Length == 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Автор:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Fio + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Возраст:</span>"));

                        DateTime dt = new DateTime(req.DateReg);
                        if (req.Age == "")
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Age + "</h4><br/>"));
                        }
                        else
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeFromBurth(Convert.ToDateTime(req.Age)) + "</h4><br/>"));
                        }

                        #endregion
                    }
                    else if (req.Fios.Length != 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участники(возраста):</span>"));
                        string[] fios = req.Fios.Split(new[] { '|' });
                        string[] agies = req.Agies.Split(new[] { '|' });
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>"));
                        DateTime dt = new DateTime(req.DateReg);
                        panelReqHeader.Controls.Add(new LiteralControl(CompetitionsWork.GetFiosAndAgesInOne(req.Fio + "|" + req.Fios, req.Age + "|" + req.Agies, " </br> ")));

                        panelReqHeader.Controls.Add(new LiteralControl("</h4><br/>"));

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                        #endregion
                    }

                    #endregion

                    #region Блок с работами

                    /*Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    foreach (string link in req.Links)
                    {
                        panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                        panelReqContent.Controls.Add(new LiteralControl("<a class='aFile_vc' href='" + _imgUrlPathLiterary.Replace("~/", "../../../") + link + "'></a>"));
                        panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                    }

                    panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;'>" + req.WorkComment + "</div>"));*/

                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу моей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    if (cfg.IsVoitingBtnsOn(cName))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Sport(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только по спортивному турниру "В единстве наша сила" с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса sport, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Sport(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cName != EnumsHelper.GetSportCode(Sport.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetSportValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if (cfg.IsReqGettingOn(cName))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionsport/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                }
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов для номинаций

            if (cName != EnumsHelper.GetSportCode(Sport.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetSportValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(cName, EnumsHelper.GetSportCode(Sport.self), EnumsHelper.GetSportValueFromCode(cName)));

            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetSportCode(Sport.self))
            {
                #region Код

                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionsport/competitionsport.aspx?subname=" + EnumsHelper.GetSportCode(Sport.prostEdinoborstva) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetSportValue(Sport.prostEdinoborstva) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionsport/competitionsport.aspx?subname=" + EnumsHelper.GetSportCode(Sport.thekvo) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetSportValue(Sport.thekvo) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionsport/competitionsport.aspx?subname=" + EnumsHelper.GetSportCode(Sport.boks) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetSportValue(Sport.boks) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionsport/competitionsport.aspx?subname=" + EnumsHelper.GetSportCode(Sport.kungfu) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetSportValue(Sport.kungfu) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='http://germes.mskobr.ru/' target='_blank' class='aCompetitions'>Первенство по каратэ WKF среди детей и молодежи</a>"));


                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionsport/competitionsport.aspx?subname=" + EnumsHelper.GetSportCode(Sport.shahmaty) + "' class='aCompetitions'>" +
                                            EnumsHelper.GetSportValue(Sport.shahmaty) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionsport/competitionsport.aspx?subname=" + EnumsHelper.GetSportCode(Sport.shashki) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetSportValue(Sport.shashki) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionsport/competitionsport.aspx?subname=" + EnumsHelper.GetSportCode(Sport.stendStrelba) + "' class='aCompetitions'>" +
                                            EnumsHelper.GetSportValue(Sport.stendStrelba) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionsport/competitionsport.aspx?subname=" + EnumsHelper.GetSportCode(Sport.football) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetSportValue(Sport.football) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionsport/competitionsport.aspx?subname=" + EnumsHelper.GetSportCode(Sport.basketball) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetSportValue(Sport.basketball) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionsport/competitionsport.aspx?subname=" + EnumsHelper.GetSportCode(Sport.volleyball) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetSportValue(Sport.volleyball) + "</a>"));


                //panelResult.Controls.Add(new LiteralControl("<a href='http://germes.mskobr.ru/social_no-znachimye_meropriyatiya/2017_-_2018_uch_god/' target='_blank' class='aCompetitions'>Открытый юношеский турнир в честь Всероссийского дня самбо</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='http://germes.mskobr.ru/social_no-znachimye_meropriyatiya/2017_-_2018_uch_god/' target='_blank' class='aCompetitions'>Кубок Александра Невского по самбо среди учащихся образовательных учреждений</a>"));

                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetSportValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetSportCode(Sport.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetSportValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetSportCode(Sport.self));

            #endregion

            //Для этого Конкурса панели голосования нет (весь остальной код метода - на перспективу)

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Toponim(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только по конкурсу «Черноморский флот Великой Отечественной войны в топонимике городов России» с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса toponim, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Toponim(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cName != EnumsHelper.GetToponimCode(Toponim.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetToponimValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if (cfg.IsReqGettingOn(cName))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontoponim/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить ответы на вопросы</a>"));
                }
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов для номенаций

            if (cName != EnumsHelper.GetToponimCode(Toponim.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetToponimValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(EnumsHelper.GetToponimCode(Toponim.self), EnumsHelper.GetToponimCode(Toponim.self), EnumsHelper.GetToponimValueFromCode(cName)));
            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetToponimCode(Toponim.self))
            {
                #region Код

                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitiontoponim/competitiontoponim.aspx?subname=" + EnumsHelper.GetToponimCode(Toponim.toponimika) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetToponimValue(Toponim.toponimika) + "</a>"));

                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetToponimValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetToponimCode(Toponim.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetToponimValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetToponimCode(Toponim.self));

            #endregion

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(cName))
            {
                return panelResult;
            }

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetToponimCode(Toponim.self), "1", EnumsHelper.GetToponimValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    if (req.Fios.Length == 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Автор:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Fio + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Возраст:</span>"));

                        DateTime dt = new DateTime(req.DateReg);
                        if (req.Age == "")
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Age + "</h4><br/>"));
                        }
                        else
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeFromBurth(Convert.ToDateTime(req.Age)) + "</h4><br/>"));
                        }

                        #endregion
                    }
                    else if (req.Fios.Length != 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участники(возраста):</span>"));
                        string[] fios = req.Fios.Split(new[] { '|' });
                        string[] agies = req.Agies.Split(new[] { '|' });
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>"));
                        DateTime dt = new DateTime(req.DateReg);
                        panelReqHeader.Controls.Add(new LiteralControl(CompetitionsWork.GetFiosAndAgesInOne(req.Fio + "|" + req.Fios, req.Age + "|" + req.Agies, " </br> ")));

                        panelReqHeader.Controls.Add(new LiteralControl("</h4><br/>"));

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                        #endregion
                    }

                    #endregion

                    #region Блок с работами

                    /*Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    foreach (string link in req.Links)
                    {
                        panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                        panelReqContent.Controls.Add(new LiteralControl("<a class='aFile_vc' href='" + _imgUrlPathToponim.Replace("~/", "../../../") + link + "'></a>"));
                        panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                    }

                    panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;'>" + req.WorkComment + "</div>"));*/

                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу моей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    if (cfg.IsVoitingBtnsOn(cName))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Robotech(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только для Конкурса по Робототехнике и моделированию 3D ручкой «Шаг в будущее» с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса robotech, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Robotech(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cName != EnumsHelper.GetRobotechCode(Robotech.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetRobotechValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if (cfg.IsReqGettingOn(EnumsHelper.GetRobotechValue(Robotech.self)))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionrobotech/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                }
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов 

            if (cName != EnumsHelper.GetRobotechCode(Robotech.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetRobotechValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(EnumsHelper.GetRobotechCode(Robotech.self), EnumsHelper.GetRobotechCode(Robotech.self), EnumsHelper.GetRobotechValueFromCode(cName)));

            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetRobotechCode(Robotech.self))
            {
                #region Код

                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionrobotech/competitionrobotech.aspx?subname=" + EnumsHelper.GetRobotechCode(Robotech.robototechnika) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetRobotechValue(Robotech.robototechnika) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionrobotech/competitionrobotech.aspx?subname=" + EnumsHelper.GetRobotechCode(Robotech.robototechnikaproject) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetRobotechValue(Robotech.robototechnikaproject) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionrobotech/competitionrobotech.aspx?subname=" + EnumsHelper.GetRobotechCode(Robotech.robototechnika3dmodel) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetRobotechValue(Robotech.robototechnika3dmodel) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionrobotech/competitionrobotech.aspx?subname=" + EnumsHelper.GetRobotechCode(Robotech.tinkercad) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetRobotechValue(Robotech.tinkercad) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionrobotech/competitionrobotech.aspx?subname=" + EnumsHelper.GetRobotechCode(Robotech.programmproject) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetRobotechValue(Robotech.programmproject) + "</a>"));

                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetRobotechValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetRobotechCode(Robotech.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetRobotechValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetRobotechCode(Robotech.self));

            #endregion

            /*//Для некоторых номинаций не нужно отображать панель голосования
            if (cName == EnumsHelper.GetRobotechCode(Robotech) ||
                cName == EnumsHelper.GetRobotechCode(Robotech) ||
                cName == EnumsHelper.GetRobotechCode(Robotech))
            {
                return panelResult;
            }*/

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(EnumsHelper.GetRobotechCode(Robotech.self)))
            {
                return panelResult;
            }
            //if (!cfg.IsVoitingPanelOn(cName))
            //{
            //    return panelResult;
            //}

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetRobotechCode(Robotech.self), "1", EnumsHelper.GetRobotechValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название команды:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.ClubsName + "</h4><br/>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                    #endregion

                    #region Блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    foreach (string link in req.Links)
                    {
                        if (link.StartsWith("http"))
                        {
                            ShowLinkInPanelResult(ref panelReqContent, link);
                        }
                        else
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<span class='youtubeWrap_vc'>" +
                                                                            "&nbsp;&nbsp;работа не загружена.." +
                                                                            "</span>"));
                            panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                        }

                        panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;'>" + req.WorkComment + "</div>"));
                    }

                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу нашей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    //условие для отключения кнопок голосования
                    if (cfg.IsVoitingBtnsOn(EnumsHelper.GetRobotechCode(Robotech.self)))
                    //if (cfg.IsVoitingBtnsOn(cName))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_VmesteSila(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только по фестивалю "Вместе мы сила" с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса robotech, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_VmesteSila(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cName != EnumsHelper.GetVmesteSilaCode(VmesteSila.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetVmesteSilaValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if (cfg.IsReqGettingOn(EnumsHelper.GetVmesteSilaValue(VmesteSila.self)))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionVmesteSila/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                }
                //else {
                //    panelResult.Controls.Add(new LiteralControl("<p class='abzac_c'>Прием заявок выключен!</p>"));
                //}
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов для номинаций Фестиваль конкурса "Вместе мы сильнее!"

            if (cName != EnumsHelper.GetVmesteSilaCode(VmesteSila.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetVmesteSilaValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(EnumsHelper.GetVmesteSilaCode(VmesteSila.self), EnumsHelper.GetVmesteSilaCode(VmesteSila.self), EnumsHelper.GetVmesteSilaValueFromCode(cName) + "%"));
            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetVmesteSilaCode(VmesteSila.self))
            {
                #region Код

                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionVmesteSila/competitionVmesteSila.aspx?subname=" + EnumsHelper.GetVmesteSilaCode(VmesteSila.hudSlovo) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetVmesteSilaValue(VmesteSila.hudSlovo) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionVmesteSila/competitionVmesteSila.aspx?subname=" + EnumsHelper.GetVmesteSilaCode(VmesteSila.horeographia) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetVmesteSilaValue(VmesteSila.horeographia) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionVmesteSila/competitionVmesteSila.aspx?subname=" + EnumsHelper.GetVmesteSilaCode(VmesteSila.vokal) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetVmesteSilaValue(VmesteSila.vokal) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionVmesteSila/competitionVmesteSila.aspx?subname=" + EnumsHelper.GetVmesteSilaCode(VmesteSila.instrumental) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetVmesteSilaValue(VmesteSila.instrumental) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionVmesteSila/competitionVmesteSila.aspx?subname=" + EnumsHelper.GetVmesteSilaCode(VmesteSila.theatre) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetVmesteSilaValue(VmesteSila.theatre) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionVmesteSila/competitionVmesteSila.aspx?subname=" + EnumsHelper.GetVmesteSilaCode(VmesteSila.masterMakeup) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetVmesteSilaValue(VmesteSila.masterMakeup) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionVmesteSila/competitionVmesteSila.aspx?subname=" + EnumsHelper.GetVmesteSilaCode(VmesteSila.masterShair) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetVmesteSilaValue(VmesteSila.masterShair) + "</a>"));
                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetVmesteSilaValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetVmesteSilaCode(VmesteSila.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetVmesteSilaValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetVmesteSilaCode(VmesteSila.self));

            #endregion

            /*//Для некоторых номинаций не нужно отображать панель голосования
            if (cName == EnumsHelper.GetRobotechCode(Robotech) ||
                cName == EnumsHelper.GetRobotechCode(Robotech) ||
                cName == EnumsHelper.GetRobotechCode(Robotech))
            {
                return panelResult;
            }*/

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)))
            {
                return panelResult;
            }

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetVmesteSilaCode(VmesteSila.self), "1", EnumsHelper.GetVmesteSilaValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion

            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название команды:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.ClubsName + "</h4><br/>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                    #endregion

                    #region Блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    foreach (string link in req.Links)
                    {
                        if (link.StartsWith("http"))
                        {
                            ShowLinkInPanelResult(ref panelReqContent, link);
                        }
                        else
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<span class='youtubeWrap_vc'>" +
                                                                            "&nbsp;&nbsp;работа не загружена.." +
                                                                            "</span>"));
                            panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                        }

                        panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;'>" + req.WorkComment + "</div>"));
                    }

                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу нашей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    //условие для отключения кнопок голосования
                    if (cfg.IsVoitingBtnsOn(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Clothes(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только по конкурсу "Индустрия моды" с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса robotech, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Clothes(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            string configName = "";
            if (cName != EnumsHelper.GetClothesCode(Clothes.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetClothesValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                 var subsections = new CompetitionsWork().GetCompetitionSubsectionByWrites(Writes.editorTheatreModa, false);

                //Контроль отображения кнопки приема заявок
                if (subsections.Value.Contains(EnumsHelper.GetClothesValueFromCode(cName)))
                {
                    configName = EnumsHelper.GetClothesCode(Clothes.tmavtorcollect);

                    if (cfg.IsReqGettingOn(EnumsHelper.GetClothesCode(Clothes.tmavtorcollect))) {
                        panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                    }
                    
                }
                else 
                {
                    configName = EnumsHelper.GetClothesCode(Clothes.self);

                    if (cfg.IsReqGettingOn(EnumsHelper.GetClothesValue(Clothes.self)))       //Контроль отображения кнопки приема заявок
                    {
                        panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/reg.aspx?subname=" + cName +
                                                                "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                    }
                }
                //else
                //{
                //    panelResult.Controls.Add(new LiteralControl("<p class='abzac_c'>Прием заявок выключен!</p>"));
                //}
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов для номинаций Фестиваль конкурса "Вместе мы сильнее!"

            if (cName != EnumsHelper.GetClothesCode(Clothes.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetClothesValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(configName, EnumsHelper.GetClothesCode(Clothes.self), EnumsHelper.GetClothesValueFromCode(cName)));

            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetClothesCode(Clothes.self))
            {
                #region Код

                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.chudoLoskutkiIgrushkiKukliTvorRisunok) + "' class='aCompetitions'>" +
                            EnumsHelper.GetClothesValue(Clothes.chudoLoskutkiIgrushkiKukliTvorRisunok) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.chudoLoskutkiIgrushkiKukli) + "' class='aCompetitions'>" +
                            EnumsHelper.GetClothesValue(Clothes.chudoLoskutkiIgrushkiKukli) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.uniyKuturieTkan) + "' class='aCompetitions'>" +
                            EnumsHelper.GetClothesValue(Clothes.uniyKuturieTkan) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.uniyKuturieNetradicMaterial) + "' class='aCompetitions'>" +
                            EnumsHelper.GetClothesValue(Clothes.uniyKuturieNetradicMaterial) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.uniyKuturieFashion) + "' class='aCompetitions'>" +
                            EnumsHelper.GetClothesValue(Clothes.uniyKuturieFashion) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.uniyKuturieTechRisunok) + "' class='aCompetitions'>" +
                            EnumsHelper.GetClothesValue(Clothes.uniyKuturieTechRisunok) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.uniyKuturieFoodArt) + "' class='aCompetitions'>" +
                            EnumsHelper.GetClothesValue(Clothes.uniyKuturieFoodArt) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.uniyKuturieOgorod) + "' class='aCompetitions'>" +
                            EnumsHelper.GetClothesValue(Clothes.uniyKuturieOgorod) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.uniyKuturieBeauty) + "' class='aCompetitions'>" +
                            EnumsHelper.GetClothesValue(Clothes.uniyKuturieBeauty) + "</a>"));

                //Театр моды
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.tmavtorcollect) + "' class='aCompetitions'>" +
                                            EnumsHelper.GetClothesValue(Clothes.tmavtorcollect) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.tmindividpokaz) + "' class='aCompetitions'>" +
                                            EnumsHelper.GetClothesValue(Clothes.tmindividpokaz) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.tmcollectpokaz) + "' class='aCompetitions'>" +
                                            EnumsHelper.GetClothesValue(Clothes.tmcollectpokaz) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.tmnetradicmaterial) + "' class='aCompetitions'>" +
                                            EnumsHelper.GetClothesValue(Clothes.tmnetradicmaterial) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionClothes/competitionClothes.aspx?subname=" + EnumsHelper.GetClothesCode(Clothes.tmissledovproject) + "' class='aCompetitions'>" +
                //                            EnumsHelper.GetClothesValue(Clothes.tmissledovproject) + "</a>"));

                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetClothesValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetClothesCode(Clothes.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetClothesValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetClothesCode(Clothes.self));

            #endregion

            ////Для некоторых номинаций не нужно отображать панель голосования
            //if (cName == EnumsHelper.GetClothesCode(Clothes.tmavtorcollect) ||
            //    cName == EnumsHelper.GetClothesCode(Clothes.tmcollectpokaz) ||
            //    cName == EnumsHelper.GetClothesCode(Clothes.tmindividpokaz) ||
            //    cName == EnumsHelper.GetClothesCode(Clothes.tmnetradicmaterial) ||
            //    cName == EnumsHelper.GetClothesCode(Clothes.tmissledovproject))
            //{
            //    return panelResult;
            //}

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(configName))
            {
                return panelResult;
            }

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetClothesCode(Clothes.self), "1", EnumsHelper.GetClothesValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            var IsVoitingBtnsOn = cfg.IsVoitingBtnsOn(EnumsHelper.GetClothesCode(Clothes.self));

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>№ заявки:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Id + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>Возрастная категория:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeCategory(req) + "</h4><br/>"));

                    if (req.Fios.Length == 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участник (возраст):</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Fio + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Возраст:</span>"));

                        //DateTime dt = new DateTime(req.DateReg);
                        if (req.Age == "")
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Age + "</h4><br/>"));
                        }
                        else
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeFromBurth(Convert.ToDateTime(req.Age)) + "</h4><br/>"));
                        }

                        #endregion
                    }
                    else if (req.Fios.Length != 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участники (возраста):</span>"));
                        string[] fios = req.Fios.Split(new[] { '|' });
                        string[] agies = req.Agies.Split(new[] { '|' });
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>"));
                        //DateTime dt = new DateTime(req.DateReg);
                        panelReqHeader.Controls.Add(new LiteralControl(CompetitionsWork.GetFiosAndAgesInOne(req.Fio + "|" + req.Fios, req.Age + "|" + req.Agies, " </br> ")));

                        panelReqHeader.Controls.Add(new LiteralControl("</h4><br/>"));

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                        #endregion
                    }

                    #endregion

                    #region Блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    //ImageForm imgForm = new ImageForm(_pag);
                    foreach (string link in req.Links)
                    {
                        try
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<img id='" + Guid.NewGuid().ToString().Replace("-", "") + "' data-src='" + _imgUrlPathClothes + link + "' src='../../../images/waiting.gif' class='imageStyle imageShadow lazyload' loading='lazy' style='width: 50px; cursor: pointer;' alt='фоторабота на тему " + req.CompetitionName + "' title='фоторабота на тему " + req.CompetitionName + "'>"));
                            //var imageF = imgForm.GetImage("785", "", "on", "on", _imgUrlPathClothes + link, "фоторабота на тему " + req.CompetitionName, "фоторабота на тему " + req.CompetitionName, Guid.NewGuid().ToString().Replace("-", ""));
                            //if (imageF != null) panelReqContent.Controls.Add(imageF);
                        }
                        catch (Exception ex)
                        {
                            DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, ex.Message);
                        }
                        if (link.Contains(".ppt") || link.Contains(".pptx"))
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<a class='aFilePowerPoint_vc' href='" + _imgUrlPathMultimedia.Replace("~/", "../../../") + link + "'></a>"));
                            panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;height:auto !important;'>" + req.WorkComment + "</div>"));
                        }

                        
                        //panelReqContent.Controls.Add(imgForm.GetImage("349", "", "on", "on", _imgUrlPathFoto + link, "фоторабота на тему " + req.CompetitionName, "фоторабота на тему " + req.CompetitionName, Guid.NewGuid().ToString().Replace("-", "")));
                    }

                    panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:95%;height:50px;overflow-y:auto;'>" + req.WorkComment + "</div>"));

                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу нашей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    //условие для отключения кнопок голосования
                    if (IsVoitingBtnsOn)    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Multimedia(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только для Конкурса по Робототехнике и моделированию 3D ручкой «Шаг в будущее» с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса Multimedia, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Multimedia(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cName != EnumsHelper.GetMultimediaCode(Multimedia.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetMultimediaValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if (cfg.IsReqGettingOn(EnumsHelper.GetMultimediaValue(Multimedia.self)))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionmultimedia/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                }
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов 

            if (cName != EnumsHelper.GetMultimediaCode(Multimedia.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetMultimediaValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(EnumsHelper.GetMultimediaCode(Multimedia.self), EnumsHelper.GetMultimediaCode(Multimedia.self), EnumsHelper.GetMultimediaValueFromCode(cName)));

            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetMultimediaCode(Multimedia.self))
            {
                #region Код

                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.uniygeroi) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.uniygeroi) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.uniyzashitnik) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.uniyzashitnik) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.characteristica) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.characteristica) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.prichinietapi) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.prichinietapi) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.rolvistorii) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.rolvistorii) + "</a>"));

                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.podandreevskimflagom) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.podandreevskimflagom) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.pomoryampovolnam) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.pomoryampovolnam) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.korablimorykimore) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.korablimorykimore) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.nadevaemmitelnyashku) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.nadevaemmitelnyashku) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.chernomorskomurossiiposvyashaetsa) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.chernomorskomurossiiposvyashaetsa) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.metodicheskierazrabotki) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.metodicheskierazrabotki) + "</a>"));

                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.morepobedkolibelsmelchakov) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.morepobedkolibelsmelchakov) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.netzapyatihtolkotochki) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.netzapyatihtolkotochki) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.vashipodvigineumrut) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.vashipodvigineumrut) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.sevastopol44) + "' class='aCompetitions'>" +
                //                                           EnumsHelper.GetMultimediaValue(Multimedia.sevastopol44) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.nadevaemmitelnyashku) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.nadevaemmitelnyashku) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.klyatvudaemsevastopolvernem) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.klyatvudaemsevastopolvernem) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.hranitalbomsemeinipamyat) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.hranitalbomsemeinipamyat) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.ihpamaytuzivushiipoklonis) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.ihpamaytuzivushiipoklonis) + "</a>"));
                //panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.multimediinieizdaniya) + "' class='aCompetitions'>" +
                //                                            EnumsHelper.GetMultimediaValue(Multimedia.multimediinieizdaniya) + "</a>"));


                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.yarisuupobedy) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetMultimediaValue(Multimedia.yarisuupobedy) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.spesneirpobede) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetMultimediaValue(Multimedia.spesneirpobede) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.geroyamotserdca) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetMultimediaValue(Multimedia.geroyamotserdca) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.plechomkplechu) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetMultimediaValue(Multimedia.plechomkplechu) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionMultimedia/competitionmultimedia.aspx?subname=" + EnumsHelper.GetMultimediaCode(Multimedia.pamyatsilneevremeni) + "' class='aCompetitions'>" +
                                                           EnumsHelper.GetMultimediaValue(Multimedia.pamyatsilneevremeni) + "</a>"));

                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetMultimediaValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetMultimediaCode(Multimedia.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetMultimediaValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetMultimediaCode(Multimedia.self));

            #endregion

            /*//Для некоторых номинаций не нужно отображать панель голосования
            if (cName == EnumsHelper.GetMultimediaCode(Multimedia) ||
                cName == EnumsHelper.GetMultimediaCode(Multimedia) ||
                cName == EnumsHelper.GetMultimediaCode(Multimedia))
            {
                return panelResult;
            }*/

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(EnumsHelper.GetMultimediaCode(Multimedia.self)))
            {
                return panelResult;
            }

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetMultimediaCode(Multimedia.self), "1", EnumsHelper.GetMultimediaValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    if (!string.IsNullOrEmpty(req.ClubsName))
                    {
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Название команды:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.ClubsName + "</h4><br/>"));
                    }
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));


                    if (req.Fios.Length == 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Автор:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Fio + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Возраст:</span>"));

                        DateTime dt = new DateTime(req.DateReg);
                        if (req.Age == "")
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Age + "</h4><br/>"));
                        }
                        else
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeFromBurth(Convert.ToDateTime(req.Age)) + "</h4><br/>"));
                        }

                        #endregion
                    }
                    else if (req.Fios.Length != 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участники(возраста):</span>"));
                        string[] fios = req.Fios.Split(new[] { '|' });
                        string[] agies = req.Agies.Split(new[] { '|' });
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>"));
                        DateTime dt = new DateTime(req.DateReg);
                        panelReqHeader.Controls.Add(new LiteralControl(CompetitionsWork.GetFiosAndAgesInOne(req.Fio + "|" + req.Fios, req.Age + "|" + req.Agies, " </br> ")));

                        panelReqHeader.Controls.Add(new LiteralControl("</h4><br/>"));

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                        #endregion
                    }

                    #endregion

                    #region Блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    foreach (string link in req.Links)
                    {
                        if (link.Contains(".ppt") || link.Contains(".pptx"))
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<a class='aFilePowerPoint_vc' href='" + _imgUrlPathMultimedia.Replace("~/", "../../../") + link + "'></a>"));
                            panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;height:auto !important;'>" + req.WorkComment + "</div>"));
                        }

                        
                    }

                    #endregion


                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу нашей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    //условие для отключения кнопок голосования
                    if (cfg.IsVoitingBtnsOn(EnumsHelper.GetMultimediaCode(Multimedia.self)))
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Korablik(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только по конкурсу "Кораблик детства (дошкольники)" с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса robotech, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Korablik(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            var configName = "";
            var isHudSlovo = new string[] { EnumsHelper.GetKorablikCode(Korablik.hudSlovo) }.Contains(cName);
            var isVokal = new string[] { EnumsHelper.GetKorablikCode(Korablik.vokal) }.Contains(cName);
            var isHoreo = new string[] { EnumsHelper.GetKorablikCode(Korablik.horeographia) }.Contains(cName);
            if (isHudSlovo)
                configName = EnumsHelper.GetKorablikValue(Korablik.self);
            else if (isHoreo || isVokal)
                configName = EnumsHelper.GetKorablikValue(Korablik.self) + cName;
            else
                configName = "";

            if (cName != EnumsHelper.GetKorablikCode(Korablik.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetKorablikValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if ((isHudSlovo || isVokal || isHoreo) && cfg.IsReqGettingOn(configName))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionKorablik/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                }
                //else
                //{
                //    panelResult.Controls.Add(new LiteralControl("<p class='abzac_c'>Прием заявок выключен!</p>"));
                //}
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов для номинаций конкурса "Кораблик детства!"

            if (cName != EnumsHelper.GetKorablikCode(Korablik.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetKorablikValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(configName, EnumsHelper.GetKorablikCode(Korablik.self), EnumsHelper.GetKorablikValueFromCode(cName)+"%"));
            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetKorablikCode(Korablik.self))
            {
                #region Код

                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkorablik/competitionkorablik.aspx?subname=" + EnumsHelper.GetKorablikCode(Korablik.hudSlovo) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetKorablikValue(Korablik.hudSlovo) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkorablik/competitionkorablik.aspx?subname=" + EnumsHelper.GetKorablikCode(Korablik.horeographia) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetKorablikValue(Korablik.horeographia) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionkorablik/competitionkorablik.aspx?subname=" + EnumsHelper.GetKorablikCode(Korablik.vokal) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetKorablikValue(Korablik.vokal) + "</a>"));
                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetKorablikValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetKorablikCode(Korablik.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetKorablikValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetKorablikCode(Korablik.self));

            #endregion

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(configName))
            {
                return panelResult;
            }

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetKorablikCode(Korablik.self), "1", EnumsHelper.GetKorablikValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion

            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название команды:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.ClubsName + "</h4><br/>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                    #endregion

                    #region Блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    foreach (string link in req.Links)
                    {
                        if (link.StartsWith("http"))
                        {
                            ShowLinkInPanelResult(ref panelReqContent, link);
                        }
                        else
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<span class='youtubeWrap_vc'>" +
                                                                            "&nbsp;&nbsp;работа не загружена.." +
                                                                            "</span>"));
                            panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                        }

                        panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;'>" + req.WorkComment + "</div>"));
                    }

                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу нашей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    //условие для отключения кнопок голосования
                    if (cfg.IsVoitingBtnsOn(EnumsHelper.GetKorablikCode(Korablik.self)))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Crimroute(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только по конкурсу "Крымские маршруты" с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса robotech, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Crimroute(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cName != EnumsHelper.GetCrimrouteCode(Crimroute.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetCrimrouteValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if (cfg.IsReqGettingOn(EnumsHelper.GetCrimrouteValue(Crimroute.self)))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionCrimroute/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                }
                //else
                //{
                //    panelResult.Controls.Add(new LiteralControl("<p class='abzac_c'>Прием заявок выключен!</p>"));
                //}
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов для номинаций Фестиваль конкурса "Вместе мы сильнее!"

            if (cName != EnumsHelper.GetCrimrouteCode(Crimroute.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetCrimrouteValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(EnumsHelper.GetCrimrouteCode(Crimroute.self), EnumsHelper.GetCrimrouteCode(Crimroute.self), EnumsHelper.GetCrimrouteValueFromCode(cName)));

            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetCrimrouteCode(Crimroute.self))
            {
                #region Код

                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionCrimroute/competitionCrimroute.aspx?subname=" + EnumsHelper.GetCrimrouteCode(Crimroute.historyplace) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetCrimrouteValue(Crimroute.historyplace) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionCrimroute/competitionCrimroute.aspx?subname=" + EnumsHelper.GetCrimrouteCode(Crimroute.militaryhistoryplace) + "' class='aCompetitions'>" +
                                            EnumsHelper.GetCrimrouteValue(Crimroute.militaryhistoryplace) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionCrimroute/competitionCrimroute.aspx?subname=" + EnumsHelper.GetCrimrouteCode(Crimroute.literaturehistoryplace) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetCrimrouteValue(Crimroute.literaturehistoryplace) + "</a>"));
                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetCrimrouteValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetCrimrouteCode(Crimroute.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetCrimrouteValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetCrimrouteCode(Crimroute.self));

            #endregion

            /*//Для некоторых номинаций не нужно отображать панель голосования
            if (cName == EnumsHelper.GetRobotechCode(Robotech) ||
                cName == EnumsHelper.GetRobotechCode(Robotech) ||
                cName == EnumsHelper.GetRobotechCode(Robotech))
            {
                return panelResult;
            }*/

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(EnumsHelper.GetCrimrouteCode(Crimroute.self)))
            {
                return panelResult;
            }

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetCrimrouteCode(Crimroute.self), "1", EnumsHelper.GetCrimrouteValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>№ заявки:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Id + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>Возрастная категория:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeCategory(req) + "</h4><br/>"));

                    if (req.Fios.Length == 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участник (возраст):</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Fio + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Возраст:</span>"));

                        DateTime dt = new DateTime(req.DateReg);
                        if (req.Age == "")
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Age + "</h4><br/>"));
                        }
                        else
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeFromBurth(Convert.ToDateTime(req.Age)) + "</h4><br/>"));
                        }

                        #endregion
                    }
                    else if (req.Fios.Length != 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участники (возраста):</span>"));
                        string[] fios = req.Fios.Split(new[] { '|' });
                        string[] agies = req.Agies.Split(new[] { '|' });
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>"));
                        DateTime dt = new DateTime(req.DateReg);
                        panelReqHeader.Controls.Add(new LiteralControl(CompetitionsWork.GetFiosAndAgesInOne(req.Fio + "|" + req.Fios, req.Age + "|" + req.Agies, " </br> ")));

                        panelReqHeader.Controls.Add(new LiteralControl("</h4><br/>"));

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                        #endregion
                    }

                    #endregion

                    #region Блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    //ImageForm imgForm = new ImageForm(_pag);
                    foreach (string link in req.Links)
                    {
                        try
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<img id='" + Guid.NewGuid().ToString().Replace("-", "") + "' data-src='" + _imgUrlPathCrimroute + link + "' src='../../../images/waiting.gif' class='imageStyle imageShadow lazyload' loading='lazy' style='width: 50px; cursor: pointer;' alt='фоторабота на тему " + req.CompetitionName + "' title='фоторабота на тему " + req.CompetitionName + "'>"));
                            //var imageF = imgForm.GetImage("785", "", "on", "on", _imgUrlPathCrimroute + link, "фоторабота на тему " + req.CompetitionName, "фоторабота на тему " + req.CompetitionName, Guid.NewGuid().ToString().Replace("-", ""));
                            //if (imageF != null) panelReqContent.Controls.Add(imageF);
                        }
                        catch (Exception ex)
                        {
                            DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, ex.Message);
                        }
                        //panelReqContent.Controls.Add(imgForm.GetImage("349", "", "on", "on", _imgUrlPathFoto + link, "фоторабота на тему " + req.CompetitionName, "фоторабота на тему " + req.CompetitionName, Guid.NewGuid().ToString().Replace("-", "")));
                    }

                    panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:95%;height:50px;overflow-y:auto;'>" + req.WorkComment + "</div>"));

                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу нашей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    //условие для отключения кнопок голосования
                    if (cfg.IsVoitingBtnsOn(EnumsHelper.GetCrimrouteCode(Crimroute.self)))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_MathBattle(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только для Конкурса «Математический батл» с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса MathBattle, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_MathBattle(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cName != EnumsHelper.GetMathbattleCode(Mathbattle.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetMathbattleValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if (cfg.IsReqGettingOn(EnumsHelper.GetMathbattleValue(Mathbattle.self)))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionmathbattle/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                }
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов 

            if (cName != EnumsHelper.GetMathbattleCode(Mathbattle.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetMathbattleValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(EnumsHelper.GetMathbattleCode(Mathbattle.self), EnumsHelper.GetMathbattleCode(Mathbattle.self), EnumsHelper.GetMathbattleValueFromCode(cName)));

            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetMathbattleCode(Mathbattle.self))
            {
                #region Код

                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionmathbattle/competitionmathbattle.aspx?subname=" + EnumsHelper.GetMathbattleCode(Mathbattle.battle) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetMathbattleValue(Mathbattle.battle) + "</a>"));
                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetMathbattleValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetMathbattleCode(Mathbattle.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetMathbattleValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetMathbattleCode(Mathbattle.self));

            #endregion

            /*//Для некоторых номинаций не нужно отображать панель голосования
            if (cName == EnumsHelper.GetMathBattleCode(MathBattle) ||
                cName == EnumsHelper.GetMathBattleCode(MathBattle) ||
                cName == EnumsHelper.GetMathBattleCode(MathBattle))
            {
                return panelResult;
            }*/

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(EnumsHelper.GetMathbattleCode(Mathbattle.self)))
            {
                return panelResult;
            }
            //if (!cfg.IsVoitingPanelOn(cName))
            //{
            //    return panelResult;
            //}

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetMathbattleCode(Mathbattle.self), "1", EnumsHelper.GetMathbattleValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название команды:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.ClubsName + "</h4><br/>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                    #endregion

                    #region Блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    foreach (string link in req.Links)
                    {
                        if (link.StartsWith("http"))
                        {
                            ShowLinkInPanelResult(ref panelReqContent, link);
                        }
                        else
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<span class='youtubeWrap_vc'>" +
                                                                            "&nbsp;&nbsp;работа не загружена.." +
                                                                            "</span>"));
                            panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                        }

                        panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;'>" + req.WorkComment + "</div>"));
                    }

                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу нашей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    //условие для отключения кнопок голосования
                    if (cfg.IsVoitingBtnsOn(EnumsHelper.GetMathbattleCode(Mathbattle.self)))
                    //if (cfg.IsVoitingBtnsOn(cName))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Kosmos(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только для Квест-игры «Покоряя космос» с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса Kosmos, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Kosmos(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cName != EnumsHelper.GetKosmosCode(Kosmos.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetKosmosValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if (cfg.IsReqGettingOn(EnumsHelper.GetKosmosValue(Kosmos.self)))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionKosmos/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                }
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов 

            if (cName != EnumsHelper.GetKosmosCode(Kosmos.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetKosmosValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(EnumsHelper.GetKosmosCode(Kosmos.self), EnumsHelper.GetKosmosCode(Kosmos.self), EnumsHelper.GetKosmosValueFromCode(cName)));

            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetKosmosCode(Kosmos.self))
            {
                #region Код

                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionKosmos/competitionKosmos.aspx?subname=" + EnumsHelper.GetKosmosCode(Kosmos.kosmos) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetKosmosValue(Kosmos.kosmos) + "</a>"));
                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetKosmosValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetKosmosCode(Kosmos.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetKosmosValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetKosmosCode(Kosmos.self));

            #endregion

            /*//Для некоторых номинаций не нужно отображать панель голосования
            if (cName == EnumsHelper.GetKosmosCode(Kosmos) ||
                cName == EnumsHelper.GetKosmosCode(Kosmos) ||
                cName == EnumsHelper.GetKosmosCode(Kosmos))
            {
                return panelResult;
            }*/

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(EnumsHelper.GetKosmosCode(Kosmos.self)))
            {
                return panelResult;
            }
            //if (!cfg.IsVoitingPanelOn(cName))
            //{
            //    return panelResult;
            //}

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetKosmosCode(Kosmos.self), "1", EnumsHelper.GetKosmosValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Название команды:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.ClubsName + "</h4><br/>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                    #endregion

                    #region Блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    foreach (string link in req.Links)
                    {
                        if (link.StartsWith("http"))
                        {
                            ShowLinkInPanelResult(ref panelReqContent, link);
                        }
                        else
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<span class='youtubeWrap_vc'>" +
                                                                            "&nbsp;&nbsp;работа не загружена.." +
                                                                            "</span>"));
                            panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                        }

                        panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;'>" + req.WorkComment + "</div>"));
                    }

                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу нашей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    //условие для отключения кнопок голосования
                    if (cfg.IsVoitingBtnsOn(EnumsHelper.GetKosmosCode(Kosmos.self)))
                    //if (cfg.IsVoitingBtnsOn(cName))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion
        #region Методы VotingPanel_Science(string cName)

        /// <summary>Метод возвращает html-код панели с конкурсными работами только по Конкурсу научных работ "В моей лаборатории вот что... " с возможностью голосования.
        /// Стили к методу находятся в файле competitionspages.css</summary>
        /// <param name="cName">может принимать код конкурса kultura, или коды номинаций</param>
        /// <returns></returns>
        public Panel VotingPanel_Science(string cName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_vc";

            #region Основной код

            ConfigFile cfg = new ConfigFile();

            #region Добавление кнопки перехода на страницу регистрации заявки

            if (cName != EnumsHelper.GetScienceCode(Science.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetScienceValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                if (cfg.IsReqGettingOn(EnumsHelper.GetScienceValue(Science.self)))       //Контроль отображения кнопки приема заявок
                {
                    panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionscience/reg.aspx?subname=" + cName +
                                                            "' class='aCompetitionReg'>Отправить заявку на участие</a>"));
                }
            }

            #endregion
            #region Добавление таблицы результатов с кнопками скачивания сертификатов и дипломов для номенаций

            if (cName != EnumsHelper.GetScienceCode(Science.self))
            {
                //Подстраховка на случай, если в запросе передано неправильное значение (чтобы по "левому" запросу был просто редирект на главную страницу)
                if (EnumsHelper.GetScienceValueFromCode(cName) == "")
                {
                    _pag.Response.Redirect("~/");
                }

                CompetitionsForm form = new CompetitionsForm(_pag);
                panelResult.Controls.Add(form.ResultsListPanel_Common(EnumsHelper.GetScienceCode(Science.self), EnumsHelper.GetScienceCode(Science.self), EnumsHelper.GetScienceValueFromCode(cName)));
            }

            #endregion
            #region Добавление кнопок перехода к просмотру Номинаций

            if (cName == EnumsHelper.GetScienceCode(Science.self))
            {
                #region Код

                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionscience/competitionscience.aspx?subname=" + EnumsHelper.GetScienceCode(Science.ekologia_ochno) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetScienceValue(Science.ekologia_ochno) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionscience/competitionscience.aspx?subname=" + EnumsHelper.GetScienceCode(Science.ekologia_zaochno) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetScienceValue(Science.ekologia_zaochno) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionscience/competitionscience.aspx?subname=" + EnumsHelper.GetScienceCode(Science.himiya_ochno) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetScienceValue(Science.himiya_ochno) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionscience/competitionscience.aspx?subname=" + EnumsHelper.GetScienceCode(Science.himiya_zaochno) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetScienceValue(Science.himiya_zaochno) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionscience/competitionscience.aspx?subname=" + EnumsHelper.GetScienceCode(Science.fizika_ochno) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetScienceValue(Science.fizika_ochno) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionscience/competitionscience.aspx?subname=" + EnumsHelper.GetScienceCode(Science.fizika_zaochno) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetScienceValue(Science.fizika_zaochno) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionscience/competitionscience.aspx?subname=" + EnumsHelper.GetScienceCode(Science.biologiya_ochno) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetScienceValue(Science.biologiya_ochno) + "</a>"));
                panelResult.Controls.Add(new LiteralControl("<a href='/sections/project/competitionscience/competitionscience.aspx?subname=" + EnumsHelper.GetScienceCode(Science.biologiya_zaochno) + "' class='aCompetitions'>" +
                                                            EnumsHelper.GetScienceValue(Science.biologiya_zaochno) + "</a>"));

                return panelResult;

                #endregion
            }

            #endregion
            #region Добавление title и description для страниц номинаций

            _pag.Title = "Номинация \"" + EnumsHelper.GetScienceValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetScienceCode(Science.self));
            _pag.MetaDescription = CompetitonWorkCommon.projectName() + ". Номинация \"" + EnumsHelper.GetScienceValueFromCode(cName) + "\". " + EnumsHelper.GetCompetitionValueFromCode(EnumsHelper.GetScienceCode(Science.self));

            #endregion

            #region Проверка на включенность или выключенность панели голосования

            if (!cfg.IsVoitingPanelOn(EnumsHelper.GetScienceValue(Science.self)))
            {
                return panelResult;
            }

            #endregion

            #region Получим список структур запросов

            CompetitionsWork work = new CompetitionsWork();
            List<CompetitionRequest> reqList = new List<CompetitionRequest>();
            reqList = work.GetListOfRequests(EnumsHelper.GetScienceCode(Science.self), "1", EnumsHelper.GetScienceValueFromCode(cName)).OrderBy(a => a.DateReg * -1).ToList();

            #endregion

            #region Главная разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_vc'></div>"));

            #endregion
            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Конкурсные работы</h2>"));

            #endregion

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_vc'>В настоящее время нет утверждённых на голосование работ..</span>"));
                return panelResult;
            }

            #region Добавление панелей с работами и голосования по ним

            int pageCounter = 1;
            int prodCounter = 0;
            int countOfElemInOnePage = 16;

            PagePanelClass pageBtns = new PagePanelClass(reqList.Count, countOfElemInOnePage);
            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("0"));
            int pageNum = (int)_pag.Session["pagenum"];

            foreach (CompetitionRequest req in reqList)
            {
                prodCounter++;
                if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                {
                    prodCounter = 1;
                    pageCounter++;
                }

                if (pageCounter == pageNum)           //если эта та самая страница, которую нужно вывести, то выводим её
                {
                    #region Код добавления панели с одной работой

                    Panel panelReqWrap = new Panel(); panelReqWrap.CssClass = "panelReqWrap_vc"; panelResult.Controls.Add(panelReqWrap);

                    #region Блок с заголовком

                    Panel panelReqHeader = new Panel();
                    panelReqHeader.CssClass = "panelReqHeader_vc";
                    panelReqWrap.Controls.Add(panelReqHeader);
                    panelReqHeader.Controls.Add(new LiteralControl("<span>Номинация:</span>"));
                    panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.SubsectionName + "</h4><br/>"));

                    if (req.Fios.Length == 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Название работы:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.WorkName + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Автор:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Fio + "</h4><br/>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<span>Возраст:</span>"));

                        DateTime dt = new DateTime(req.DateReg);
                        if (req.Age == "")
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.Age + "</h4><br/>"));
                        }
                        else
                        {
                            panelReqHeader.Controls.Add(new LiteralControl("<h4>" + CompetitionsWork.GetAgeFromBurth(Convert.ToDateTime(req.Age)) + "</h4><br/>"));
                        }

                        #endregion
                    }
                    else if (req.Fios.Length != 0)
                    {
                        #region Код

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Участники(возраста):</span>"));
                        string[] fios = req.Fios.Split(new[] { '|' });
                        string[] agies = req.Agies.Split(new[] { '|' });
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>"));
                        DateTime dt = new DateTime(req.DateReg);
                        panelReqHeader.Controls.Add(new LiteralControl(CompetitionsWork.GetFiosAndAgesInOne(req.Fio + "|" + req.Fios, req.Age + "|" + req.Agies, " </br> ")));

                        panelReqHeader.Controls.Add(new LiteralControl("</h4><br/>"));

                        panelReqHeader.Controls.Add(new LiteralControl("<span>Город:</span>"));
                        panelReqHeader.Controls.Add(new LiteralControl("<h4>" + req.City + "</h4>"));

                        #endregion
                    }

                    #endregion

                    #region Блок с работами

                    Panel panelReqContent = new Panel(); panelReqContent.CssClass = "panelReqContent_vc"; panelReqWrap.Controls.Add(panelReqContent);

                    foreach (string link in req.Links)
                    {
                        if (link.StartsWith("http"))
                        {
                            ShowLinkInPanelResult(ref panelReqContent, link);
                        }
                        else
                        {
                            panelReqContent.Controls.Add(new LiteralControl("<noindex>"));
                            panelReqContent.Controls.Add(new LiteralControl("<span class='youtubeWrap_vc'>" +
                                                                            "&nbsp;&nbsp;работа не загружена.." +
                                                                            "</span>"));
                            panelReqContent.Controls.Add(new LiteralControl("</noindex>"));
                        }

                        panelReqContent.Controls.Add(new LiteralControl("<div class='workComments_vc' style='width:370px;'>" + req.WorkComment + "</div>"));
                    }
                    #endregion

                    #region Блок с кнопками для голосования

                    Panel panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; panelReqWrap.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Вырази своё мнение по поводу моей работы:</span>"));

                    Label lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.Likes.ToString();
                    lbl.ID = "lblNumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    if (cfg.IsVoitingBtnsOn(cName))    //если отображение кнопок голосования включено, то добавляем такую кнопку
                    {
                        // JavaScript для голосования находится в файле voting.js
                        LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnZa_vc";
                        lBtn.Attributes.Add("onclick", "return voting('#lblNumZa_" + req.Id + "', '" + req.Id + "', '+');");
                        panelReqFooter.Controls.Add(lBtn);
                    }

                    /*lbl = new Label(); lbl.CssClass = "lblNumNo_vc"; lbl.Text = req.Nolikes.ToString();
                    lbl.ID = "lblNumNo_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnNo_vc";
                    lBtn.Attributes.Add("onclick", "return voting('#lblNumNo_" + req.Id + "', '" + req.Id + "', '-');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnNo_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    //Панель с итоговым голосованием
                    /*panelReqFooter = new Panel(); panelReqFooter.CssClass = "panelReqFooter_vc"; updatePanel.ContentTemplateContainer.Controls.Add(panelReqFooter);
                    panelReqFooter.Controls.Add(new LiteralControl("<span class='golosuy_vc'>Итоговое голосование:</span>"));

                    lbl = new Label(); lbl.CssClass = "lblNumZa_vc"; lbl.Text = req.SummaryLikes.ToString();
                    lbl.ID = "lblNumSumZa_" + req.Id; panelReqFooter.Controls.Add(lbl);

                    // JavaScript для голосования находится в файле voting.js
                    lBtn = new LinkButton(); lBtn.CssClass = "lBtnSumZa_vc";
                    lBtn.Text = "+"; lBtn.ToolTip = "Проголосовать";
                    lBtn.Attributes.Add("onclick", "return votingSum('#lblNumSumZa_" + req.Id + "', '" + req.Id + "');");
                    lBtn.CommandArgument = req.Id.ToString(); lBtn.Command += LBtnSumZa_Command;
                    panelReqFooter.Controls.Add(lBtn);*/

                    #endregion

                    #endregion
                }
                else if (pageCounter > pageNum)
                {
                    break;
                }
            }

            panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

            #endregion

            #endregion

            return panelResult;
        }

        #endregion

        #region Метод ResultsListPanel_Common Единая таблица отображения результирующих таблиц

        /// <summary>Метод формирует и возвращает панель с таблицой участников для всех конкурсов. Таблица содержит ФИО(или названия Коллективов) участников и кнопки скачивания сертификатов и дипломов.
        /// Стили к методу находятся в файле competitionsresults.css</summary>
        /// <param name="subsectionName">наименование номинации конкурса</param>
        /// <returns></returns>
        public Panel ResultsListPanel_Common(string configName, string compCode, string subsectionName)
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_cr";

            #region Проверка на включённость или выключенность отображения таблицы результатов

            ConfigFile cfg = new ConfigFile();

            var certificateSecondRound = false;
            if (cfg.IsResultPanelOn(configName))
            {
                certificateSecondRound = true;
            }

            var certificateFirstRound = false;
            if (cfg.IsResultPanelFirstRoundOn(configName))
            {
                certificateFirstRound = true;
            }

            if (!certificateSecondRound && !certificateFirstRound)
                return panelResult;

            #endregion

            #region Разделительная Черта

            panelResult.Controls.Add(new LiteralControl("<div class='divLine_cr'></div>"));

            #endregion

            #region Главный Заголовок

            panelResult.Controls.Add(new LiteralControl("<h2>Список участников</h2>"));

            #endregion

            #region Получим список структур запросов

            var reqList = new CompetitionsWork().GetListOfRequests(compCode, "1", subsectionName);

            if (reqList.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<div id='spanNull_cr'>В настоящее время нет утверждённых участников...</div>"));
                return panelResult;
            }

            #region Поиск

            string srchString = _pag.Session["srchStrCompet"] != null ? _pag.Session["srchStrCompet"].ToString().Trim() : "";
            panelResult.Controls.Add(FindTextBox(srchString));

            #endregion

            //фильтруем по строке поиска
            if (!string.IsNullOrEmpty(srchString))
            {
                reqList = reqList.Where(x => 
                                x.Id.ToString().Contains(srchString) || 
                                (certificateSecondRound && x.Fio.ToLower().Contains(srchString.ToLower())) || 
                                (certificateSecondRound && x.Fios.ToLower().Contains(srchString.ToLower())) || 
                                (certificateFirstRound && x.Fios_1.ToLower().Contains(srchString.ToLower())) ||
                                (!string.IsNullOrEmpty(x.ClubsName) && x.ClubsName.ToLower().Contains(srchString.ToLower()))
                            ).ToList();

                if (reqList.Count == 0)
                {
                    panelResult.Controls.Add(new LiteralControl("<div id='spanNull_cr'>По данному критерию ничего не найдено...</div>"));
                    return panelResult;
                }
            }

            #endregion

            #region Получение списка структур ResultHelper для заполнения таблицы участников

            List<ResultHelper> resultList = new List<ResultHelper>();
            List<ResultHelper> resultList_1 = new List<ResultHelper>();
            List<string> fiosList;
            List<string> fiosList_1;
            string[] fiosSplit;
            string[] fiosSplit_1;

            PagePanelClass pageBtns;
            LinkButton lBtn;

            bool isSearchInteger = int.TryParse(srchString, out int testReqId);

            foreach (CompetitionRequest req in reqList)
            {
                #region Код формирования списка результатов по ФИО участников

                fiosList = new List<string>();
                fiosList_1 = new List<string>();
                if (req.Fio != "" && req.Fio.ToUpper() != "НЕТ")
                {
                    fiosList.Add(req.Fio);
                }
                if (!string.IsNullOrEmpty(req.Fios))
                {
                    fiosSplit = req.Fios.Split(new[] { '|' });
                    foreach (string fio in fiosSplit)
                    {
                        if (!fiosList.Exists(x => x == fio))
                            fiosList.Add(fio);
                    }
                }

                if (certificateFirstRound)
                {
                    if (!string.IsNullOrEmpty(req.Fios_1))
                    {
                        fiosSplit_1 = req.Fios_1.Split(new[] { '|' });
                        foreach (string fio in fiosSplit_1)
                        {
                            if (!fiosList_1.Exists(x => x == fio))
                                fiosList_1.Add(fio);
                        }
                    }
                }

                if (certificateSecondRound)
                {
                    var result = CompetitionsWork.GetResultDocumentForParticipant(req, true);
                    foreach (string fio in fiosList.Where(x => isSearchInteger || (!isSearchInteger && x.ToLower().Contains(srchString.ToLower())) || (!isSearchInteger && !string.IsNullOrEmpty(req.ClubsName) && req.ClubsName.ToLower().Contains(srchString.ToLower()))).ToList())
                    {
                        resultList.Add(new ResultHelper() { Fio = fio, ReqId = req.Id.ToString(), Diplom = (!string.IsNullOrEmpty(result) /*&& result != "Участник"*/ ? true : false), CountParticipants = fiosList.Count });
                    }
                }

                if (certificateFirstRound)
                {
                    foreach (string fio in fiosList_1.Where(x => isSearchInteger || (!isSearchInteger && x.ToLower().Contains(srchString.ToLower())) || (!isSearchInteger && !string.IsNullOrEmpty(req.ClubsName) && req.ClubsName.ToLower().Contains(srchString.ToLower()))).ToList())
                    {
                        resultList_1.Add(new ResultHelper() { Fio = fio, ReqId = req.Id.ToString(), Certificate = false, CountParticipants = fiosList_1.Count });
                    }
                }

                #endregion
            }

            if (certificateSecondRound)
            {
                //Убираем структуры с повторяющимися ФИО из списка и сортируем список по фамилимиям
                //resultList = resultList.GroupBy(a => a.Fio)
                //    .Select(a => new ResultHelper() { 
                //        ReqId = a.Max(x => x.ReqId), 
                //        Fio = a.Key, 
                //        Diplom = a.Max(x => x.Diplom), 
                //        Certificate = a.Max(x => x.Certificate), 
                //        CountParticipants = a.Max(x => x.CountParticipants) })
                //    .OrderBy(a => a.Fio).ToList();
                //Сортируем список по Фамилиям (названиям Клубов, Коллективов)
                resultList = resultList.OrderBy(a => a.Fio).ToList();
            }

            if (certificateFirstRound)
            {
                //Убираем структуры с повторяющимися ФИО из списка и сортируем список по фамилимиям
                //resultList_1 = resultList_1.GroupBy(a => a.Fio).Select(a => a.First()).OrderBy(a => a.Fio).ToList();
                //Сортируем список по Фамилиям (названиям Клубов, Коллективов)
                resultList_1 = resultList_1.OrderBy(a => a.Fio).ToList();
            }
            #endregion

            if (certificateSecondRound)
            {
                if (resultList.Count == 0)
                {
                    panelResult.Controls.Add(new LiteralControl("<div id='spanNull_cr'>Участников 2-го тура не найдено...</div>"));
                }
                else
                {
                    int pagenum = 0;
                    int numerator = 1;
                    int pageCounter = 1;
                    int prodCounter = 0;
                    int countOfElemInOnePage = 30;

                    #region Добавление таблицы участников 2-го тура

                    pageBtns = new PagePanelClass(resultList.Count, countOfElemInOnePage, "Res2Round" + compCode);
                    panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("4"));
                    pagenum = (int)_pag.Session["pagenumRes2Round" + compCode];

                    #region Шапка таблицы

                    panelResult.Controls.Add(new LiteralControl("<table class='tblResults_cr'>"));
                    panelResult.Controls.Add(new LiteralControl("<tr>"));
                    panelResult.Controls.Add(new LiteralControl("<td colspan='6' style='background-color:#ffe48d;' class='td_header_cr td_header_npp_cr'>Участники 2-го тура</td>"));
                    panelResult.Controls.Add(new LiteralControl("</tr>"));
                    panelResult.Controls.Add(new LiteralControl("<tr>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='td_header_cr td_header_npp_cr'>№ п/п</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='td_header_cr td_header_fio' style='width: 80px;'>№ заявки</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='td_header_cr td_header_fio'>ФИО</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='td_header_cr td_header_cert_cr'>Сертификат</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='td_header_cr td_header_dipl_cr'>Диплом</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='td_header_cr td_header_dipl_cr'>Благодарность</td>"));
                    panelResult.Controls.Add(new LiteralControl("</tr>"));

                    #endregion

                    numerator = 1;
                    lBtn = new LinkButton();

                    foreach (ResultHelper result in resultList)
                    {
                        prodCounter++;
                        if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                        {
                            prodCounter = 1;
                            pageCounter++;
                        }

                        if (pageCounter == pagenum)           //если эта та самая страница, которую нужно вывести, то выводим её
                        {
                            #region Код добавления строк таблицы

                            panelResult.Controls.Add(new LiteralControl("<tr>"));

                            panelResult.Controls.Add(new LiteralControl("<td class='td_content_cr'>" + numerator + "</td>"));
                            panelResult.Controls.Add(new LiteralControl("<td class='td_content_cr'>" + result.ReqId.ToString() + "</ td > "));
                            panelResult.Controls.Add(new LiteralControl("<td class='td_content_cr' style='text-align:left;'>" + result.Fio + "</td>"));

                            panelResult.Controls.Add(new LiteralControl("<td class='td_content_cr'>"));
                            lBtn = new LinkButton(); lBtn.CssClass = "btnSpec_cr"; lBtn.Text = "Скачать";
                            lBtn.CommandArgument = result.ReqId + "|" + DocumentType.Certificate + "|" + result.Fio + "|" + false + "|" + 2;
                            lBtn.Command += LBtnGetDocument_Common;
                            lBtn.OnClientClick = "return pageReady()";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку
                            panelResult.Controls.Add(lBtn);
                            panelResult.Controls.Add(new LiteralControl("</td>"));

                            panelResult.Controls.Add(new LiteralControl("<td class='td_content_cr'>"));
                            if (result.Diplom)
                            {
                                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec_cr"; lBtn.Text = "Скачать";
                                lBtn.CommandArgument = result.ReqId + "|" + DocumentType.Diplom + "|" + (result.CountParticipants > 1 ? "" : result.Fio) + "|" + (result.CountParticipants > 1 ? true : false) + "|" + 2;
                                lBtn.Command += LBtnGetDocument_Common;
                                lBtn.OnClientClick = "return pageReady()";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку
                                panelResult.Controls.Add(lBtn);
                            }
                            panelResult.Controls.Add(new LiteralControl("</td>"));

                            panelResult.Controls.Add(new LiteralControl("<td class='td_content_cr'>"));
                            lBtn = new LinkButton(); lBtn.CssClass = "btnSpec_cr"; lBtn.Text = "Скачать";
                            lBtn.CommandArgument = result.ReqId + "|" + DocumentType.Blagodarnost + "||" + false + "|" + 2;
                            lBtn.Command += LBtnGetDocument_Common;
                            lBtn.OnClientClick = "return pageReady()";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку
                            panelResult.Controls.Add(lBtn);
                            panelResult.Controls.Add(new LiteralControl("</td>"));

                            panelResult.Controls.Add(new LiteralControl("</tr>"));

                            #endregion
                        }
                        else if (pageCounter > pagenum)
                        {
                            break;
                        }

                        numerator++;
                    }

                    #region Конец таблицы

                    panelResult.Controls.Add(new LiteralControl("</table>"));

                    #endregion

                    panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("5"));

                    #endregion
                }
            }

            if (certificateFirstRound)
            {
                if (resultList_1.Count == 0)
                {
                    panelResult.Controls.Add(new LiteralControl("<div id='spanNull_cr'>Участников 1-го тура не найдено...</div>"));
                }
                else
                {
                    int pagenum = 0;
                    int numerator = 1;
                    int pageCounter = 1;
                    int prodCounter = 0;
                    int countOfElemInOnePage = 30;

                    #region Добавление таблицы участников 1-го тура

                    pageBtns = new PagePanelClass(resultList_1.Count, countOfElemInOnePage, "Res1Round" + compCode);
                    panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("6"));
                    pagenum = (int)_pag.Session["pagenumRes1Round" + compCode];

                    #region Шапка таблицы

                    panelResult.Controls.Add(new LiteralControl("<table class='tblResults_cr'>"));
                    panelResult.Controls.Add(new LiteralControl("<tr>"));
                    panelResult.Controls.Add(new LiteralControl("<td colspan='5' style='background-color:#ffe48d;' class='td_header_cr td_header_npp_cr'>Участники 1-го тура</td>"));
                    panelResult.Controls.Add(new LiteralControl("</tr>"));
                    panelResult.Controls.Add(new LiteralControl("<tr>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='td_header_cr td_header_npp_cr'>№ п/п</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='td_header_cr td_header_fio' style='width: 80px;'>№ заявки</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='td_header_cr td_header_fio'>ФИО</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='td_header_cr td_header_cert_cr'>Сертификат</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='td_header_cr td_header_cert_cr'>Благодарность</td>"));
                    panelResult.Controls.Add(new LiteralControl("</tr>"));

                    #endregion

                    numerator = 1;
                    lBtn = new LinkButton();

                    foreach (ResultHelper result in resultList_1)
                    {
                        prodCounter++;
                        if (prodCounter > countOfElemInOnePage)   //выводим на страницу не более нужного кол-ва событий
                        {
                            prodCounter = 1;
                            pageCounter++;
                        }

                        if (pageCounter == pagenum)           //если эта та самая страница, которую нужно вывести, то выводим её
                        {
                            #region Код добавления строк таблицы

                            panelResult.Controls.Add(new LiteralControl("<tr>"));

                            panelResult.Controls.Add(new LiteralControl("<td class='td_content_cr'>" + numerator + "</td>"));

                            panelResult.Controls.Add(new LiteralControl("<td class='td_content_cr'>" + result.ReqId.ToString() + "</ td > "));
                            panelResult.Controls.Add(new LiteralControl("<td class='td_content_cr' style='text-align:left;'>" + result.Fio + "</td>"));

                            panelResult.Controls.Add(new LiteralControl("<td class='td_content_cr'>"));
                            lBtn = new LinkButton(); lBtn.CssClass = "btnSpec_cr"; lBtn.Text = "Скачать";
                            lBtn.CommandArgument = result.ReqId + "|" + DocumentType.Certificate + "|" + result.Fio + "|" + false + "|" + 1;
                            lBtn.Command += LBtnGetDocument_Common;
                            lBtn.OnClientClick = "return pageReady()";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку
                            panelResult.Controls.Add(lBtn);
                            panelResult.Controls.Add(new LiteralControl("</td>"));

                            panelResult.Controls.Add(new LiteralControl("<td class='td_content_cr'>"));
                            lBtn = new LinkButton(); lBtn.CssClass = "btnSpec_cr"; lBtn.Text = "Скачать";
                            lBtn.CommandArgument = result.ReqId + "|" + DocumentType.Blagodarnost + "||" + false + "|" + 1;
                            lBtn.Command += LBtnGetDocument_Common;
                            lBtn.OnClientClick = "return pageReady()";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку
                            panelResult.Controls.Add(lBtn);
                            panelResult.Controls.Add(new LiteralControl("</td>"));

                            panelResult.Controls.Add(new LiteralControl("</tr>"));

                            #endregion
                        }
                        else if (pageCounter > pagenum)
                        {
                            break;
                        }

                        numerator++;
                    }

                    #region Конец таблицы

                    panelResult.Controls.Add(new LiteralControl("</table>"));

                    #endregion

                    panelResult.Controls.Add(pageBtns.GetPageBtnsTbl("7"));

                    #endregion
                }
            }

            return panelResult;
        }


        #region Строка поиска

        private Panel FindTextBox(string srchString)
        {
            var panelResult = new Panel();


            var lBtn1 = new LinkButton(); lBtn1.CssClass = "btnSpec_cr";
            lBtn1.Text = " Найти "; lBtn1.ToolTip = "Кнопка поиска по заявкам. Поиск осуществляется по всем полям заявки, содержащим текстовые данные.";
            lBtn1.Command += (lBtnSiteEventSrch_Command_admin); lBtn1.ID = "btnEventSrch";

            var txtBox = new TextBox(); txtBox.CssClass = "txtBoxUniverse_adm"; txtBox.Width = 350; txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Text = srchString; txtBox.ID = "txtBoxSrchEvent";
            txtBox.ToolTip = "Введите текст для поиска. Поиск осуществляется по всем полям заявки, содержащим текстовые данные.";
            txtBox.Attributes.Add("placeholder", "№ заявки, ФИО или ансамбля, коллектива, объединения");
            txtBox.Attributes.Add("onkeypress", "return handleEnter('" + lBtn1.ID + "', event)");
            panelResult.Controls.Add(txtBox);

            var lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "";
            for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
            panelResult.Controls.Add(lbl);

            panelResult.Controls.Add(lBtn1);

            return panelResult;
        }

        #endregion

        #region lBtnSiteEventSrch_Command_admin

        /// <summary>Событие нажатия на кнопку НАЙТИ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void lBtnSiteEventSrch_Command_admin(object sender, CommandEventArgs e)
        {
            try
            {
                TextBox txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBoxSrchEvent");
                _pag.Session["srchStrCompet"] = txtBox.Text;
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #region LBtnGetDocument_Common Общее событие печати документа

        /// <summary>События нажатия на кнопку скачивания единого документа</summary>
        /// <param name="sender"></param>
        /// <param name="e">id заявки|ФИО</param>
        private void LBtnGetDocument_Common(object sender, CommandEventArgs e)
        {
            string[] args = e.CommandArgument.ToString().Split(new[] { '|' });
            if (args.Length == 5)
            {
                Enum.TryParse(args[1], out DocumentType docType);
                bool.TryParse(args[3], out bool clubsForm);
                new CompetitionsWork().GetResultDocument_Common(args[0], _pag, docType, null, args[2], clubsForm, int.Parse(args[4]));
            }
            else
            {
                DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: получен массив args неправильной длинны - " + args.Length);
            }
        }

        #endregion

        #region Метод ParticipantsMapPanel()

        /// <summary>Метод возвращает таблицы данных по городам участников всех конкурсов проекта.
        /// Стили к методу находятся в файле participantsmap.css</summary>
        /// <returns></returns>
        public Panel ParticipantsMapPanel()
        {
            Panel panelResult = new Panel(); panelResult.CssClass = "divMainWrap_pm";
            #region Основной код

            #region Таблица данных по Конкурсу «Крымский вернисаж»

            // Главный Заголовок
            panelResult.Controls.Add(new LiteralControl("<h2>Конкурс «Крымский вернисаж». Количество участников I отборочного тура по городам.</h2>"));

            // Получение данных из БД
            CompetitionsWork work = new CompetitionsWork();
            List<string[]> list = work.GetCityAndCounts(EnumsHelper.GetPhotoCode(Photo.self));
            if (list.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_pm'>В настоящее время нет сведений по данному конкурсу..</span>"));
            }
            else if (list.Count > 0)
            {
                // Таблица данных
                panelResult.Controls.Add(new LiteralControl("<table class='tbl_pm'>"));
                panelResult.Controls.Add(new LiteralControl("<tr>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Города участников</th>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Кол-во участников</th>"));
                panelResult.Controls.Add(new LiteralControl("</tr>"));

                foreach (string[] city in list)
                {
                    panelResult.Controls.Add(new LiteralControl("<tr>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody1_pm'>" + city[0] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody2_pm'>" + city[1] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("</tr>"));
                }

                panelResult.Controls.Add(new LiteralControl("</table>"));
            }

            #endregion

            #region Таблица данных по Литературный конкурс «Боевая слава Севастополя»

            // Главный Заголовок
            panelResult.Controls.Add(new LiteralControl("<h2>Литературный конкурс «Боевая слава Севастополя». Количество участников I отборочного тура по городам.</h2>"));

            // Получение данных из БД
            list = work.GetCityAndCounts(EnumsHelper.GetLiteraryCode(Literary.self));
            if (list.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_pm'>В настоящее время нет сведений по данному конкурсу..</span>"));
            }
            else if (list.Count > 0)
            {
                // Таблица данных
                panelResult.Controls.Add(new LiteralControl("<table class='tbl_pm'>"));
                panelResult.Controls.Add(new LiteralControl("<tr>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Города участников</th>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Кол-во участников</th>"));
                panelResult.Controls.Add(new LiteralControl("</tr>"));

                foreach (string[] city in list)
                {
                    panelResult.Controls.Add(new LiteralControl("<tr>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody1_pm'>" + city[0] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody2_pm'>" + city[1] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("</tr>"));
                }

                panelResult.Controls.Add(new LiteralControl("</table>"));
            }

            #endregion

            #region Таблица данных по Конкурсу творческого мастерства «Мастер сцены»

            // Главный Заголовок
            panelResult.Controls.Add(new LiteralControl("<h2>Конкурс творческого мастерства «Мастер сцены». Количество участников I отборочного тура по городам.</h2>"));

            // Получение данных из БД
            list = work.GetCityAndCounts(EnumsHelper.GetTheatreCode(Theatre.self));
            if (list.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_pm'>В настоящее время нет сведений по данному конкурсу..</span>"));
            }
            else if (list.Count > 0)
            {
                // Таблица данных
                panelResult.Controls.Add(new LiteralControl("<table class='tbl_pm'>"));
                panelResult.Controls.Add(new LiteralControl("<tr>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Города участников</th>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Кол-во участников</th>"));
                panelResult.Controls.Add(new LiteralControl("</tr>"));

                foreach (string[] city in list)
                {
                    panelResult.Controls.Add(new LiteralControl("<tr>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody1_pm'>" + city[0] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody2_pm'>" + city[1] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("</tr>"));
                }

                panelResult.Controls.Add(new LiteralControl("</table>"));
            }

            #endregion

            #region Таблица данных по Спортивным турнирам

            // Главный Заголовок
            panelResult.Controls.Add(new LiteralControl("<h2>Спортивные турниры. Количество участников I отборочного тура по городам.</h2>"));

            // Получение данных из БД
            list = work.GetCityAndCounts(EnumsHelper.GetSportCode(Sport.self));
            if (list.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_pm'>В настоящее время нет сведений по данному конкурсу..</span>"));
            }
            else if (list.Count > 0)
            {
                // Таблица данных
                panelResult.Controls.Add(new LiteralControl("<table class='tbl_pm'>"));
                panelResult.Controls.Add(new LiteralControl("<tr>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Города участников</th>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Кол-во участников</th>"));
                panelResult.Controls.Add(new LiteralControl("</tr>"));

                foreach (string[] city in list)
                {
                    panelResult.Controls.Add(new LiteralControl("<tr>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody1_pm'>" + city[0] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody2_pm'>" + city[1] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("</tr>"));
                }

                panelResult.Controls.Add(new LiteralControl("</table>"));
            }

            #endregion

            #region Таблица данных по Конкурсу творческих и исследовательских работ «Открытый мир»

            // Главный Заголовок
            panelResult.Controls.Add(new LiteralControl("<h2>Конкурс творческих и исследовательских работ «Открытый мир». Количество участников I отборочного тура по городам.</h2>"));

            // Получение данных из БД
            list = work.GetCityAndCounts(EnumsHelper.GetKulturaCode(Kultura.self));
            if (list.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_pm'>В настоящее время нет сведений по данному конкурсу..</span>"));
            }
            else if (list.Count > 0)
            {
                // Таблица данных
                panelResult.Controls.Add(new LiteralControl("<table class='tbl_pm'>"));
                panelResult.Controls.Add(new LiteralControl("<tr>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Города участников</th>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Кол-во участников</th>"));
                panelResult.Controls.Add(new LiteralControl("</tr>"));

                foreach (string[] city in list)
                {
                    panelResult.Controls.Add(new LiteralControl("<tr>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody1_pm'>" + city[0] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody2_pm'>" + city[1] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("</tr>"));
                }

                panelResult.Controls.Add(new LiteralControl("</table>"));
            }

            #endregion

            #region Таблица данных по Конкурсу «Черноморский флот Великой Отечественной войны в топонимике городов России»

            // Главный Заголовок
            panelResult.Controls.Add(new LiteralControl("<h2>Конкурс «Черноморский флот Великой Отечественной войны в топонимике городов России». Количество участников I отборочного тура по городам.</h2>"));

            // Получение данных из БД
            list = work.GetCityAndCounts(EnumsHelper.GetToponimCode(Toponim.self));
            if (list.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_pm'>В настоящее время нет сведений по данному конкурсу..</span>"));
            }
            else if (list.Count > 0)
            {
                // Таблица данных
                panelResult.Controls.Add(new LiteralControl("<table class='tbl_pm'>"));
                panelResult.Controls.Add(new LiteralControl("<tr>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Города участников</th>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Кол-во участников</th>"));
                panelResult.Controls.Add(new LiteralControl("</tr>"));

                foreach (string[] city in list)
                {
                    panelResult.Controls.Add(new LiteralControl("<tr>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody1_pm'>" + city[0] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody2_pm'>" + city[1] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("</tr>"));
                }

                panelResult.Controls.Add(new LiteralControl("</table>"));
            }

            #endregion

            #region Таблица данных для Конкурса по Робототехнике и моделированию 3D ручкой «Шаг в будущее»

            // Главный Заголовок
            panelResult.Controls.Add(new LiteralControl("<h2>Конкурс по Робототехнике и моделированию 3D ручкой «Шаг в будущее». Количество участников I отборочного тура по городам.</h2>"));

            // Получение данных из БД
            list = work.GetCityAndCounts(EnumsHelper.GetRobotechCode(Robotech.self));
            if (list.Count == 0)
            {
                panelResult.Controls.Add(new LiteralControl("<span id='spanNull_pm'>В настоящее время нет сведений по данному конкурсу..</span>"));
            }
            else if (list.Count > 0)
            {
                // Таблица данных
                panelResult.Controls.Add(new LiteralControl("<table class='tbl_pm'>"));
                panelResult.Controls.Add(new LiteralControl("<tr>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Города участников</th>"));
                panelResult.Controls.Add(new LiteralControl("<th class='tdHead_pm'>Кол-во участников</th>"));
                panelResult.Controls.Add(new LiteralControl("</tr>"));

                foreach (string[] city in list)
                {
                    panelResult.Controls.Add(new LiteralControl("<tr>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody1_pm'>" + city[0] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("<td class='tdBody2_pm'>" + city[1] + "</td>"));
                    panelResult.Controls.Add(new LiteralControl("</tr>"));
                }

                panelResult.Controls.Add(new LiteralControl("</table>"));
            }

            #endregion

            #endregion

            return panelResult;
        }

        #endregion

        #region Метод AddGeoYandexMap()

        /// <summary>Метод добавляет на страницу JavaScript-код для отрисовки Географии проекта на Яндекс Карте</summary>
        public void AddGeoYandexMap()
        {
            #region Основной код

            StringBuilder str = new StringBuilder();

            str.Append("<script src='https://api-maps.yandex.ru/2.1/?lang=ru_RU' type = 'text/javascript'></script>");
            _pag.Header.Controls.Add(new LiteralControl(str.ToString()));

            str = new StringBuilder();
            str.AppendLine("<script type='text/javascript'>");

            str.Append("ymaps.ready(mapInit); ");
            str.Append("var infoCenter = [55.678869, 37.580526]; ");
            str.Append("var myMap, myPlacemark, myCollection, placeNames, placeCounts, polyline;");

            str.Append("function mapInit() {");

            str.Append("myMap = new ymaps.Map('addYandexMap', { ");
            str.Append("center: infoCenter, ");
            str.Append("zoom: 4 ");
            str.Append("}); ");
            str.Append("myPlacemark = new ymaps.Placemark(infoCenter, { ");
            str.Append("hintContent: 'ГБОУ ДО ДТДиМ \"Севастополец\". Москва, ул.Большая Черёмушкинская улица, дом 38', ");
            str.Append("balloonContent: 'Конкурсный центр образовательного проекта " + CompetitonWorkCommon.projectName() + "', ");
            str.Append("iconContent: 'Конкурсный центр' ");
            str.Append("}, ");
            str.Append("{ ");
            str.Append("preset: 'islands#blueStretchyIcon', ");
            str.Append("zIndex: 999999 ");
            str.Append("} ");
            str.Append("); ");
            str.Append("myMap.geoObjects.add(myPlacemark); ");
            str.Append("var myGeocoder = []; ");

            #region Заполнение массивов данными

            CompetitionsWork work = new CompetitionsWork();
            List<string[]> list = work.GetCityAndCounts();
            str.Append("placeNames = [");
            int counter = 0;
            foreach (string[] arr in list)
            {
                if (counter == list.Count - 1) { str.Append("'" + arr[0] + "'"); }
                else { str.Append("'" + arr[0] + "',"); }
                counter++;
            }
            str.Append("];");
            str.Append("placeCounts = {");
            counter = 0;
            foreach (string[] arr in list)
            {
                if (counter == list.Count - 1) { str.Append("'" + arr[0] + "':'" + arr[1] + "'"); }
                else { str.Append("'" + arr[0] + "':'" + arr[1] + "',"); }
                counter++;
            }
            str.Append("};");

            #endregion

            str.Append("for (var i = 0; i < placeNames.length; i++) { ");
            str.Append("myGeocoder[i] = ymaps.geocode(placeNames[i]); ");
            str.Append("myGeocoder[i].then( ");
            str.Append("function (res) { ");
            str.Append("var nearest = res.geoObjects.get(0); ");
            str.Append("var name = nearest.properties.get('name'); ");
            str.Append("var nameIndex = name; ");

            //код подбора правильного кол-ва игроков по названию города на случай, если Яндекс вернул отличающееся название населённого пункта (НЕ ИСПОЛЬЗУЕТСЯ ИЗ-ЗА СБОЕВ)
            /*str.Append("var nameIndex = name; ");
            str.Append("if (name.indexOf(' ') !== -1) ");
            str.Append("{ ");
            str.Append("var names = name.split(' '); ");
            str.Append("var srchName = names[names.length - 1]; ");
            str.Append("for (var j = 0; j < placeNames.length; j++) ");
            str.Append("{ ");
            str.Append("if (placeNames[j].toLowerCase().indexOf(srchName.toLowerCase()) !== -1) ");
            str.Append("{ ");
            str.Append("nameIndex = placeNames[j].replace('город ', ''); ");
            str.Append("break; ");
            str.Append("} ");
            str.Append("} ");
            str.Append("} ");*/

            //Найдем индекс населенного пункта в массиве, чтобы потом получить кол-во участников из массива placeCounts
            str.Append("for (var j = 0; j < placeNames.length; j++) ");
            str.Append("{ ");
            str.Append("if (placeNames[j].toLowerCase().indexOf(name.toLowerCase()) !== -1) ");
            str.Append("{ ");
            str.Append("nameIndex = placeNames[j]; ");
            str.Append("break; ");
            str.Append("} ");
            str.Append("} ");

            //Костыль, заменяющий undefined на 1 (потому что Яндрекс может вернуть немного отличающееся имя населенного пункта и кол-во участников будет
            //отображаться - undefined, потому что название будет другим и не определится в ссылочном массиве placeCounts)
            str.Append("var partyCount = placeCounts[nameIndex]; ");
            str.Append("if(!partyCount) { partyCount = 1; }");

            str.Append("nearest.properties.set('iconContent', name + ' - ' + partyCount); ");
            str.Append("nearest.options.set('preset', 'islands#greenStretchyIcon'); ");
            str.Append("myMap.geoObjects.add(nearest); ");
            str.Append("var geometry = nearest.geometry.getCoordinates(); ");
            str.Append("polyline = new ymaps.Polyline([infoCenter, geometry], {}, { draggable: false, strokeColor: '#0373FE', strokeWidth: 1 }); ");
            str.Append("myMap.geoObjects.add(polyline); ");
            str.Append("}, ");
            str.Append("function (err) { } ");
            str.Append("); ");
            str.Append("} ");
            str.Append("} ");

            str.AppendLine("</script>");

            _pag.Controls.Add(new LiteralControl(str.ToString()));

            #endregion

            #region Образец кода

            //<script src = "https://api-maps.yandex.ru/2.1/?lang=ru_RU" type = "text/javascript"></script>     //подключение API, добавляется в шапку

            /*
            <div id="addYandexMap" style="width: 880px; height: 500px"></div>

            <script type="text/javascript">

                ymaps.ready(mapInit);
                var infoCenter = [55.678869, 37.580526];
                var myMap, myPlacemark, myCollection, placeNames, placeCounts;
                var polyline;

                function mapInit() {
                    myMap = new ymaps.Map("addYandexMap", {
                        center: infoCenter,
                        zoom: 4
                    });
                    myPlacemark = new ymaps.Placemark(infoCenter, {
                                hintContent: 'ГБОУ ДО ДТДиМ "Севастополец". Москва, ул.Большая Черёмушкинская улица, дом 38',
                                balloonContent: 'Конкурсный центр образовательного проекта " + projectName + "',
                                iconContent: 'Конкурсный центр'
                            },
                            {
                                preset: "islands#blueStretchyIcon",
                                zIndex: 999999
                            }
                    );
                    myMap.geoObjects.add(myPlacemark);



                    var myGeocoder = [];
                    placeNames = [
                        'город Аксарка',                    //3
                        'город Дзержинск',                  //1
                        'город Лобжа Тульская область',     //1
                        'город Москва',                     //22
                        'город село Карамышево',            //1
                        'город Тула'                        //1
                    ];
                    placeCounts = {
                        'Аксарка':'3',
                        'Дзержинск':'1',
                        'Лобжа Тульская область':'1',
                        'Москва':'22',
                        'село Карамышево':'1',
                        'Тула':'1'
                    };
                    for (var i = 0; i < placeNames.length; i++) {
                        myGeocoder[i] = ymaps.geocode(placeNames[i]);
                        myGeocoder[i].then(
                                function (res) {
                                    var nearest = res.geoObjects.get(0);
                                    var name = nearest.properties.get('name');
                                    var nameIndex = name;

                                    //код подбора правильного кол-ва игроков по названию города на случай, если Яндекс вернул отличающееся название населённого пункта
                                    if (name.indexOf(' ') !== -1) {
                                        var names = name.split(' ');
                                        //console.log(names[names.length - 1]);
                                        var srchName = names[names.length - 1];
                                        for (var j = 0; j < placeNames.length; j++) {
                                            if (placeNames[j].toLowerCase().indexOf(srchName.toLowerCase()) !== -1) {
                                                nameIndex = placeNames[j].replace('город ', '');
                                                break;
                                            }
                                        }
                                    }

                                    nearest.properties.set('iconContent', name + ' - ' + placeCounts[nameIndex]);
                                    nearest.options.set('preset', 'islands#greenStretchyIcon');
                                    myMap.geoObjects.add(nearest);

                                    var geometry = nearest.geometry.getCoordinates();
                                    polyline = new ymaps.Polyline([infoCenter, geometry],
                                                                  {},
                                                                  {
                                                                    draggable: false,
                                                                    strokeColor: '#0373FE',
                                                                    strokeWidth: 1
                                                                  });
                                    myMap.geoObjects.add(polyline);
                                },
                                function (err) {
                                    //console.log('ошибка');
                                }
                        );
                    }
                }

            </script>
            */

            #endregion
        }

        #endregion

        #region Метод CheckReqestOnOff(.)

        /// <summary>Метод проверяет вкл/выкл приема заявок для Номинации с переданным кодом</summary>
        /// <param name="code">код номинации</param>
        private void CheckReqestOnOff(string code)
        {
            ConfigFile cfg = new ConfigFile();
            if (!cfg.IsReqGettingOn(code))  //если прием заявок выключен, то..
            {
                //Проверим ещё, что это не переход из коносли управления
                if (_pag.Request.QueryString["ra"] != null)
                {
                    if ((_pag.Request.QueryString["ra"]).ToString() != "yes")
                    {
                        _pag.Response.Redirect("~/sections/project/stages.aspx");
                    }
                }
                else
                {
                    _pag.Response.Redirect("~/sections/project/stages.aspx");
                }
            }
        }

        #endregion

        #endregion
    }

    #endregion
}