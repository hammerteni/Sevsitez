// Файл с классами для формирования html-кода страниц КОНКУРСОВ в консоли управления. Файлы располагаются так:
// Материалы для конкурсов - 
// ~/files/competitionfiles/; 
// ~/files/competitionfiles/foto; 
// ~/files/competitionfiles/literary; 
// ~/files/competitionfiles/theatre
// База данных - 
// ~/files/sqlitedb/konkurses.db

#region Using

using System;
using System.Threading;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Diagnostics;
using System.Text;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using site.classesHelp;
using Image = System.Web.UI.WebControls.Image;
using site.adm;
using Google.Apis.Util.Store;
using Org.BouncyCastle.Ocsp;

#endregion

namespace site.classes
{
    #region Код формирования html-кода

    /// <summary>Класс формирует готовый html-код для страниц консоли управления.
    /// Стили для класса находятся в файле - competitions.css, competitionone.css, participantsmap.css.
    /// Javascript-файлы для класса находятся в файле adm_competitions.js
    /// Временная структура запроса будет храниться 
    /// в Session[EnumsHelper.GetSessionName(Photo.self)] ([EnumsHelper.GetSessionName(Literary.self)], [EnumsHelper.GetSessionName(Theatre.self)]) и 
    /// дублироваться во ViewState["TempRequest"]</summary>
    public class CompetitionsFormCons
    {
        #region Поля

        private Page _pag;
        private HttpContext _context = HttpContext.Current;

        // формирование ссылки вида http://localhost:6688/
        private string baseUrl;
        private string baseUrlNoPort;

        private string _pathToMainFolder;
        private string _pathToFotoFolder;
        private string _pathToLiteraryFolder;
        private string _pathToTheatreFolder;
        private string _pathToSportFolder;
        private string _pathToKulturaFolder;
        private string _pathToToponimFolder;
        private string _pathToProtocolFolder;
        private string _pathToTempFolder;
        private string _pathToVmesteSilaFolder;
        private string _pathToClothesFolder;
        private string _pathToMultimediaFolder;
        private string _pathToKorablikFolder;
        private string _pathToCrimrouteFolder;
        private string _pathToMathbattleFolder;
        private string _pathToKosmosFolder;
        private string _pathToScienceFolder;

        private string _imgUrlPathFoto;
        private string _imgUrlPathLiterary;
        private string _imgUrlPathTheatre;
        private string _imgUrlPathSport;
        private string _imgUrlPathKultura;
        private string _imgUrlPathToponim;
        private string _imgUrlPathProtocol;
        private string _imgUrlPathVmesteSila;
        private string _imgUrlPathClothes;
        private string _imgUrlPathMultimedia;
        private string _imgUrlPathKorablik;
        private string _imgUrlPathCrimroute;
        private string _imgUrlPathMathbattle;
        private string _imgUrlPathKosmos;
        private string _imgUrlPathScience;

        //private string _pathToMainFolder_arch;
        //private string _pathToFotoFolder_arch;
        //private string _pathToLiteraryFolder_arch;
        //private string _pathToTheatreFolder_arch;
        //private string _pathToSportFolder_arch;
        //private string _pathToKulturaFolder_arch;
        //private string _pathToToponimFolder_arch;
        //private string _pathToVmesteSilaFolder_arch;
        //private string _pathToClothesFolder_arch;
        //private string _pathToMultimediaFolder_arch;
        //private string _pathToKorablikFolder_arch;
        //private string _pathToCrimrouteFolder_arch;
        //private string _pathToScienceFolder_arch;

        //private string _imgUrlPathFoto_arch;
        //private string _imgUrlPathLiterary_arch;
        //private string _imgUrlPathTheatre_arch;
        //private string _imgUrlPathSport_arch;
        //private string _imgUrlPathKultura_arch;
        //private string _imgUrlPathToponim_arch;
        //private string _imgUrlPathVmesteSila_arch;
        //private string _imgUrlPathClothes_arch;
        //private string _imgUrlPathMultimedia_arch;
        //private string _imgUrlPathKorablik_arch;
        //private string _imgUrlPathCrimroute_arch;
        //private string _imgUrlPathScience_arch;

        private List<CompetitionRequest> _objIdsList;   //для работы выделения галочкой строк таблицы
        private List<CompetitionRequest_Arch> _objIdsList_Arch;   //для работы выделения галочкой строк архивной таблицы

        #endregion

        #region Конструктор класса

        /// <summary>Конструктор класс. Создаёт все необходимые для</summary>
        /// <param name="thisPage"></param>
        public CompetitionsFormCons(Page thisPage)
        {
            _pag = thisPage;
            _pathToTempFolder = _context.Server.MapPath("~") + @"files\temp\";

            
            baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" + _pag.Request.ServerVariables["SERVER_PORT"] + "/";
            baseUrlNoPort = "https://" + _pag.Request.ServerVariables["SERVER_NAME"];

            _pathToMainFolder = _context.Server.MapPath("~") + @"files\competitionfiles\";
            _pathToFotoFolder = _pathToMainFolder + @"foto\";
            _pathToLiteraryFolder = _pathToMainFolder + @"literary\";
            _pathToTheatreFolder = _pathToMainFolder + @"theatre\";
            _pathToVmesteSilaFolder = _pathToMainFolder + @"vmestesila\";
            _pathToClothesFolder = _pathToMainFolder + @"clothes\";
            _pathToSportFolder = _pathToMainFolder + @"sport\";
            _pathToKulturaFolder = _pathToMainFolder + @"kultura\";
            _pathToToponimFolder = _pathToMainFolder + @"toponim\";
            _pathToProtocolFolder = _pathToMainFolder + @"protocols\";
            _pathToMultimediaFolder = _pathToMainFolder + @"multimedia\";
            _pathToKorablikFolder = _pathToMainFolder + @"korablik\";
            _pathToCrimrouteFolder = _pathToMainFolder + @"crimroute\";
            _pathToMathbattleFolder = _pathToMainFolder + @"mathbattle\";
            _pathToKosmosFolder = _pathToMainFolder + @"kosmos\";
            _pathToScienceFolder = _pathToMainFolder + @"science\";

            _imgUrlPathFoto = "~/files/competitionfiles/foto/";
            _imgUrlPathLiterary = "~/files/competitionfiles/literary/";
            _imgUrlPathTheatre = "~/files/competitionfiles/theatre/";
            _imgUrlPathVmesteSila = "~/files/competitionfiles/vmestesila/";
            _imgUrlPathClothes = "~/files/competitionfiles/clothes/";
            _imgUrlPathSport = "~/files/competitionfiles/sport/";
            _imgUrlPathKultura = "~/files/competitionfiles/kultura/";
            _imgUrlPathToponim = "~/files/competitionfiles/toponim/";
            _imgUrlPathProtocol = "~/files/competitionfiles/protocols/";
            _imgUrlPathMultimedia = "~/files/competitionfiles/multimedia/";
            _imgUrlPathKorablik = "~/files/competitionfiles/korablik/";
            _imgUrlPathCrimroute = "~/files/competitionfiles/crimroute/";
            _imgUrlPathMathbattle = "~/files/competitionfiles/mathbattle/";
            _imgUrlPathKosmos = "~/files/competitionfiles/kosmos/";
            _imgUrlPathScience = "~/files/competitionfiles/science/";

            //_pathToMainFolder_arch = _context.Server.MapPath("~") + @"files\competitionfiles_arch\";
            //_pathToFotoFolder_arch = _pathToMainFolder_arch + @"foto_arch\";
            //_pathToLiteraryFolder_arch = _pathToMainFolder_arch + @"literary_arch\";
            //_pathToTheatreFolder_arch = _pathToMainFolder_arch + @"theatre_arch\";
            //_pathToVmesteSilaFolder_arch = _pathToMainFolder + @"vmestesila_arch\";
            //_pathToClothesFolder_arch = _pathToMainFolder + @"clothes_arch\";
            //_pathToSportFolder_arch = _pathToMainFolder_arch + @"sport_arch\";
            //_pathToKulturaFolder_arch = _pathToMainFolder_arch + @"kultura_arch\";
            //_pathToToponimFolder_arch = _pathToMainFolder_arch + @"toponim_arch\";
            //_pathToMultimediaFolder_arch = _pathToMainFolder_arch + @"multimedia_arch\";
            //_pathToKorablikFolder_arch = _pathToMainFolder_arch + @"korablik_arch\";
            //_pathToCrimrouteFolder_arch = _pathToMainFolder_arch + @"crimroute_arch\";
            //_pathToScienceFolder_arch = _pathToMainFolder_arch + @"science_arch\";

            //_imgUrlPathFoto_arch = "~/files/competitionfiles_arch/foto_arch/";
            //_imgUrlPathLiterary_arch = "~/files/competitionfiles_arch/literary_arch/";
            //_imgUrlPathTheatre_arch = "~/files/competitionfiles_arch/theatre_arch/";
            //_imgUrlPathVmesteSila_arch = "~/files/competitionfiles/vmestesila_arch/";
            //_imgUrlPathClothes_arch = "~/files/competitionfiles/clothes_arch/";
            //_imgUrlPathSport_arch = "~/files/competitionfiles_arch/sport_arch/";
            //_imgUrlPathKultura_arch = "~/files/competitionfiles_arch/kultura_arch/";
            //_imgUrlPathToponim_arch = "~/files/competitionfiles_arch/toponim_arch/";
            //_imgUrlPathMultimedia_arch = "~/files/competitionfiles_arch/multimedia_arch/";
            //_imgUrlPathKorablik_arch = "~/files/competitionfiles_arch/korablik_arch/";
            //_imgUrlPathCrimroute_arch = "~/files/competitionfiles_arch/crimroute_arch/";
            //_imgUrlPathScience_arch = "~/files/competitionfiles_arch/science_arch/";

            _objIdsList = new List<CompetitionRequest>();
            _objIdsList_Arch = new List<CompetitionRequest_Arch>();

            try
            {
                if (!Directory.Exists(_pathToFotoFolder)) Directory.CreateDirectory(_pathToFotoFolder);
                if (!Directory.Exists(_pathToLiteraryFolder)) Directory.CreateDirectory(_pathToLiteraryFolder);
                if (!Directory.Exists(_pathToTheatreFolder)) Directory.CreateDirectory(_pathToTheatreFolder);
                if (!Directory.Exists(_pathToVmesteSilaFolder)) Directory.CreateDirectory(_pathToVmesteSilaFolder);
                if (!Directory.Exists(_pathToClothesFolder)) Directory.CreateDirectory(_pathToClothesFolder);
                if (!Directory.Exists(_pathToTempFolder)) Directory.CreateDirectory(_pathToTempFolder);
                if (!Directory.Exists(_pathToSportFolder)) Directory.CreateDirectory(_pathToSportFolder);
                if (!Directory.Exists(_pathToKulturaFolder)) Directory.CreateDirectory(_pathToKulturaFolder);
                if (!Directory.Exists(_pathToToponimFolder)) Directory.CreateDirectory(_pathToToponimFolder);
                if (!Directory.Exists(_pathToProtocolFolder)) Directory.CreateDirectory(_pathToProtocolFolder);
                if (!Directory.Exists(_pathToMultimediaFolder)) Directory.CreateDirectory(_pathToMultimediaFolder);
                if (!Directory.Exists(_pathToKorablikFolder)) Directory.CreateDirectory(_pathToKorablikFolder);
                if (!Directory.Exists(_pathToCrimrouteFolder)) Directory.CreateDirectory(_pathToCrimrouteFolder);
                if (!Directory.Exists(_pathToScienceFolder)) Directory.CreateDirectory(_pathToScienceFolder);

                //if (!Directory.Exists(_pathToFotoFolder_arch)) Directory.CreateDirectory(_pathToFotoFolder_arch);
                //if (!Directory.Exists(_pathToLiteraryFolder_arch)) Directory.CreateDirectory(_pathToLiteraryFolder_arch);
                //if (!Directory.Exists(_pathToTheatreFolder_arch)) Directory.CreateDirectory(_pathToTheatreFolder_arch);
                //if (!Directory.Exists(_pathToVmesteSilaFolder_arch)) Directory.CreateDirectory(_pathToVmesteSilaFolder_arch);
                //if (!Directory.Exists(_pathToClothesFolder_arch)) Directory.CreateDirectory(_pathToClothesFolder_arch);
                //if (!Directory.Exists(_pathToSportFolder_arch)) Directory.CreateDirectory(_pathToSportFolder_arch);
                //if (!Directory.Exists(_pathToKulturaFolder_arch)) Directory.CreateDirectory(_pathToKulturaFolder_arch);
                //if (!Directory.Exists(_pathToToponimFolder_arch)) Directory.CreateDirectory(_pathToToponimFolder_arch);
                //if (!Directory.Exists(_pathToMultimediaFolder_arch)) Directory.CreateDirectory(_pathToMultimediaFolder_arch);
                //if (!Directory.Exists(_pathToKorablikFolder_arch)) Directory.CreateDirectory(_pathToKorablikFolder_arch);
                //if (!Directory.Exists(_pathToCrimrouteFolder_arch)) Directory.CreateDirectory(_pathToCrimrouteFolder_arch);
                //if (!Directory.Exists(_pathToScienceFolder_arch)) Directory.CreateDirectory(_pathToScienceFolder_arch);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }
        }

        #endregion

        #region Content_AddParty_Cons_Common

        public void Content_AddParty_Cons_Common(ref Panel panelWrapper, ref CompetitionRequest req, int protocolType = 2, bool needWeight = false)
        {
            //string paramFio = "Fio", paramAge = "Age", paramSchool = "School", paramClassRoom = "ClassRoom";
            string paramFioPlural = "Fios", paramAgePlural = "Agies", paramSchoolPlural = "Schools", paramClassRoomPlural = "ClassRooms", paramWeightPlural = "Weights";

            var fiosCommon = new List<string>();
            var agiesCommon = new List<string>();
            var schoolsCommon = new List<string>();
            var classCommon = new List<string>();
            var weightsCommon = new List<string>();

            if (!string.IsNullOrEmpty(CompetitionsWork.GetPropertyValue(req, paramFioPlural + (protocolType == 2 ? "" : "_" + protocolType))))
            {
                fiosCommon = CompetitionsWork.GetPropertyValue(req, paramFioPlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
                agiesCommon = CompetitionsWork.GetPropertyValue(req, paramAgePlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
                schoolsCommon = CompetitionsWork.GetPropertyValue(req, paramSchoolPlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
                classCommon = CompetitionsWork.GetPropertyValue(req, paramClassRoomPlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
                weightsCommon = CompetitionsWork.GetPropertyValue(req, paramWeightPlural + (protocolType == 2 ? "" : "_" + protocolType)).Split(new[] { '|' }).ToList();
            }

            #region Панель отрисовки добавленных участников

            if (fiosCommon.Count() > 0)  //если есть групповые данные в заявлении
            {
                #region Код

                for (int i = 0; i < fiosCommon.Count(); i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr style='border-bottom:0px;'><td class='tdName_co'><strong>" + (i+1).ToString() + ") </strong>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios" + (protocolType == 2 ? "" : "_" + protocolType) + "' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;' placeholder='Фамилия Имя Отчество'>" + fiosCommon[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                            "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                            req.Id + "' data-fieldname='Agies" + (protocolType == 2 ? "" : "_" + protocolType) + "' data-position='" + i + "' " +
                                                            "style='width: 100px; height: 23px;' placeholder='ДД.ММ.ГГГГ'>" + (agiesCommon.ElementAtOrDefault(i) != null ? agiesCommon[i] : "") +
                                                            "</textarea>"));
                    #endregion

                    #region Возраст

                    if (agiesCommon.ElementAtOrDefault(i) != null)
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(agiesCommon[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + agiesCommon[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }
                    #endregion

                    if (needWeight)
                    {
                        #region Вес

                        if (weightsCommon.ElementAtOrDefault(i) != null)
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + weightsCommon[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                    }

                    #region Возрастная категория
                    if (agiesCommon.ElementAtOrDefault(i) != null)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 120px;'>" + CompetitionsWork.AgeCathegory(agiesCommon[i], req.CompetitionName, req.SubsectionName) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 120px;'>" + "" + "</span>"));
                    }
                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Место учёбы / Класс с литерой|Курс</td><td class='tdValue_co'>"));

                    #region Место учёбы

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Schools" + (protocolType == 2 ? "" : "_" + protocolType) + "' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;' placeholder='ГБОУ Школа №'>" + (schoolsCommon.ElementAtOrDefault(i) != null ? schoolsCommon[i] : "") +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Класс с литерой

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                req.Id + "' data-fieldname='ClassRooms" + (protocolType == 2 ? "" : "_" + protocolType) + "' data-position='" + i + "' " +
                                                                "style='width: 100px; height: 23px;' placeholder='1-А'>" + (classCommon.ElementAtOrDefault(i) != null ? classCommon[i] : "") +
                                                                "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnDelParty" + (protocolType == 2 ? "" : "_" + protocolType) + "' class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "' data-protocoltype='" + protocolType + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                }

                #endregion
            }
            else
            {
                if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Место учёбы / Класс с литерой|Курс</td><td class='tdValue_co'>"));

                    #region Место учёбы

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Schools" + (protocolType == 2 ? "" : "_" + protocolType) + "' data-position='" + 0 + "' " +
                                                                 "style='width: 500px; height: 23px;' placeholder='ГБОУ Школа №'>" + req.Schools +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Класс с литерой

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                req.Id + "' data-fieldname='ClassRooms" + (protocolType == 2 ? "" : "_" + protocolType) + "' data-position='" + 0 + "' " +
                                                                "style='width: 100px; height: 23px;' placeholder='1-А'>" + req.ClassRooms +
                                                                "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }
            }

            #endregion

            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr style='border-bottom:0px;'><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio" + (protocolType == 2 ? "" : "_" + protocolType) + "' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя Отчество' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge" + (protocolType == 2 ? "" : "_" + protocolType) + "' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            if (needWeight) {
                //Вес
                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<input id='js_newWeight" + (protocolType == 2 ? "" : "_" + protocolType) + "' class='inputsAddParty placeHolder_co' type='text' style='width: 50px; height: 23px;' value='' placeholder='ВЕС' />"));
            }

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'></td><td class='tdValue_co'>"));

            //Место учёбы
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newSchools" + (protocolType == 2 ? "" : "_" + protocolType) + "' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='ГБОУ Школа №' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Класс с литерой
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newClassRooms" + (protocolType == 2 ? "" : "_" + protocolType) + "' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='1-А' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty" + (protocolType == 2 ? "" : "_" + protocolType) + "' class='btnSpec js_btnAddParty' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "' data-protocoltype='" + protocolType + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion
        }

        #endregion

        #region Content_Links_Cons_Common
        public void Content_Links_Cons_Common(ref Panel panelWrapper, ref CompetitionRequest req) 
        {
            var work = new CompetitionsWork();
            string fileUrlPath = work.GetUrlPathByReq(req);
            string folderName = work.GetFolderNameByReq(req);

            string sessionName = EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName);

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "?dt=" + DateTime.Now.Ticks.ToString() + "'>ссылка" + counter + "</a> "));

                    FileInfo fileInfo = null;
                    if (File.Exists(_context.Server.MapPath("~") + fileUrlPath + link))
                    {
                        fileInfo = new FileInfo(_context.Server.MapPath("~") + fileUrlPath + link);
                    }
                    if (fileInfo != null)
                    {
                        var littleFile = fileInfo.DirectoryName + "\\" + Path.GetFileNameWithoutExtension(fileInfo.Name) + "_l" + Path.GetExtension(fileInfo.Name);
                        if (File.Exists(littleFile))
                        {
                            panelWrapper.Controls.Add(new LiteralControl(" | <a target='_blank' href='" + baseUrl + fileUrlPath + Path.GetFileNameWithoutExtension(fileInfo.Name) + "_l" + Path.GetExtension(fileInfo.Name) + "?dt=" + DateTime.Now.Ticks.ToString() + "'>Картинка в результатах" + counter + "</a>"));
                        }

                        string extension = Path.GetExtension(link);
                        if (extension != null && ((extension.ToLower() == ".jpg") || (extension.ToLower() == ".jpeg") || (extension.ToLower() == ".png")))     //проверка на допустимые расширения закачиваемого файла
                        {
                            panelWrapper.Controls.Add(new LiteralControl("&nbsp;"));
                            var lBtn2 = new LinkButton(); lBtn2.CssClass = "btnSpec";
                            lBtn2.ToolTip = "Повернуть изображение на 90 градусов";
                            lBtn2.Text = "повернуть на 90°";
                            lBtn2.Command += lBtn_Rotate_Picture;
                            lBtn2.CommandArgument = fileUrlPath + link;
                            lBtn2.OnClientClick = "waiting('Обработка файла. Подождите..', 0); return pageReady();";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку
                            panelWrapper.Controls.Add(lBtn2);
                        }

                        panelWrapper.Controls.Add(new LiteralControl("<br/>"));

                    }
                }
                counter++;
            }
            if (req.Links.Count == 0)
                panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылок</p>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылок (файлы, rutube, яндекс диск)</td>"));
            for (int i = 0; i < req.Links.Count; i++)
            {
                if (i == 0)
                    panelWrapper.Controls.Add(new LiteralControl("<td class='tdValue_co'>"));
                else
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'></td><td class='tdValue_co'>"));

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                            "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                            req.Id + "' data-fieldname='Links' data-position='" + i + "' " +
                                                            "style='width: 820px; height: 23px;' " + (!req.Links[i].StartsWith("http") ? "disabled" : "") + ">"
                                                            + req.Links[i] +
                                                            "</textarea>&nbsp;&nbsp;"));

                //if (!req.Links[i].StartsWith("http"))
                //{
                var lBtn1 = new LinkButton(); lBtn1.CssClass = "btnPartyDel";
                lBtn1.ToolTip = "удалить файл или ссылку";
                lBtn1.CommandArgument = folderName + "|" + sessionName + "|" + req.Links[i];
                lBtn1.Command += lBtn_DelFile_Link_Common;
                lBtn1.OnClientClick = "if (!window.confirm('Вы действительно удалить файл?')) { return false; }";
                panelWrapper.Controls.Add(lBtn1);
                //}

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            }

            if (req.Links.Count > 0) panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'></td>"));
            panelWrapper.Controls.Add(new LiteralControl("<td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' placeholder='Поле для ссылок (после ввода нажмите Enter для сохранения)'" +
                                                "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                req.Id + "' data-fieldname='Links' data-position='" + req.Links.Count + "' " +
                                                "style='width: 500px; height: 23px;'></textarea>&nbsp;&nbsp;"));

            var fUpload = new FileUpload(); fUpload.CssClass = "fUpload_c"; fUpload.ID = "fileUpload";
            fUpload.ToolTip = "Загружайте файлы размером не более 10 мегабайт";
            panelWrapper.Controls.Add(fUpload);

            var lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.Text = "ДОБАВИТЬ";
            lBtn.ToolTip = "Загружайте файлы размером не более 10 мегабайт";
            lBtn.Command += lBtn_AddFile_Link_Common;
            lBtn.CommandArgument = folderName + "|" + sessionName;
            lBtn.OnClientClick = "waiting('Обработка файла. Подождите..', 0); return pageReady();";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку
            panelWrapper.Controls.Add(lBtn);

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

        }

        #region RecreateSmallImages_Common
        public void RecreateSmallImages_Common(ref Panel panelWrapper, string fileUrlPath)
        {
            var lBtn2 = new LinkButton(); lBtn2.CssClass = "btnSpec";
            lBtn2.ToolTip = "Пересоздать уменьшенные картинки";
            lBtn2.Text = "Пересоздать уменьшенные картинки";
            lBtn2.Command += lBtn_Recreate_Picture;
            lBtn2.CommandArgument = fileUrlPath;
            lBtn2.OnClientClick = "waiting('Обработка заявок. Подождите..', 0); return pageReady();";       //pageReady() находится в файле site.js и предотвращает нажатие на кнопку пока страница не завершит загрузку
            panelWrapper.Controls.Add(lBtn2);

        }
        #endregion

        #region lBtn_Recreate_Picture

        /// <summary>Нажатие на кнопку вращать фотографию</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_Recreate_Picture(object sender, CommandEventArgs e)
        {

            string dirName = e.CommandArgument.ToString();

            string competition = EnumsHelper.GetPhotoCode(Photo.self);
            string subname = EnumsHelper.GetPhotoValue(Photo.izo);

            var structList = new CompetitionsWork().GetSortedListOfRequests(competition, "", subname).Where(x => x.Id == 30896 || x.Id == 31641).Cast<object>().ToList();

            foreach (var req in structList)
            {
                foreach (string link in ((CompetitionRequest)req).Links)
                {
                    string extension = Path.GetExtension(link);
                    if (extension != null && ((extension.ToLower() == ".jpg") || (extension.ToLower() == ".jpeg") || (extension.ToLower() == ".png")))     //проверка на допустимые расширения закачиваемого файла
                    {
                        #region Вращение файла

                        bool err = false;

                        try
                        {
                            var path = _context.Server.MapPath("~") + dirName + link;
                            if (!File.Exists(path))  //если большого файла не существует, то и уменьшать нечего
                            {
                                continue;
                            }

                            var img = System.Drawing.Image.FromFile(path);
                            //img.RotateFlip(RotateFlipType.Rotate90FlipNone);
                            //img.Save(path);

                            var fileInfo = new FileInfo(path);

                            #region Определение типа файла

                            string fType = "", extention = "";
                            extention = Path.GetExtension(fileInfo.Name).ToLower();
                            switch (extention)
                            {
                                case ".pdf":
                                    fType = "pdf";
                                    break;
                                case ".txt":
                                    fType = "txt";
                                    break;
                                case ".rar":
                                    fType = "arch";
                                    break;
                                case ".zip":
                                    fType = "arch";
                                    break;
                                case ".jpg":
                                    fType = "img";
                                    break;
                                case ".jpeg":
                                    fType = "img";
                                    break;
                                case ".png":
                                    fType = "img";
                                    break;
                                case ".gif":
                                    fType = "img";
                                    break;
                                case ".tif":
                                    fType = "img";
                                    break;
                                case ".tiff":
                                    fType = "img";
                                    break;
                                case ".bmp":
                                    fType = "img";
                                    break;
                                case ".doc":
                                    fType = "office";
                                    break;
                                case ".docx":
                                    fType = "office";
                                    break;
                                case ".rtf":
                                    fType = "office";
                                    break;
                                case ".xls":
                                    fType = "office";
                                    break;
                                case ".xlsx":
                                    fType = "office";
                                    break;
                                case ".ppt":
                                    fType = "office";
                                    break;
                                case ".pptx":
                                    fType = "office";
                                    break;
                                default:
                                    fType = "?";
                                    break;
                            }

                            #endregion

                            var fileObj = new FileObj()
                            {
                                FDate = fileInfo.LastWriteTime.ToString("dd.MM.yyyy HH:mm"),
                                TempDate = fileInfo.LastWriteTime.Ticks,
                                FName = fileInfo.Name,
                                FLName = Path.GetFileNameWithoutExtension(fileInfo.Name) + "_l" + Path.GetExtension(fileInfo.Name),
                                FSize = fileInfo.Length / 1024,
                                FType = fType
                            };
                           

                            if (File.Exists(fileInfo.DirectoryName + "/" + fileObj.FLName))   //если уменьшенного файла изображения существует, то удаляем его и создаем новое
                            {
                                File.Delete(fileInfo.DirectoryName + "/" + fileObj.FLName);
                            }

                            #region Код

                            string newl = fileInfo.DirectoryName + "/" + fileObj.FLName;


                            var bmp = ImageOverlay.FixedSize(fileInfo.FullName, 70);
                            bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Jpeg);

                            //File.Copy(fileInfo.FullName, newl);

                            //var fileInfo2 = new FileInfo(newl);

                            //var extention2 = Path.GetExtension(fileInfo2.Name).ToLower();

                            //var fileObj1 = new FileObj()
                            //{
                            //    FDate = fileInfo2.LastWriteTime.ToString("dd.MM.yyyy HH:mm"),
                            //    TempDate = fileInfo2.LastWriteTime.Ticks,
                            //    FName = fileInfo2.Name,
                            //    FLName = Path.GetFileNameWithoutExtension(fileInfo2.Name) + "_l_new" + Path.GetExtension(fileInfo2.Name),
                            //    FSize = fileInfo2.Length / 1024,
                            //    FType = ""
                            //};

                            //ImageOverlay imgWork = new ImageOverlay();
                            //string newl1= fileInfo.DirectoryName + "/" + fileObj1.FLName;
                            //imgWork.ResizeImageNew(newl, newl1, ImageFormat.Jpeg, 50);



                            //Bitmap bmp = imgWork.ResizeImageToNeed(fileInfo.DirectoryName + "/" + fileObj.FName, img.Height, false, 50);
                            /*
                            try
                            {
                                if (extention == ".jpg")
                                {
                                    bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Jpeg);
                                }
                                else if (extention == ".jpeg")
                                {
                                    bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Jpeg);
                                }
                                else if (extention == ".png")
                                {
                                    bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Png);
                                }
                                else if (extention == ".gif")
                                {
                                    bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Gif);
                                }
                                else if (extention == ".tif")
                                {
                                    bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Tiff);
                                }
                                else if (extention == ".tiff")
                                {
                                    bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Tiff);
                                }
                                else if (extention == ".bmp")
                                {
                                    bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Bmp);
                                }
                            }
                            catch (Exception ex)
                            {
                                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                            }
                            finally
                            {
                                img.Dispose();
                                img = null;
                                bmp.Dispose();
                                bmp = null;
                            }

                            */
                            #endregion

                        }
                        catch (Exception ex)
                        {
                            DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                            err = true;
                        }
                        finally
                        {
                            GC.Collect();
                        }
                        if (err) return;

                        #endregion
                    }
                }
            }
           

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }


        #endregion


        #region События

        #region lBtn_Rotate_Picture

        /// <summary>Нажатие на кнопку вращать фотографию</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_Rotate_Picture(object sender, CommandEventArgs e)
        {
            string fName = e.CommandArgument.ToString();

            #region Вращение файла

            bool err = false;

            try
            {
                string path = _context.Server.MapPath("~") + fName;
                if (!File.Exists(path))  //если большого файла не существует, то и уменьшать нечего
                {
                    return;
                }

                System.Drawing.Image img = null;

                try
                {
                    img = System.Drawing.Image.FromFile(path);
                    img.RotateFlip(RotateFlipType.Rotate90FlipNone);
                    img.Save(path);
                }
                catch
                {
                    using (FileStream fs = new FileStream(path, FileMode.Open, FileAccess.Read))
                    {
                        using (img = System.Drawing.Image.FromStream(fs))
                        {
                            img.RotateFlip(RotateFlipType.Rotate90FlipNone);
                            img.Save(path);
                        }
                    }
                }

                

                var fileInfo = new FileInfo(path);

                #region Определение типа файла

                string fType = "", extention = "";
                extention = Path.GetExtension(fileInfo.Name).ToLower();
                switch (extention)
                {
                    case ".pdf":
                        fType = "pdf";
                        break;
                    case ".txt":
                        fType = "txt";
                        break;
                    case ".rar":
                        fType = "arch";
                        break;
                    case ".zip":
                        fType = "arch";
                        break;
                    case ".jpg":
                        fType = "img";
                        break;
                    case ".jpeg":
                        fType = "img";
                        break;
                    case ".png":
                        fType = "img";
                        break;
                    case ".gif":
                        fType = "img";
                        break;
                    case ".tif":
                        fType = "img";
                        break;
                    case ".tiff":
                        fType = "img";
                        break;
                    case ".bmp":
                        fType = "img";
                        break;
                    case ".doc":
                        fType = "office";
                        break;
                    case ".docx":
                        fType = "office";
                        break;
                    case ".rtf":
                        fType = "office";
                        break;
                    case ".xls":
                        fType = "office";
                        break;
                    case ".xlsx":
                        fType = "office";
                        break;
                    case ".ppt":
                        fType = "office";
                        break;
                    case ".pptx":
                        fType = "office";
                        break;
                    default:
                        fType = "?";
                        break;
                }

                #endregion

                var fileObj = new FileObj()
                {
                    FDate = fileInfo.LastWriteTime.ToString("dd.MM.yyyy HH:mm"),
                    TempDate = fileInfo.LastWriteTime.Ticks,
                    FName = fileInfo.Name,
                    FLName = Path.GetFileNameWithoutExtension(fileInfo.Name) + "_l" + Path.GetExtension(fileInfo.Name),
                    FSize = fileInfo.Length / 1024,
                    FType = fType
                };

                if (File.Exists(fileInfo.DirectoryName + "/" + fileObj.FLName))   //если уменьшенного файла изображения существует, то удаляем его и создаем новое
                {
                    File.Delete(fileInfo.DirectoryName + "/" + fileObj.FLName);
                }

                #region Код
                ImageOverlay imgWork = new ImageOverlay();
                Bitmap bmp = imgWork.ResizeImageToNeed(fileInfo.DirectoryName + "/" + fileObj.FName, img.Height, false);

                try
                {
                    if (extention == ".jpg")
                    {
                        bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Jpeg);
                    }
                    else if (extention == ".jpeg")
                    {
                        bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Jpeg);
                    }
                    else if (extention == ".png")
                    {
                        bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Png);
                    }
                    else if (extention == ".gif")
                    {
                        bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Gif);
                    }
                    else if (extention == ".tif")
                    {
                        bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Tiff);
                    }
                    else if (extention == ".tiff")
                    {
                        bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Tiff);
                    }
                    else if (extention == ".bmp")
                    {
                        bmp.Save(fileInfo.DirectoryName + "/" + fileObj.FLName, ImageFormat.Bmp);
                    }
                }
                catch (Exception ex)
                {
                    DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                }
                finally
                {
                    img.Dispose();
                    img = null;
                    bmp.Dispose();
                    bmp = null;
                }

                #endregion

                //EncoderParameter qualityParam = new EncoderParameter(System.Drawing.Imaging.Encoder.Quality, 75L);
                //ImageCodecInfo jpegCodec = GetEncoderInfo(@"image/jpeg");
                //EncoderParameters encoderParams = new EncoderParameters(1);
                //encoderParams.Param[0] = qualityParam;
                //mss = new System.IO.MemoryStream();
                //img = System.Drawing.Image.FromFile(path);
                //fs = new System.IO.FileStream(path, System.IO.FileMode.OpenOrCreate, System.IO.FileAccess.ReadWrite);
                //img.Save(mss, jpegCodec, encoderParams);
                //byte[] matriz = mss.ToArray();
                //fs.Write(matriz, 0, matriz.Length);
                //mss.Close();
                //fs.Close();
                //mss.Dispose();
                //fs.Dispose();

                //img = System.Drawing.Image.FromFile(path);
                //using (MemoryStream memory = new MemoryStream())
                //{
                //    using (FileStream fs = new FileStream(path, FileMode.Create, FileAccess.ReadWrite))
                //    {
                //        img.RotateFlip(RotateFlipType.Rotate90FlipNone);
                //        img.Save(memory, ImageFormat.Jpeg);
                //        byte[] bytes = memory.ToArray();
                //        fs.Write(bytes, 0, bytes.Length);
                //    }
                //}
                //new ImageForm(null).GetPathToLittleFoto(fName, "785", "", true);

            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                //lbl.Text = "Не удалось вращать файл. Попробуйте повторить или сообщите нам!"; 
                //panelWarn.Controls.Add(lbl);

                err = true;
            }
            finally
            {
                GC.Collect();
            }
            if (err) return;

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }
        private static ImageCodecInfo GetEncoderInfo(String mimeType)
        {
            int j;
            ImageCodecInfo[] encoders;
            encoders = ImageCodecInfo.GetImageEncoders();
            for (j = 0; j < encoders.Length; ++j)
            {
                if (encoders[j].MimeType == mimeType)
                    return encoders[j];
            }
            return null;
        }
        #endregion

        #region lBtn_AddFile_Link_Common

        /// <summary>Нажатие на кнопку ДОБАВИТЬ файл</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddFile_Link_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];

            FileUpload fUpload = (FileUpload)_pag.FindControl("ctl00$ContentPlaceHolder1$fileUpload");
            bool err = false;

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            if (fUpload.HasFile)
            {
                string fileName = _pag.Server.HtmlEncode(fUpload.FileName);
                string extension = Path.GetExtension(fileName);

                if (extension != null)     //проверка на допустимые расширения закачиваемого файла
                {
                    int fileSize = fUpload.PostedFile.ContentLength;
                    //10Мб
                    if (fileSize <= 10485760)                              //проверка на допустимый размер закачиваемого файла
                    {
                        #region Код сохранения файла на сервер

                        //создадим имя для файла картинки
                        Random rn = new Random();
                        string fName = DateTime.Now.ToString("yyyyMMdd_HHmmssffff") + "_" + rn.Next(999999) + extension;

                        //сохраним файл в папку с файлами для конкурсных работ (у каждого конкурса своя папка)
                        try
                        {
                            fUpload.SaveAs(folderName + fName);
                            fUpload.Dispose();
                        }
                        catch (Exception ex)
                        {
                            DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                            lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!<br />" + ex.Message; 
                            panelWarn.Controls.Add(lbl);
                            err = true;
                            return;
                        }

                        if (err) return;

                        #region Добавление имени файла в объект

                        try
                        {
                            var req = ((CompetitionRequest)_context.Session[sessionName]);
                            if (req != null)
                            {
                                var resFieldValue = "";
                                StringBuilder sb = new StringBuilder();
                                int counter = 0;
                                foreach (string str in req.Links)
                                {
                                    if (counter == 0) sb.Append(str); else sb.Append("|" + str);
                                    counter++;
                                }
                                resFieldValue = sb.ToString();

                                resFieldValue = new CompetitionsWork().ReplaceFieldValues(resFieldValue, fName, req.Links.Count());

                                resFieldValue = resFieldValue.Replace("|", "^");

                                new CompetitionsWork().UpdateField(req.Id.ToString(), "Links", resFieldValue);
                            }
                        }
                        catch (Exception ex)
                        {
                            DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                            lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!<br />" + ex.Message; panelWarn.Controls.Add(lbl);
                            err = true;
                        }
                        if (err) return;

                        #endregion

                        _pag.Response.Redirect(_pag.Request.RawUrl);

                        #endregion
                    }
                    else { lbl.Text = "Допускаются только файлы размером не более 10-го мегабайт"; panelWarn.Controls.Add(lbl); }
                }
                else { lbl.Text = "Не допускаются файлы не имеющие расширения"; panelWarn.Controls.Add(lbl); }
            }
            else { lbl.Text = "Сначала выберите файл через кнопку 'ОБЗОР'"; panelWarn.Controls.Add(lbl); }
        }
        #endregion

        #region lBtn_DelFile_Link_Common

        /// <summary>Нажатие на кнопку КРЕСТИК-УДАЛЕНИЕ линка на файл или ссылку на ресурс</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит имя файла картинки с расширением</param>
        private void lBtn_DelFile_Link_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];
            string fName = args[2];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Удаляем имя файла из сессионной переменной

            bool err = false;
            try
            {
                var req = ((CompetitionRequest)_context.Session[sessionName]);
                if (req != null)
                {
                    var resFieldValue = "";
                    var position = -1;
                    StringBuilder sb = new StringBuilder();
                    int counter = 0;
                    foreach (string str in req.Links)
                    {
                        if (fName == str) position = counter;
                        if (counter == 0) sb.Append(str); else sb.Append("|" + str);
                        counter++;
                    }
                    resFieldValue = sb.ToString();

                    resFieldValue = new CompetitionsWork().ReplaceFieldValues(resFieldValue, "", position);

                    resFieldValue = resFieldValue.Replace("|", "^");

                    if (position != -1)
                    {
                        new CompetitionsWork().UpdateField(req.Id.ToString(), "Links", resFieldValue);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);
                err = true;
            }
            if (err) return;

            #endregion

            #region Удаляем файл с диска

            try
            {
                if (File.Exists(folderName + fName)) 
                    File.Delete(folderName + fName);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);
                err = true;
            }
            if (err) return;

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion

        #region Content_Documents_Cons_Common
        public void Content_Documents_Cons_Common(ref Panel panelWrapper, string reqId) {

            panelWrapper.Controls.Add(new LiteralControl("<div style='text-align: right; padding: 0px 0px 5px 0px;'>"));

            #region Выбор типа документа

            var lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "Выберите тип документа:&nbsp;&nbsp;";

            var ddl = new DropDownList(); ddl.CssClass = "btnSpec";

            ddl.Items.Add(new ListItem(EnumsHelper.GetPrintDocumentType(PrintDocumentType.diplomIndividual2Round), PrintDocumentType.diplomIndividual2Round.ToString()));
            ddl.Items.Add(new ListItem(EnumsHelper.GetPrintDocumentType(PrintDocumentType.diplomGroup2Round), PrintDocumentType.diplomGroup2Round.ToString()));
            //ddl.Items.Add(new ListItem(EnumsHelper.GetPrintDocumentType(PrintDocumentType.diplomIndividual1Round), PrintDocumentType.diplomIndividual1Round.ToString()));
            //ddl.Items.Add(new ListItem(EnumsHelper.GetPrintDocumentType(PrintDocumentType.diplomGroup1Round), PrintDocumentType.diplomGroup1Round.ToString()));

            ddl.Items.Add(new ListItem(EnumsHelper.GetPrintDocumentType(PrintDocumentType.certificateIndividual2Round), PrintDocumentType.certificateIndividual2Round.ToString()));
            ddl.Items.Add(new ListItem(EnumsHelper.GetPrintDocumentType(PrintDocumentType.certificateGroup2Round), PrintDocumentType.certificateGroup2Round.ToString()));
            ddl.Items.Add(new ListItem(EnumsHelper.GetPrintDocumentType(PrintDocumentType.certificateIndividual1Round), PrintDocumentType.certificateIndividual1Round.ToString()));
            ddl.Items.Add(new ListItem(EnumsHelper.GetPrintDocumentType(PrintDocumentType.certificateGroup1Round), PrintDocumentType.certificateGroup1Round.ToString()));

            ddl.Items.Add(new ListItem(EnumsHelper.GetPrintDocumentType(PrintDocumentType.thanksLetter), PrintDocumentType.thanksLetter.ToString()));

            ddl.ID = "DropDown_Subsection_Documents";
            ddl.Width = 420;
            panelWrapper.Controls.Add(ddl);

            #endregion

            lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "&nbsp;&nbsp;";
            panelWrapper.Controls.Add(lbl);

            var lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.Text = "ПЕЧАТЬ";
            lBtn.ToolTip = "Выберите тип документа из списка и нажмите на кнопку ПЕЧАТЬ";
            lBtn.CommandArgument = reqId;
            lBtn.Command += new CommandEventHandler(lBtPrintDocument_Command_Common);
            panelWrapper.Controls.Add(lBtn);

            panelWrapper.Controls.Add(new LiteralControl("</div>"));
        }

        #region lBtPrintDocument_Command_Common

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void lBtPrintDocument_Command_Common(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            bool checker = true;

            try
            {
                var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection_Documents");
                
                Enum.TryParse(ddl.SelectedValue, out PrintDocumentType printDocType);
                DocumentType docType;
                bool isGroup = false;
                int protocolType = 2;
                if ((new List<PrintDocumentType>() { PrintDocumentType.diplomIndividual1Round, PrintDocumentType.diplomIndividual2Round, PrintDocumentType.diplomGroup1Round, PrintDocumentType.diplomGroup2Round }).Contains(printDocType))
                {
                    docType = DocumentType.Diplom;
                    if ((new List<PrintDocumentType>() {  PrintDocumentType.diplomGroup1Round, PrintDocumentType.diplomGroup2Round }).Contains(printDocType))
                        isGroup = true;
                    if ((new List<PrintDocumentType>() { PrintDocumentType.diplomIndividual1Round, PrintDocumentType.diplomGroup1Round }).Contains(printDocType))
                        protocolType = 1;
                }
                else if ((new List<PrintDocumentType>() { PrintDocumentType.certificateIndividual1Round, PrintDocumentType.certificateIndividual2Round, PrintDocumentType.certificateGroup1Round, PrintDocumentType.certificateGroup2Round }).Contains(printDocType))
                {
                    docType = DocumentType.Certificate;
                    if ((new List<PrintDocumentType>() { PrintDocumentType.certificateGroup1Round, PrintDocumentType.certificateGroup2Round }).Contains(printDocType))
                        isGroup = true;
                    if ((new List<PrintDocumentType>() { PrintDocumentType.certificateIndividual1Round, PrintDocumentType.certificateGroup1Round }).Contains(printDocType))
                        protocolType = 1;
                }
                else if (PrintDocumentType.thanksLetter == printDocType)
                {
                    docType = DocumentType.Blagodarnost;
                }
                else
                {
                    checker = false;
                    warning.ShowWarning("ОШИБКА выбора типа документа. Попробуйте повторить..", _pag.Master);
                    return;
                }

                if (checker)
                    new CompetitionsWork().GetResultDocument_Common(args[0], _pag, docType, warning, "", isGroup, protocolType);

                //warning.ShowWarning("ОШИБКА во время удаления лишних файлов работ. Попробуйте повторить..", _pag.Master);
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

        }

        #endregion

        #endregion Content_Documents_Cons_Common

        #region Content_RequestApply
        private void Content_RequestApply_Common(ref Panel panelWrapper, CompetitionRequest req)
        {
            panelWrapper.Controls.Add(new LiteralControl("<div style='text-align: left; padding: 0px 0px 5px 35px; position:absolute;'>"));

            if (!req.IsApply)
            {
                var lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "ПРИНЯТЬ";
                lBtn.ToolTip = "Для приема заявки нажмите ПРИНЯТЬ (уведомление уйдет инициатору заявки)";
                lBtn.CommandArgument = req.Id.ToString();// +  req.CompetitionName
                lBtn.Command += new CommandEventHandler(lBtRequestApply_Command_Common);
                lBtn.OnClientClick = "if (!window.confirm('Вы действительно хотите принять заявку?')) { return false; }";
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;<span style='color:red;font-weight:bold'>Заявка не принята</span>"));
            }
            else
            {
                DateTime? dt = null;
                if (req.DateApply != 0)
                {
                    dt = new DateTime(req.DateApply);
                }
                panelWrapper.Controls.Add(new LiteralControl("&nbsp;<span style='color:green;font-weight:bold'>Заявка принята " + (dt != null ? ((DateTime)dt).ToString("dd.MM.yyyy HH:mm:ss") : "") + "</span>"));
            }
            
            panelWrapper.Controls.Add(new LiteralControl("</div>"));
        }

        #region lBtRequestApply_Command_Common

        /// <summary>Событие нажатия на кнопку ПРИНЯТЬ</summary>
        /// <param name="sender"></param>
        /// <param name="e">ID заявки</param>
        private void lBtRequestApply_Command_Common(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();
            string id = args[0];//, statusId = args[1];

            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(id);

            string competitionName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);

            #region Отправляем письмо педагогу

            var mailbodyAdm = new StringBuilder();
            mailbodyAdm.Append("*********************************************************************************************************" +
                                "<br />Это письмо сформировано автоматически, отвечать на него не нужно!" +
                                "<br />Для связи с куратором конкурса, используйте контакты на странице <a target='blank' href='https://sevastopolets-moskva.ru/sections/contacts/'>Контакты</a>" +
                                "<br />*********************************************************************************************************" +
                                "<br /><br />Здравствуйте!" + "<br /><br />" +
                                "Ваша заявка № " + req.Id.ToString() + " от " + new DateTime(req.DateReg).ToShortDateString() + " <strong>принята</strong> куратором конкурса!<br /><br />" +
                                "<strong>" + competitionName + "</strong>" +

                                 "<br/><br/>C уважением,<br/>" +
                                 "Администрация Государственного бюджетного образовательного учреждения  дополнительного образования города Москвы «Дворец творчества детей и молодежи «Севастополец»." +
                                 "<br /><br />Следите за анонсами мероприятий Проекта на сайте <a href='" + baseUrlNoPort + "'>" + baseUrlNoPort + "</a>" +
                                 "<br /><br />Это письмо сформировано автоматически, отвечать на него не нужно." +
                                 "<br /><br /><img src='" + baseUrl + "files/shared/logo.png' alt='Логотип нашего учреждения' />");

            //если письмо не отослано, то..
            if (!new SendMailClass().SendMail(req.ChiefEmail, "Оповещение о приеме заявки. " + competitionName, mailbodyAdm.ToString()))
            {
                DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось отправить письмо конкурсанту о приеме его заявки № " + req.Id.ToString() + " от " + new DateTime(req.DateReg).ToShortDateString() + " в " + competitionName + " На почту - " + req.ChiefEmail);
            }

            #endregion

            #region Проставляем флаг принятия заявки и текущую дату

            work.UpdateApply(req.Id);

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #region Content_Results_Common
        public void Content_Results_Common(ref Panel panelWrapper, string compCode, string subsections = "")
        {
            #region Кнопка вкл./выкл. отображения панели участников 2-го тура

            var cfg = new ConfigFile();
            var lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "";
            for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
            panelWrapper.Controls.Add(lbl);

            var lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.ToolTip = "Включить или выключить отображение панели результатов (для участников 2-го тура).";
            if (cfg.IsResultPanelOn(compCode))
            {
                lBtn.Text = "Выкл. результатов 2-го тура";
            }
            else
            {
                lBtn.Text = "Вкл. результатов 2-го тура";
            }
            lBtn.Command += new CommandEventHandler(lBtnResultOnOff_Common);
            lBtn.CommandArgument = lBtn.Text + "|" + (subsections != "" ? subsections : compCode);
            panelWrapper.Controls.Add(lBtn);

            #endregion
            #region Кнопка вкл./выкл. отображения панели участников 1-го тура

            lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "";
            for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
            panelWrapper.Controls.Add(lbl);

            lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.ToolTip = "Включить или выключить отображение панели результатов (для участников 1-го тура).";
            if (cfg.IsResultPanelFirstRoundOn(compCode))
            {
                lBtn.Text = "Выкл. результатов 1-го тура";
            }
            else
            {
                lBtn.Text = "Вкл. результатов 1-го тура";
            }
            lBtn.Command += new CommandEventHandler(lBtnResultOnOff_Common);
            lBtn.CommandArgument = lBtn.Text + "|" + (subsections != "" ? subsections : compCode);
            panelWrapper.Controls.Add(lBtn);

            #endregion
        }

        #region lBtnResultOnOff_Common

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. результатов' или 'Выкл. результатов'</param>
        private void lBtnResultOnOff_Common(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();
            string stage = args[0], compName = args[1];
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            string[] subnames = new string[] { "" };
            if (compName.Contains(";"))
            {
                subnames = compName.Split(';');
            }
            else 
            {
                subnames = new string[] { compName }; 
            }

            if (stage == "Вкл. результатов 2-го тура")
            {
                #region Включение
                bool err = false;
                foreach (string subname in subnames)
                {
                    if (!cfg.AddParam(subname + "_results_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки показа результатов.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов 2-го тура";
                }
                #endregion
            }
            else if (stage == "Выкл. результатов 2-го тура")
            {
                #region Выключение
                bool err = false;
                foreach (string subname in subnames)
                {
                    if (!cfg.AddParam(subname + "_results_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов 2-го тура";
                }
                #endregion
            }

            if (stage == "Вкл. результатов 1-го тура")
            {
                #region Включение
                bool err = false;
                foreach (string subname in subnames)
                {
                    if (!cfg.AddParam(subname + "_results_first_round_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки показа результатов.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов 1-го тура";
                }
                #endregion
            }
            else if (stage == "Выкл. результатов 1-го тура")
            {
                #region Выключение
                bool err = false;
                foreach (string subname in subnames)
                {
                    if (!cfg.AddParam(subname + "_results_first_round_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов 1-го тура";
                }
                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #region Content_Title_Cons_Common
        public void Content_Title_Cons_Common(ref Panel panelWrapper, bool isArchive)
        {
            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>ПАНЕЛЬ УПРАВЛЕНИЯ " + (isArchive ? "АРХИВЫМИ" : "") + " КОНКУРСНЫМИ ЗАЯВКАМИ</span>"));
        }

        #endregion

        #region Content_Search_Cons_Common

        public void Content_Search_Cons_Common(ref Panel panelWrapper)
        {
            var srchString = _pag.Session["srchStrCompet"].ToString();
                      
            var txtBox = new TextBox(); txtBox.CssClass = "txtBoxUniverse_adm"; txtBox.Width = 150; txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Text = srchString; txtBox.ID = "txtBoxSrchEvent";
            txtBox.ToolTip = "Введите текст для поиска. Поиск осуществляется по всем полям заявки, содержащим текстовые данные.";
            panelWrapper.Controls.Add(txtBox);

            var lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "";
            for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
            panelWrapper.Controls.Add(lbl);

            var lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.Text = " Найти "; lBtn.ToolTip = "Кнопка поиска по заявкам. Поиск осуществляется по всем полям заявки, содержащим текстовые данные.";
            lBtn.Command += (lBtnSiteEventSrch_Command_Cons_Common); lBtn.ID = "btnEventSrch"; panelWrapper.Controls.Add(lBtn);

        }

        #region lBtnSiteEventSrch_Command_Cons_Common

        /// <summary>Событие нажатия на кнопку НАЙТИ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void lBtnSiteEventSrch_Command_Cons_Common(object sender, CommandEventArgs e)
        {
            try
            {
                TextBox txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBoxSrchEvent");
                _pag.Session["srchStrCompet"] = txtBox.Text;
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #region Content_TableData_Cons_Common

        public void Content_TableData_Cons_Common(ref Panel panelWrapper, string competition, string[] subsections, bool isArchive)
        {
            var lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "";
            for (int i = 0; i < 15; i++) { lbl.Text += "&nbsp;"; }
            panelWrapper.Controls.Add(lbl);
            var lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.Text = "Скачать таблицу"; lBtn.ToolTip = "Получение таблицы данных по конкурсу в формате Excel";
            lBtn.CommandArgument = competition + "|" + string.Join(";", subsections) + "|" + isArchive;
            lBtn.Command += (lBtnGetCsvTbl_Command_Cons_Common);
            panelWrapper.Controls.Add(lBtn);
        }

        #region lBtnGetCsvTbl_Command_Cons_Common

        /// <summary>Событие нажатия на кнопку "Скачать таблицу"</summary>
        /// <param name="sender"></param>
        /// <param name="e">код прав доступа</param>
        protected void lBtnGetCsvTbl_Command_Cons_Common(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            StringBuilder sb = new StringBuilder();

            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var competition = args[0];
            var subnames = args[1].Split(new[] { ';' }).ToList();
            var isArchive = bool.Parse(args[2]);

            bool checker = true;

            try
            {
                #region Получение данных

                var list = new List<object>();
                var tmpList = new List<object>();

                if (!isArchive)
                {
                    foreach (string subname in subnames)
                    {
                        tmpList = new CompetitionsWork().GetListOfRequests(competition, "", subname).Cast<object>().ToList();
                        if (tmpList != null)
                        {
                            list.AddRange(tmpList);
                        }
                    }
                }
                else
                {
                    foreach (string subname in subnames)
                    {
                        tmpList = new CompetitionsWork_Arch().GetListOfRequests(competition, "", subname).Cast<object>().ToList();
                        if (tmpList != null)
                        {
                            list.AddRange(tmpList);
                        }
                    }
                }

                if (list.Count == 0)
                {
                    warning.ShowWarning("Заявок по конкурсам ещё нет..", _pag.Master);
                    return;
                }

                #endregion

                #region Формирование данных

                sb.AppendLine("№ п/п;Номер заявки;Дата заявки;Конкурс;Номинация;Возрастная категория;Кол-во участников;Коллектив (клуб);ФИО/Возраст;Вес;" +
                                "Заметки куратора;" +
                                "Название работы;Авторы коллекции;Хронометраж;Техническое сопровождение;Комментарии;Образовательная организация;" +
                                "Регион;Город;ФИО педагога; Должность педагога;Эл.почта педагога;Конт.телефон педагога;" +
                                "Педагоги (ФИО/Должность);Голоса ЗА;Кол-во участников в отборочном;Фактический адрес организации;Место проведения тренировок;Баллы;Результат;Ссылки");

                string fioAge = "", ageCategory = "", weights = "", authors = "", chiefs = "", chrono = "";
                DateTime dt;
                int i = 1;
                foreach (CompetitionRequest req in list)
                {
                    var linkList = new CompetitionsWork().GetLinkList(req);
                    var links = String.Join(" ", linkList.Values);
                    
                    ageCategory = CompetitionsWork.GetAgeCategory(req);
                    fioAge = CompetitionsWork.GetFiosAndAgesInOne(req.Fio + "|" + req.Fios, req.Age + "|" + req.Agies, "  ");
                    weights = CompetitionsWork.GetWeightsInOne(req, "  ");
                    authors = req.GetAuthorsStr("  ");
                    chiefs = req.GetChiefFiosAndPositionsStr("  ");
                    if (req.Timing_min == 0 || req.Timing_sec == 0)
                    {
                        chrono = "";
                    }
                    else
                    {
                        chrono = req.Timing_min + " мин. " + req.Timing_sec + " сек.";
                    }
                    dt = new DateTime(req.DateReg);
                    
                    sb.AppendLine(i + ";" + req.Id + ";" + 
                        dt.ToString("dd.MM.yyyy") + ";" + 
                        EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName) + ";" +
                        req.SubsectionName + ";" + 
                        ageCategory + ";" + 
                        req.PartyCount + ";" + 
                        req.ClubsName.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" + 
                        fioAge + ";" + 
                        weights + ";" +
                        req.Results + ";" +
                        req.WorkName.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" + 
                        authors + ";" + 
                        chrono + ";" + 
                        req.TechnicalInfo.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" +
                        req.WorkComment.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" + 
                        req.EducationalOrganizationShort.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" + 
                        req.Region.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" +
                        req.City.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" + 
                        req.ChiefFio + ";" + 
                        req.ChiefPosition.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" + 
                        req.ChiefEmail + ";" + 
                        req.ChiefTelephone + ";" +
                        chiefs + ";" + 
                        req.Likes + ";" + 
                        req.ProtocolPartyCount + ";" + 
                        req.Addr.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" + 
                        req.Addr1.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" + 
                        req.Points.ToString() + ";" + 
                        CompetitionsWork.GetResultDocumentForParticipant(req, true) + ";" + 
                        links
                    );
                    i++;
                }

                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                checker = false;

                #endregion
            }

            #region Отправка данных 

            if (checker)
            {
                competition = competition.Trim();
                if (competition.Contains(" ")) 
                    competition = competition.Replace(" ", "_");

                string fName = (string.IsNullOrEmpty(competition) ? "admin": competition) + ".csv";
                _pag.Response.Clear();
                _pag.Response.ContentType = "application/octet-stream";
                _pag.Response.AddHeader("Content-Disposition", "attachment; filename=" + fName);
                byte[] b = Encoding.Default.GetBytes(sb.ToString());       // если нужно передать из файла на диске, то так - //byte[] b = File.ReadAllBytes(filePath);
                _pag.Response.BinaryWrite(b);
                _pag.Response.End();
            }

            #endregion
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #region Content_Scores_Cons_Common

        public void Content_Scores_Cons_Common(ref Panel panelWrapper, string competition, string[] subsections, bool isArchive)
        {
            var lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "";
            for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
            panelWrapper.Controls.Add(lbl);

            var lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.Text = "Скачать оценочный лист"; lBtn.ToolTip = "Получение таблицы оценочных листов для Жюри по конкурсу в формате Excel";
            lBtn.CommandArgument = competition + "|" + string.Join(";", subsections) + "|" + isArchive;
            lBtn.Command += (lBtnGetScorecardCsvTbl_Command_Cons_Common);
            panelWrapper.Controls.Add(lBtn);
        }

        #region lBtnGetScorecardCsvTbl_Command_Cons_Common

        /// <summary>Событие нажатия на кнопку "Скачать оценочный лист" для Жюри</summary>
        /// <param name="sender"></param>
        /// <param name="e">код прав доступа</param>
        protected void lBtnGetScorecardCsvTbl_Command_Cons_Common(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            StringBuilder sb = new StringBuilder();

            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var competition = args[0];
            var subnames = args[1].Split(new[] { ';' }).ToList();
            var isArchive = bool.Parse(args[2]);

            bool checker = true;

            try
            {
                #region Получение данных

                var list = new List<object>();
                var tmpList = new List<object>();

                if (!isArchive)
                {
                    foreach (string subname in subnames)
                    {
                        tmpList = new CompetitionsWork().GetListOfRequests(competition, "", subname).Cast<object>().ToList();
                        if (tmpList != null)
                        {
                            list.AddRange(tmpList);
                        }
                    }
                }
                else
                {
                    foreach (string subname in subnames)
                    {
                        tmpList = new CompetitionsWork_Arch().GetListOfRequests(competition, "", subname).Cast<object>().ToList();
                        if (tmpList != null)
                        {
                            list.AddRange(tmpList);
                        }
                    }
                }

                if (list.Count == 0)
                {
                    warning.ShowWarning("Заявок по конкурсам ещё нет..", _pag.Master);
                    return;
                }

                #endregion

                #region Формирование данных

                sb.AppendLine("№ п/п;Номинация;ФИО;Возрастная категория;Регион;Город;Учреждение;Название работы;Баллы;Итог;");

                int i = 1;
                foreach (CompetitionRequest req in list)
                {
                    sb.AppendLine((i + 1) + ";" + 
                        req.SubsectionName + ";" +
                        req.Fio + ";" + 
                        CompetitionsWork.GetAgeCategory(req) + ";" + 
                        req.Region.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" + 
                        req.City.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" +
                        req.EducationalOrganization.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" + 
                        req.WorkName.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" + 
                        req.Points + ";" + 
                        CompetitionsWork.GetResultDocumentForParticipant(req));

                    i++;
                }

                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                checker = false;

                #endregion
            }

            #region Отправка данных 

            if (checker)
            {
                competition = competition.Trim();
                if (competition.Contains(" ")) 
                    competition = competition.Replace(" ", "_");

                string fName = competition + "_scorecard.csv";
                _pag.Response.Clear();
                _pag.Response.ContentType = "application/octet-stream";
                _pag.Response.AddHeader("Content-Disposition", "attachment; filename=" + fName);
                byte[] b = Encoding.Default.GetBytes(sb.ToString());       // если нужно передать из файла на диске, то так - //byte[] b = File.ReadAllBytes(filePath);
                _pag.Response.BinaryWrite(b);
                _pag.Response.End();
            }

            #endregion
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #region Content_Email_Cons_Common

        public void Content_Email_Cons_Common(ref Panel panelWrapper, string competition, string[] subsections, bool isArchive)
        {
            var lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "";
            for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
            panelWrapper.Controls.Add(lbl);

            var lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.Text = "Получить все e-mail"; lBtn.ToolTip = "Получение списков e-mail по всем заявкам";
            lBtn.CommandArgument = competition + "|" + string.Join(";", subsections) + "|" + isArchive;
            lBtn.Command += (lBtnGetAllEmails_Command_Cons_Common);
            panelWrapper.Controls.Add(lBtn);
        }

        #region lBtnGetAllEmails_Command_Cons_Common

        /// <summary>Событие нажатия на кнопку "Получить все e-mail"</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void lBtnGetAllEmails_Command_Cons_Common(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            StringBuilder sb = new StringBuilder();

            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var competition = args[0];
            var subnames = args[1].Split(new[] { ';' }).ToList();
            var isArchive = bool.Parse(args[2]);

            bool checker = true;

            try
            {
                #region Получение данных

                var list = new List<object>();
                var tmpList = new List<object>();

                if (!isArchive)
                {
                    foreach (string subname in subnames)
                    {
                        tmpList = new CompetitionsWork().GetListOfRequests(competition, "", subname).Cast<object>().ToList();
                        if (tmpList != null)
                        {
                            list.AddRange(tmpList);
                        }
                    }
                }
                else
                {
                    foreach (string subname in subnames)
                    {
                        tmpList = new CompetitionsWork_Arch().GetListOfRequests(competition, "", subname).Cast<object>().ToList();
                        if (tmpList != null)
                        {
                            list.AddRange(tmpList);
                        }
                    }
                }

                if (list.Count == 0)
                {
                    warning.ShowWarning("Не удалось получить список адресов e-mail участников конкурсов..", _pag.Master);
                    return;
                }

                #endregion

                #region Формирование данных

                sb.AppendLine(EnumsHelper.GetCompetitionValueFromCode(competition) + ":");
                sb.AppendLine("");

                List<string> mailList = new List<string>();
                foreach (CompetitionRequest req in list)
                {

                    if (req.ChiefEmail != "" && req.ChiefEmail.ToUpper() != "НЕТ")
                    {
                        mailList.Add(req.ChiefEmail);
                    }
                }
                mailList = mailList.Distinct().ToList();
                foreach (string mail in mailList)
                {
                    sb.Append(mail + "; ");
                }

                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                checker = false;
                #endregion
            }

            #region Отправка данных

            if (checker)
            {
                string fName = "emails.txt";
                _pag.Response.Clear();
                _pag.Response.ContentType = "application/octet-stream";
                _pag.Response.AddHeader("Content-Disposition", "attachment; filename=" + fName);
                byte[] b = Encoding.UTF8.GetBytes(sb.ToString());       // если нужно передать из файла на диске, то так - //byte[] b = File.ReadAllBytes(filePath);
                _pag.Response.BinaryWrite(b);
                _pag.Response.End();
            }

            #endregion
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #region Content_Mesh_Cons_Common

        public void Content_Mesh_Cons_Common(ref Panel panelWrapper, string rightsVal, bool isArchive)
        {
            if (isArchive)
                return;

            var lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "";
            for (int i = 0; i < 15; i++) { lbl.Text += "&nbsp;"; }
            panelWrapper.Controls.Add(lbl);

            var lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.Text = "Скачать таблицу МЭШ"; lBtn.ToolTip = "Получение таблицы данных по конкурсам в формате Excel МЭШ";
            lBtn.CommandArgument = rightsVal;
            lBtn.Command += (lBtnGetCsvTblMesh_Command_Common);
            panelWrapper.Controls.Add(lBtn);
        }

        #region lBtnGetCsvTblMesh_Command_Common

        /// <summary>Событие нажатия на кнопку "Скачать таблицу МЭШ"</summary>
        /// <param name="sender"></param>
        /// <param name="e">код прав доступа</param>
        protected void lBtnGetCsvTblMesh_Command_Common(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            StringBuilder sb = new StringBuilder();
            string type = e.CommandArgument.ToString();

            bool checker = true;

            try
            {
                #region Получение данных

                var work = new CompetitionsWork();
                var data = work.GetCompetitionSubsectionByWrites(EnumsHelper.GetWritesEnumCodeFromValue(type));

                var list = new List<CompetitionRequest>();
                list = work.GetListOfRequests(data.Key, "", data.Value);

                var edu = new EducationOrganizationWork().EducationOrganizations();
                for (int i = 0; i < list.Count; i++)
                {
                    if (edu.ContainsKey(list[i].EducationalOrganization + list[i].EducationalOrganizationShort)) {
                        var ttedu = edu[list[i].EducationalOrganization + list[i].EducationalOrganizationShort]; 

                        list[i].TypeName = ttedu.TypeName;
                        list[i].MRSD = ttedu.MRSD;
                    }
                }

                if (list.Count == 0)
                {
                    warning.ShowWarning("Заявок по конкурсам ещё нет..", _pag.Master);
                    return;
                }

                #endregion

                #region Формирование данных

                sb.AppendLine("Фамилия;Имя;Отчество;Дата рождения;СНИЛС;Телефон;e-mail;ОО;Тип ОО;МРСД;Регион;Город;Параллель;Класс;Название мероприятия;Номер мероприятия;Подкатегория;Вид творческой деятельности;" +
                                "Уровень мероприятия;Формат мероприятия;Дата начала мероприятия;Дата окончания мероприятия;Результат мероприятия(если есть результат, не являющийся наградой, например, полученный балл);Описание мероприятия(в свободной форме);" +
                                "Место проведения;Номер участника;Этап мероприятия;Дата начала этапа мероприятия;Дата окончания этапа мероприятия;Событие (указывается опционально при наличии конкретного события в рамках мероприятия, которое необходимо отметить);" +
                                "Дата события;Организатор;Возрастное ограничение;Награда (нет/ Победитель/ Призер/ 1-е место/ 2-е место/ 3-е место/ Лауреат/ в свободной форме);Дата получения награды;Номер награды;Описание награды(в свободной форме);Вложения(названия файлов через запятую)");

                var fiosAll = new List<PersonPair>();
                for (int i = 0; i < list.Count; i++)
                {
                    var fiosTemp = ((!string.IsNullOrEmpty(list[i].Fios) ? list[i].Fios : list[i].Fio) + "|" + list[i].Fios_1).Split(new[] { '|' });
                    var agesTemp = ((!string.IsNullOrEmpty(list[i].Agies) ? list[i].Agies : list[i].Age) + "|" + list[i].Agies_1).Split(new[] { '|' });
                    var schoolsTemp = ((!string.IsNullOrEmpty(list[i].Schools) ? list[i].Schools : "") + "|" + list[i].Schools_1).Split(new[] { '|' });
                    var classRoomsTemp = ((!string.IsNullOrEmpty(list[i].ClassRooms) ? list[i].ClassRooms : "") + "|" + list[i].ClassRooms_1).Split(new[] { '|' });

                    List<PersonPair> fiosList = new List<PersonPair>();
                    for (int n = 0; n < fiosTemp.Length; n++)
                    {
                        if (!string.IsNullOrEmpty(fiosTemp[n]) && !fiosList.Exists(x => x.Name == fiosTemp[n]))
                        {
                            fiosList.Add(new PersonPair()
                            {
                                Name = fiosTemp[n],
                                Age = agesTemp.ElementAtOrDefault(n) != null ? agesTemp[n] : "",
                                School = schoolsTemp.ElementAtOrDefault(n) != null ? schoolsTemp[n] : "",
                                Classroom = classRoomsTemp.ElementAtOrDefault(n) != null ? classRoomsTemp[n] : "",
                                ParticipantRound = (string.IsNullOrEmpty(list[i].Fios) && list[i].Fio == fiosTemp[n] || list[i].Fios.Split(new[] { '|' }).Any(x => x == fiosTemp[n]) ? "II тур" : "I тур")
                            });
                        }
                    }

                    fiosAll.AddRange(fiosList);

                    string typeOfActivity = "", format = "", dtStart = "", dtEnd = "";
                    var CompetitionName = list[i].CompetitionName;
                    var SubName = list[i].SubsectionName;
                    if (CompetitionName == EnumsHelper.GetPhotoValue(Photo.self))
                    {
                        typeOfActivity = "технический";
                        format = "заочный";
                        dtStart = "01.12.2022";
                        dtEnd = "31.03.2023";
                    }
                    else if (CompetitionName == EnumsHelper.GetLiteraryValue(Literary.self))
                    {
                        typeOfActivity = "художественный";
                        format = "заочный";
                        dtStart = "10.01.2022";
                        dtEnd = "31.03.2023";
                    }
                    else if (CompetitionName == EnumsHelper.GetTheatreValue(Theatre.self))
                    {
                        typeOfActivity = "художественный";
                        format = "заочный-очный";
                        if (SubName == EnumsHelper.GetTheatreValue(Theatre.hudSlovo))
                        {
                            dtStart = "01.12.2022";
                            dtEnd = "13.04.2023";
                        }
                        else if (SubName == EnumsHelper.GetTheatreValue(Theatre.teatrIskusLitMuzKom) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.teatrIskusSpekt) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.teatrIskusMultiGanr))
                        {
                            dtStart = "01.12.2022";
                            dtEnd = "30.04.2023";
                        }
                        else if (SubName == EnumsHelper.GetTheatreValue(Theatre.xoreoBalniyTanets) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.xoreoClassichTanets) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.xoreoEstradTanets) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.xoreoNarodTanets) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.xoreoStilNarodTanets) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.xoreoSovremTanets) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.xoreoCircIskus) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.xoreoKadeti) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.xoreoCherliding))
                        {
                            dtStart = "01.01.2022";
                            dtEnd = "30.04.2022";
                        }
                        else if (SubName == EnumsHelper.GetTheatreValue(Theatre.vokalAkademVokal) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.vokalEstradVokal) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.vokalFolklor))
                        {
                            dtStart = "01.11.2022";
                            dtEnd = "31.03.2023";
                        }
                        else if (SubName == EnumsHelper.GetTheatreValue(Theatre.insrumZanrAnsambli) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.insrumZanrDuhovieUdarnInstrum) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.insrumZanrFortepiano) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.insrumZanrGitara) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.insrumZanrNarodnieInstrum) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.insrumZanrOrkestri) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.insrumZanrSintezator) ||
                            SubName == EnumsHelper.GetTheatreValue(Theatre.insrumZanrStrunnoSmichkovieInstrumenti))
                        {
                            dtStart = "01.12.2022";
                            dtEnd = "30.04.2023";
                        }
                    }
                    else if (CompetitionName == EnumsHelper.GetKulturaValue(Kultura.self))
                    {
                        typeOfActivity = "технический";
                    }
                    else if (CompetitionName == EnumsHelper.GetSportValue(Sport.self))
                    {
                        typeOfActivity = "физкультурно-спортивный";
                    }
                    else if (CompetitionName == EnumsHelper.GetToponimValue(Toponim.self))
                    {
                        typeOfActivity = "художественный";
                    }
                    else if (CompetitionName == EnumsHelper.GetRobotechValue(Robotech.self))
                    {
                        typeOfActivity = "технический";
                    }
                    else if (CompetitionName == EnumsHelper.GetVmesteSilaValue(VmesteSila.self))
                    {
                        typeOfActivity = "художественный";
                    }
                    else if (CompetitionName == EnumsHelper.GetMultimediaValue(Multimedia.self))
                    {
                        typeOfActivity = "технический";
                    }
                    else if (CompetitionName == EnumsHelper.GetClothesValue(Clothes.self))
                    {
                        typeOfActivity = "художественный";
                    }
                    else if (CompetitionName == EnumsHelper.GetKorablikValue(Korablik.self))
                    {
                        typeOfActivity = "художественный";
                    }
                    else if (CompetitionName == EnumsHelper.GetCrimrouteValue(Crimroute.self))
                    {
                        typeOfActivity = "художественный";
                    }
                    else if (CompetitionName == EnumsHelper.GetMathbattleValue(Mathbattle.self))
                    {
                        typeOfActivity = "технический";
                    }
                    else if (CompetitionName == EnumsHelper.GetKosmosValue(Kosmos.self))
                    {
                        typeOfActivity = "технический";
                    }
                    else if (CompetitionName == EnumsHelper.GetScienceValue(Science.self))
                    {
                        typeOfActivity = "технический";
                    }

                    for (int j = 0; j < fiosList.Count; j++)
                    {
                        var fioDetail = fiosList[j].Name.Split(new[] { ' ' });

                        sb.AppendLine(
                                (fioDetail.ElementAtOrDefault(0) != null ? fioDetail[0] : "") + ";" +
                                (fioDetail.ElementAtOrDefault(1) != null ? fioDetail[1] : "") + ";" +
                                (fioDetail.ElementAtOrDefault(2) != null ? fioDetail[2] : "") + ";" +
                                fiosList[j].Age + ";" +
                                "" + ";" +
                                list[i].ChiefTelephone + ";" +
                                list[i].ChiefEmail + ";" +
                                list[i].EducationalOrganization.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" +
                                list[i].TypeName.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" +
                                list[i].MRSD.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" +
                                list[i].Region.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" +
                                list[i].City.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" +
                                fiosList[j].School.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" +
                                fiosList[j].Classroom.Replace("\r", "").Replace("\n", "  ").Replace(";", ",").Replace("\"", " ") + ";" +
                                CompetitonWorkCommon.projectName().TrimEnd(new char[] { ' ', '.' }) + ";" +
                                list[i].Id.ToString() + ";" +
                                EnumsHelper.GetCompetitionValueFromCode(CompetitionName) + ": " + SubName + ";" +
                                typeOfActivity + ";" +
                                "городской" + ";" +
                                ";" +
                                ";" +
                                ";" +
                                (fiosList[j].ParticipantRound == "II тур" ? CompetitionsWork.GetResultDocumentForParticipant(list[i], true) : "Участник") + ";" +
                                ";" +
                                ";" +
                                fiosList[j].ParticipantRound + ";");

                    }
                }

                var countFios = fiosAll.GroupBy(x => x.Name).Count();
                #endregion
            }
            catch (Exception ex)
            {
                #region Код

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                checker = false;

                #endregion
            }

            #region Отправка данных 

            if (checker)
            {
                string fName = "Таблица МЭШ.csv";
                _pag.Response.Clear();
                _pag.Response.ContentType = "application/octet-stream";
                _pag.Response.AddHeader("Content-Disposition", "attachment; filename=" + fName);
                byte[] b = Encoding.Default.GetBytes(sb.ToString());       // если нужно передать из файла на диске, то так - //byte[] b = File.ReadAllBytes(filePath);
                _pag.Response.BinaryWrite(b);
                _pag.Response.End();
            }

            #endregion
        }

        #endregion

        #endregion

        #region Content_DelButton_Cons_Common

        public void Content_DelButton_Cons_Common(ref TableCell tblCell, bool isArchive)
        {

            tblCell.Controls.Add(new LiteralControl("&nbsp;&nbsp;&nbsp;&nbsp;"));
            var lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.Text = "Удалить отмеченное"; lBtn.ToolTip = "Удаляются отмеченные заявки (файлы работ тоже удаляются)";
            lBtn.Command += (lBtnDeleteChecked_Command_Cons_Common); 
            lBtn.ID = "btnDeleteChecked";
            lBtn.OnClientClick = "if(confirm('Отмеченные заявки будут удалены из базы данных. Удалить?')) {waiting('Идёт удаление заявок. Подождите..', 500); return true;} else {return false;};";
            lBtn.CommandArgument = isArchive + "|";
            tblCell.Controls.Add(lBtn);
            tblCell.Controls.Add(new LiteralControl("<br/><br/>"));
        }

        #region lBtnDeleteChecked_Command_Cons_Common

        /// <summary>Событие кнопки удаления всех выделенных заявок. Файлы работ тоже удаляются.</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void lBtnDeleteChecked_Command_Cons_Common(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass();
            warning.HideWarning(_pag.Master);

            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var isArchive = bool.Parse(args[0]);

            #region Получаем список заявок, строки которых отмечены галочкой

            var list = new List<object>();
            var listToRemove = new List<object>();

            if (!isArchive)
                list = _objIdsList.Cast<object>().ToList();
            else
                list = _objIdsList_Arch.Cast<object>().ToList();

            foreach (CompetitionRequest req in list)
            {
                if (((CheckBox)_pag.FindControl("ctl00$ContentPlaceHolder1$chkbox_" + req.Id)).Checked)
                {
                    listToRemove.Add(req);
                }
            }

            #endregion
            #region Если ничего не отмечено галочкой, то..

            if (listToRemove.Count == 0)
            {
                warning.ShowWarning("Ничего не отмечено для удаления...", _pag.Master);
                return;
            }

            #endregion

            #region Удаляем отмеченные заявки

            int res;
            foreach (CompetitionRequest req in listToRemove)
            {
                if (!isArchive)
                    res = new CompetitionsWork().DeleteOneRequest(req.Id.ToString(), false, req);
                else
                    res = new CompetitionsWork_Arch().DeleteOneRequest(req.Id.ToString(), false, (CompetitionRequest_Arch)req);

                if (res == 0 || res == -1)
                {
                    DebugLog.Log(ErrorEvents.warn, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Не удалось удалить " + (isArchive ? "архивную" : "") + " заявку № " + req.Id + " из базы данных. Пытался удалить - " + ((AdmPersonStruct)_pag.Session["authperson"]).Name);
                }
                else
                {
                    DebugLog.Log(ErrorEvents.info, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст: Удалена текущая " + (isArchive ? "архивная" : "") + " заявка - " + req.CompetitionName + "; " + req.SubsectionName + "; id - " + req.Id + "; " +
                                             req.EducationalOrganization + "; " + req.Fio + ", " + req.Fios.Replace("|", ", ") + "). Удалил - " + ((AdmPersonStruct)_pag.Session["authperson"]).Name);
                }
            }

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #region Content_AddProtocol_Common
        public void Content_AddProtocol_Common(ref Panel panelResult, ref CompetitionRequest req)
        {
            string sessionName = EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName);

            var panel = new Panel(); panel.CssClass = "panelSub_c";
            panel.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Протокол</td><td class='tdValue_co'>"));
            
            var fUpload = new FileUpload(); fUpload.CssClass = "fUpload_c"; fUpload.ID = "protocolUpload";
            fUpload.ToolTip = "Загружайте файл в формате PDF размером не более 2-x мегабайт";
            panel.Controls.Add(fUpload);

            var lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.Text = "ДОБАВИТЬ";
            lBtn.ToolTip = "Загружайте файл в формате PDF размером не более 2-x мегабайт";
            lBtn.Command += lBtn_AddProtocol_Common;
            lBtn.CommandArgument = _pathToProtocolFolder + "|" + sessionName + "|" + req.ProtocolFile + "|" + req.Id;
            lBtn.OnClientClick = "if (!window.confirm('Перед добавлением нового файла удалится старый файл. Вы уверены, что хотите добавить файл?')) { return false; } else { waiting('Обработка файла. Подождите..', 0); return pageReady(); }";
            panel.Controls.Add(lBtn);

            if (!string.IsNullOrEmpty(req.ProtocolFile))     //если к заявке загружен файл протокола
            {
                // Панель со ссылкой на файл
                var panelWork = new Panel();
                panelWork.CssClass = "divWork_c"; panelWork.ID = "panelProtocol_c";

                HyperLink hLink = new HyperLink(); hLink.CssClass = "hLink_c";
                hLink.NavigateUrl = _imgUrlPathProtocol + req.ProtocolFile;
                hLink.Text = "ссылка на файл";
                hLink.Target = "_blank";
                panelWork.Controls.Add(hLink);

                panelWork.Controls.Add(new LiteralControl("&nbsp;"));

                lBtn = new LinkButton(); lBtn.CssClass = "btnPartyDel";
                lBtn.ToolTip = "удалить файл протокола";
                lBtn.CommandArgument = _pathToProtocolFolder + "|" + sessionName + "|" + req.ProtocolFile + "|" + req.Id;
                lBtn.Command += lBtn_DelProtocol_Common;
                lBtn.OnClientClick = "if (!window.confirm('Вы действительно хотите удалить файл?')) { return false; }";
                panelWork.Controls.Add(lBtn);

                panel.Controls.Add(panelWork);
            }

            //panel.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
            //                                      "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
            //                                      req.Id + "' data-fieldname='ProtocolPartyCount' " +
            //                                      "style='width: 100px; height: 23px;'>" + req.ProtocolPartyCount +
            //                                      "</textarea> / "));

            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panelResult.Controls.Add(panel);
        }

        #region События

        #region lBtn_AddProtocol_Common

        /// <summary>Нажатие на кнопку ДОБАВИТЬ протокол</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtn_AddProtocol_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];
            var oldFileName = args[2];
            var reqId = args[3];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            FileUpload fUpload = (FileUpload)_pag.FindControl("ctl00$ContentPlaceHolder1$protocolUpload");
            if (fUpload.HasFile)
            {
                string fileName = _pag.Server.HtmlEncode(fUpload.FileName);
                string extension = Path.GetExtension(fileName);

                if (extension != null && ((extension.ToLower() == ".pdf")))     //проверка на допустимые расширения закачиваемого файла
                {
                    int fileSize = fUpload.PostedFile.ContentLength;
                    if (fileSize <= 2097152)                              //проверка на допустимый размер закачиваемого файла
                    {
                        #region Код сохранения файла на серевер

                        //создадим имя для файла картинки
                        Random rn = new Random();
                        string fName = "proto_" + DateTime.Now.ToString("yyyyMMdd_HHmmssffff") + "_" + rn.Next(999) + extension;

                        //сохраним файл в папку с файлами для протоколов (одна для всех конкурсов)
                        try
                        {
                            fUpload.SaveAs(folderName + fName);
                            fUpload.Dispose();

                            new CompetitionsWork().UpdateField(reqId, "ProtocolFile", fName);
                        }
                        catch (Exception ex)
                        {
                            DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                            lbl.Text = "Не удалось сохранить файл. Попробуйте повторить или сообщите нам!"; panelWarn.Controls.Add(lbl);
                            return;
                        }

                        #region Удалим прежний файл протокола, если он уже был загружен (на случай тупняков пользователей)

                        try
                        {
                            if (File.Exists(folderName + oldFileName))
                                File.Delete(folderName + oldFileName);
                        }
                        catch (Exception ex)
                        {
                            DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                            lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!";
                            panelWarn.Controls.Add(lbl);
                            return;
                        }

                        #endregion

                        _pag.Response.Redirect(_pag.Request.RawUrl);

                        #endregion
                    }
                    else
                    {
                        lbl.Text = "Допускаются только файлы размером не более 2-x мегабайт";
                        panelWarn.Controls.Add(lbl);
                        return;
                    }
                }
                else
                {
                    lbl.Text = "Допускаются только файлы в формате PDF";
                    panelWarn.Controls.Add(lbl);
                    return;
                }
            }
            else
            {
                lbl.Text = "Сначала выберите файл через кнопку 'ОБЗОР'";
                panelWarn.Controls.Add(lbl);
                return;
            }
        }

        #endregion
        #region lBtn_DelProtocol_Common

        /// <summary>Нажатие на кнопку КРЕСТИК-УДАЛЕНИЕ файла с протоколом</summary>
        /// <param name="sender"></param>
        /// <param name="e">содержит имя файла картинки с расширением</param>
        private void lBtn_DelProtocol_Common(object sender, CommandEventArgs e)
        {
            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            var folderName = args[0];
            var sessionName = args[1];
            var fileName = args[2];
            var reqId = args[3];

            #region Готовим панель предупреждений

            Panel panelWarn = (Panel)_pag.FindControl("ctl00$ContentPlaceHolder1$panelWarning_c");
            panelWarn.Controls.Clear();
            Label lbl = new Label(); lbl.Text = ""; lbl.ForeColor = Color.Red;

            #endregion

            #region Удаляем файл с диска

            try
            {
                if (File.Exists(folderName + fileName))
                    File.Delete(folderName + fileName);

                new CompetitionsWork().UpdateField(reqId, "ProtocolFile", "");
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                lbl.Text = "Не удалось удалить файл. Попробуйте повторить или сообщите нам!";
                panelWarn.Controls.Add(lbl);
                return;
            }

            #endregion

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #endregion

        #region Content_FileProtocolComment_Common
        public void Content_FileProtocolComment_Common(ref Panel panel, bool needToShowParticipantsCount = false)
        {
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Добавьте Протокол I (отборочного) тура и Согласие на обработку " +
                                                                        "персональных данных в ОДНОМ файле PDF (Согласие на обработку " +
                                                                        "персональных данных заполняется в зависимости от количества " +
                                                                        "участников (коллективное или индивидуальное).</p>"));
            panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Для этого нажмите на кнопку 'ОБЗОР', в появившемся окне выберите файл протокола со своего жёсткого диска. Затем нажмите на кнопку 'ДОБАВИТЬ'. " +
                                                  "Обратите внимание, что допускается добавление файла протокола только в формате PDF и размером не более 2-x мегабайт.</p>"));

            if (needToShowParticipantsCount)
                panel.Controls.Add(new LiteralControl("<p class='p_agreement_c'>Ниже, в специальной графе, укажите количество участников I " +
                                                "отборочного тура согласно протокола.</p>"));
        }
        #endregion
 
        #endregion

        #region Content_PrevNext_Common
        public void Content_PrevNext_Common(ref Panel panelResult, CompetitionRequest req, string writes, bool ext = false)
        {
            LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnPrevious";
            lBtn.ToolTip = "открыть предыдущую заявку";
            lBtn.CommandArgument = req.Id.ToString() + "|"+ writes + "|" + ext;
            lBtn.Command += (lBtnToPreviousReq_Common);
            lBtn.OnClientClick = "waiting('Идёт переход к предыдущей заявке. Подождите..', 500);";
            panelResult.Controls.Add(lBtn);

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnNext";
            lBtn.ToolTip = "открыть следующую заявку";
            lBtn.CommandArgument = req.Id.ToString() + "|" + writes + "|" + ext;
            lBtn.Command += (lBtnToNextReq_Common);
            lBtn.OnClientClick = "waiting('Идёт переход к следующей заявке. Подождите..', 500);";
            panelResult.Controls.Add(lBtn);
        }

        #region События

        #region Событие lBtnToPreviousReq_Common
        /// <summary>Нажатие на кнопку перехода к предыдущей заявке</summary>
        /// <param name="sender"></param>
        /// <param name="e">id текущей открытой Заявки</param>
        protected void lBtnToPreviousReq_Common(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); 
            warning.HideWarning(_pag.Master);

            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            long reqId = StringToNum.ParseLong(args[0]);
            if (reqId == -1)
            {
                warning.ShowWarning("Неправильный id Заявки..", _pag.Master);
                return;
            }

            var writes = EnumsHelper.GetWritesEnumCodeFromValue(args[1]);

            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, false);

            var structList = new CompetitionsWork().GetSortedListOfRequests(data.Key, "", data.Value).Cast<object>().ToList();
            if (structList.Count == 0)  //проверка-подстраховка
            {
                return;
            }
            //принудительная сортировка
            structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

            int indexCurrent = structList.FindIndex(x => ((CompetitionRequest)x).Id == reqId);
            if (indexCurrent >= structList.Count - 1)
            {
                warning.ShowWarning("Это первая заявка, перед ней больше нет заявок..", _pag.Master);
                return;
            }

            long needId = 0;
            bool err = false;
            try
            {
                needId = ((CompetitionRequest)structList[indexCurrent + 1]).Id;
            }
            catch (Exception ex)
            {
                #region Код

                err = true;

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());

                #endregion
            }

            if (!err)
            {
                _pag.Response.Redirect("~/adm/competitionone"+ (bool.Parse(args[2]) ? "admin" : "") + ".aspx?num=" + needId);
            }
        }

        #endregion
        #region Событие lBtnToNextReq_Common

        /// <summary>Нажатие на кнопку перехода к следующей заявке</summary>
        /// <param name="sender"></param>
        /// <param name="e">id текущей открытой Заявки</param>
        protected void lBtnToNextReq_Common(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); 
            warning.HideWarning(_pag.Master);

            var args = e.CommandArgument.ToString().Split(new[] { '|' }).ToList();

            long reqId = StringToNum.ParseLong(args[0]);
            if (reqId == -1)
            {
                warning.ShowWarning("Неправильный id Заявки..", _pag.Master);
                return;
            }

            var writes = EnumsHelper.GetWritesEnumCodeFromValue(args[1]);

            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, false);

            var structList = new CompetitionsWork().GetSortedListOfRequests(data.Key, "", data.Value).Cast<object>().ToList();
            if (structList.Count == 0)  //проверка-подстраховка
            {
                return;
            }
            //принудительная сортировка
            structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

            int indexCurrent = structList.FindIndex(x => ((CompetitionRequest)x).Id == reqId);
            if (indexCurrent == 0)
            {
                warning.ShowWarning("Это последняя заявка, после неё больше нет заявок..", _pag.Master);
                return;
            }

            long needId = 0;
            bool err = false;
            try
            {
                needId = ((CompetitionRequest)structList[indexCurrent - 1]).Id;
            }
            catch (Exception ex)
            {
                #region Код

                err = true;

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());

                #endregion
            }

            if (!err)
            {
                _pag.Response.Redirect("~/adm/competitionone"+ (bool.Parse(args[2]) ? "admin" : "") + ".aspx?num=" + needId);
            }
        }

        #endregion

        #endregion

        #endregion

        #region Content_Result_Common
        public void Content_Result_Common(ref Panel panelResult, CompetitionRequest req)
        {
            panelResult.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));

            panelResult.Controls.Add(new LiteralControl(
                 "<div class=\"typeahead__container js-typeahead-container-result\">" +
                    "<div class=\"typeahead__field\">" +
                    "<div class=\"typeahead__query\">"));

            var txtBox = new TextBox();
            txtBox.CssClass = "js-typeahead-result js_txtBoxReqs";
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Введите результат или выберите из предложенных");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Attributes.Add("autocomplete", "off");
            txtBox.Attributes.Add("data-fieldname", "Result");
            txtBox.Attributes.Add("data-reqid", req.Id.ToString());
            txtBox.Text = CompetitionsWork.GetResultDocumentForParticipant(req, true);
            txtBox.ID = "Result";
            panelResult.Controls.Add(txtBox);

            panelResult.Controls.Add(new LiteralControl("</div>" +
                        "</div>" +
                    "</div>"));

            panelResult.Controls.Add(new LiteralControl("</td></tr>"));

        }
        #endregion

        #region Content_AddResults_Common
        public void Content_AddResults_Common(ref Panel panelResult, ref CompetitionRequest req)
        {
            panelResult.Controls.Add(new LiteralControl("<tr><td class='tdName_co'> Заметки куратора</td><td class='tdValue_co'>"));
            panelResult.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='Results' " +
                                                         "style='width: 880px; height: 50px;'>" + req.Results + "</textarea>"));
            panelResult.Controls.Add(new LiteralControl("</td></tr>"));

        }
        #endregion

        #region Content_AddEducationOrganization_Common

        public void Content_AddEducationOrganization_Common(ref Panel panel, ref CompetitionRequest req)
        {
            panel.Controls.Add(new LiteralControl("<tr><td class='td_Title_c'>Сведения об образовательном учреждении</td>"));
            panel.Controls.Add(new LiteralControl("<td class='td_Zvezda_c'>*</td><td class='td_Content_c'>"));

            panel.Controls.Add(new LiteralControl("<div style=\"width:518px;\">"));

            //var rb = ((RadioButton)this._pag.FindControl("ctl00$ContentPlaceHolder1$organization"));
            var isEdu = req.EducationalOrganization != "Индивидуальная заявка" ? true : false;

            panel.Controls.Add(new LiteralControl(
                 "<div class=\"typeahead__container\">" +
                    "<div>"));

            var radio = new RadioButton();
            radio.ID = "organization";
            radio.GroupName = "eduTypeName";
            radio.Text = " Образовательное учреждение";
            radio.Checked = isEdu;
            panel.Controls.Add(radio);

            panel.Controls.Add(new LiteralControl("</div><div>"));

            radio = new RadioButton();
            radio.ID = "individ";
            radio.GroupName = "eduTypeName";
            radio.Text = " Индивидуальная заявка";
            radio.Checked = !isEdu;
            panel.Controls.Add(radio);

            panel.Controls.Add(new LiteralControl(
                     "</div>" +
                 "</div>"));

            panel.Controls.Add(new LiteralControl(
                "<div class=\"typeahead__container\">" +
                   "<div>"));

            panel.Controls.Add(new LiteralControl("<div class='explanation' style='padding:0px;color:#f54444;font-size:13px;'>Поиск начинается после <strong>3-х</strong> введенных символов.</div>"));

            panel.Controls.Add(new LiteralControl("<div class='explanation' style='padding:0px;color:#f54444;font-size:13px;'>Пример для поиска: <strong>ГБОУ Школа № 17</strong></div>"));

            panel.Controls.Add(new LiteralControl(
                     "</div>" +
                 "</div>"));

            panel.Controls.Add(new LiteralControl(
                       "<div class=\"typeahead__container js-typeahead-container-org\" style=\"display:" + (isEdu ? "block" : "none") + ";margin-top:3px;\">" +
                       "<div class=\"typeahead__field\">" +
                           "<div class=\"typeahead__query\">"));

            var txtBox = new TextBox();
            txtBox.CssClass = "js-typeahead-org";
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Введите короткое или полное название образовательного учреждения");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Attributes.Add("autocomplete", "off");
            txtBox.Text = req.EducationalOrganization;
            txtBox.ID = "txtBox_EducationalOrganization";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>" +
                        "</div>" +
                    "</div>"));

            panel.Controls.Add(new LiteralControl(
                       "<div class=\"typeahead__container js-typeahead-container-individ\" style=\"display:" + (!isEdu ? "block" : "none") + ";margin-top:3px;\">" +
                       "<div class=\"typeahead__field\">" +
                           "<div class=\"typeahead__query\">"));

            txtBox = new TextBox();
            txtBox.CssClass = "js-typeahead-individ";
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Введите название города");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Attributes.Add("autocomplete", "off");
            txtBox.Text = string.Format("Регион: {0}, Район: {1}, Город: {2}", req.Region, req.Area, req.City);
            txtBox.ID = "txtBox_EducationalOrganizationCity";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>" +
                       "</div>" +
                   "</div>"));

            panel.Controls.Add(new LiteralControl("<div class=\"typeahead__container\">"));

            //if (isEdu)
            //{
            panel.Controls.Add(new LiteralControl("<div class=\"typeahead__field EducationalOrganizationShort\" style=\"margin-top:5px\">"));

            txtBox = new TextBox();
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Образовательное учреждение");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Text = req.EducationalOrganizationShort;
            txtBox.ID = "txtBox_EducationalOrganizationShort";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>"));
            //}

            panel.Controls.Add(new LiteralControl("<div class=\"typeahead__field\" style=\"margin-top:5px\">"));

            txtBox = new TextBox();
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Федеральный округ");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Text = req.District;
            txtBox.ID = "txtBox_District";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("<div class=\"typeahead__field\" style=\"margin-top:5px\">"));

            txtBox = new TextBox();
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Регион");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Text = req.Region;
            txtBox.ID = "txtBox_Region";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("<div class=\"typeahead__field\" style=\"margin-top:5px\">"));

            txtBox = new TextBox();
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Район");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Text = req.Area;
            txtBox.ID = "txtBox_Area";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("<div class=\"typeahead__field\" style=\"margin-top:5px\">"));

            txtBox = new TextBox();
            txtBox.TextMode = TextBoxMode.SingleLine;
            txtBox.Attributes.Add("placeholder", "Город");
            txtBox.Attributes.Add("style", "min-height:30px;padding:0.2rem 0.6rem");
            txtBox.Text = req.City;
            txtBox.ID = "txtBox_City";
            panel.Controls.Add(txtBox);

            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("</div>"));

            panel.Controls.Add(new LiteralControl("</td></tr>"));

            panel.Controls.Add(new LiteralControl("<tr><td></td>"));                                                        // Коммент внизу поля
            panel.Controls.Add(new LiteralControl("<td></td><td class='explanation_c' style='color:#f54444;font-size:13px;'>"));
            panel.Controls.Add(new LiteralControl("Если вы не учащийся образовательного учреждения или не нашли его в списке,<br />выберите пункт \"Индивидуальная заявка\" и найдите свой город</td></tr>"));
        }

        #endregion

        #region Для консоли управления

        #region Работа с текущими заявками

        #region ЛК кураторов

        #region Метод ConsoleCompetitionPanel(string rights)

        /// <summary>Метод возвращает панель управления заявками на конкурсы для Консоли управления.
        /// Javascript-файлы для метода находятся в файле adm_competitions.js</summary>
        /// <param name="rights">права, с которыми вызывается страница управления заявками.
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel(string rights, bool isArchive = false)
        {
            Panel panelWrapper = new Panel();

            if (rights == EnumsHelper.GetWritesValue(Writes.admin))
            {
                panelWrapper = ConsoleCompetitionPanel_admin(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorPhoto))
            {
                panelWrapper = ConsoleCompetitionPanel_editorPhoto(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorPhotoIzo))
            {
                panelWrapper = ConsoleCompetitionPanel_editorPhotoIzo(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorPhotoCompGraphic))
            {
                panelWrapper = ConsoleCompetitionPanel_editorPhotoCompGraphic(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorDPI1))
            {
                panelWrapper = ConsoleCompetitionPanel_editorDPI1(isArchive);
            }
            //else if (rights == EnumsHelper.GetWritesValue(Writes.editorDPI2))
            //{
            //    panelWrapper = ConsoleCompetitionPanel_editorDPI2(isArchive);
            //}
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreHudSlovo))
            {
                panelWrapper = ConsoleCompetitionPanel_editorTheatreHudSlovo(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreInstrumZanr))
            {
                panelWrapper = ConsoleCompetitionPanel_editorTheatreInstrumZanr(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreVokal))
            {
                panelWrapper = ConsoleCompetitionPanel_editorTheatreVokal(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatre))
            {
                panelWrapper = ConsoleCompetitionPanel_editorTheatre(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreHoreo))
            {
                panelWrapper = ConsoleCompetitionPanel_editorTheatreHoreo(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreModa))
            {
                panelWrapper = ConsoleCompetitionPanel_editorTheatreModa(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorLiterary))
            {
                panelWrapper = ConsoleCompetitionPanel_editorLiterary(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKultura))
            {
                panelWrapper = ConsoleCompetitionPanel_editorKultura(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorSport))
            {
                panelWrapper = ConsoleCompetitionPanel_editorSport(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorThekvo))
            {
                panelWrapper = ConsoleCompetitionPanel_editorThekvo(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorBoks))
            {
                panelWrapper = ConsoleCompetitionPanel_editorBoks(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKungfu))
            {
                panelWrapper = ConsoleCompetitionPanel_editorKungfu(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorFootball))
            {
                panelWrapper = ConsoleCompetitionPanel_editorFootball(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorBasketball))
            {
                panelWrapper = ConsoleCompetitionPanel_editorBasketball(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorVolleyball))
            {
                panelWrapper = ConsoleCompetitionPanel_editorVolleyball(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorPaintball))
            {
                panelWrapper = ConsoleCompetitionPanel_editorPaintball(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorShahmaty))
            {
                panelWrapper = ConsoleCompetitionPanel_editorShahmaty(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorShashky))
            {
                panelWrapper = ConsoleCompetitionPanel_editorShashky(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorToponim))
            {
                panelWrapper = ConsoleCompetitionPanel_editorToponim(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorRobotech))
            {
                panelWrapper = ConsoleCompetitionPanel_editorRobotech(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorVmesteSila))
            {
                panelWrapper = ConsoleCompetitionPanel_editorVmesteSila(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorClothes))
            {
                panelWrapper = ConsoleCompetitionPanel_editorClothes(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorMultimedia))
            {
                panelWrapper = ConsoleCompetitionPanel_editorMultimedia(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKorablik))
            {
                panelWrapper = ConsoleCompetitionPanel_editorKorablik(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKorablikVokal))
            {
                panelWrapper = ConsoleCompetitionPanel_editorKorablikVokal(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKorablikHoreo))
            {
                panelWrapper = ConsoleCompetitionPanel_editorKorablikHoreo(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorCrimroute))
            {
                panelWrapper = ConsoleCompetitionPanel_editorCrimroute(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorMathbattle))
            {
                panelWrapper = ConsoleCompetitionPanel_editorMathbattle(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKosmos))
            {
                panelWrapper = ConsoleCompetitionPanel_editorKosmos(isArchive);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorScience))
            {
                panelWrapper = ConsoleCompetitionPanel_editorScience(isArchive);
            }
            return panelWrapper;
        }

        #endregion

        #region Метод ConsoleCompetitionPanel_admin()

        /// <summary>Метод возвращает панель управления заявками на конкурсы для Консоли управления.
        /// Javascript-файлы для метода находятся в файле adm_competitions.js</summary>
        /// <param name="rigths">права, с которыми вызывается страница управления заявками.
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_admin(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            string competition = "";
            string subname = "";

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, new string[] { subname }, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, new string[] { subname }, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, new string[] { subname }, isArchive);

            #endregion

            if (!isArchive)
            {
                #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 15; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);
                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "Скачать таблицу МЭШ"; lBtn.ToolTip = "Получение таблицы данных по конкурсам в формате Excel МЭШ";
                lBtn.CommandArgument = EnumsHelper.GetWritesValue(Writes.admin);
                lBtn.Command += (lBtnGetCsvTblMesh_Command_Common);
                panelWrapper.Controls.Add(lBtn);

                #endregion

                //#region Кнопка очистки ненужных файлов

                //lbl = new Label(); lbl.CssClass = "lblFormPre";
                //lbl.Text = "";
                //for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                //panelWrapper.Controls.Add(lbl);

                //lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                //lBtn.Text = " Удалить лишние файлы работ"; lBtn.ToolTip = "Удаляются все файлы работ, которые не относятся к существующим в базе данных заявкам. Такие файла могут оставаться не удалёнными по разным причинам и занимать пространство на диске.";
                //lBtn.OnClientClick = "if(confirm('Все файлы работ, которые не относятся к существующим в базе данных заявкам, будут удалены. Удалить?')) { waiting('Идёт удаление. Подождите...', 100); } else { return false; }";
                //lBtn.Command += (lBtnFilesClean_Command_admin);
                //panelWrapper.Controls.Add(lBtn);

                //#endregion

                #region Кнопка вкл./выкл. таблиц с кнопками скачивания сертификатов и дипломов

                /*ConfigFile cfg = new ConfigFile();

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение таблиц с кнопками скачивания сертификатов и дипломов.";
                string check = cfg.GetParam(Constants.ConfParamResultDocsOnOff);
                if (check == "-1")
                {
                    cfg.AddParam(Constants.ConfParamResultDocsOnOff, "1");
                    check = "1";
                }
                lBtn.Command += new CommandEventHandler(lBtnResultDocsOnOff_Command_admin);
                if (check == "0")
                {
                    lBtn.Text = "Вкл. результаты";
                }
                else if (check == "1")
                {
                    lBtn.Text = "Выкл. результаты";
                }
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);*/

                #endregion

                #region Кнопка архивации заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec"; lBtn.Attributes.Add("style", "margin: 10px 0 0 0;");
                lBtn.Text = "АРХИВИРОВАТЬ ВСЕ ЗАЯВКИ";
                lBtn.ToolTip = "Перенос всех текущих заявок Конкурсов и их файлов в архив";
                lBtn.Command += new CommandEventHandler(lBtnToArchive_Command_admin);
                lBtn.OnClientClick = "if(confirm('Все заявки Конкурсов и их файлы будут перемещены в архив. Продолжить?')) {waiting('Идёт архивация заявок. Это может занять несколько минут. Подождите..', 0); return true;} else {return false;};";
                panelWrapper.Controls.Add(lBtn);

                #endregion

                #region Вывод размера файла БД и размера папок с файлами к конкурсам

                panelWrapper.Controls.Add(new LiteralControl("<div><br />"));

                /*lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 1; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);*/

                lbl = new Label(); lbl.CssClass = "lblFormPre"; lbl.Text = "Размер БД: "; panelWrapper.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblFormPre"; lbl.Text = new CompetitionsWork().GetDbSize().ToString(); lbl.Font.Bold = true; lbl.ForeColor = Color.FromArgb(40, 85, 191); panelWrapper.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblFormPre"; lbl.Text = " Kb"; panelWrapper.Controls.Add(lbl);

                lbl = new Label(); lbl.CssClass = "lblFormPre"; lbl.Text = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Размер папок с файлами: "; panelWrapper.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblFormPre"; lbl.Text = new CompetitionsWork().GetFoldersSize().ToString(); lbl.Font.Bold = true; lbl.ForeColor = Color.FromArgb(40, 85, 191); panelWrapper.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblFormPre"; lbl.Text = " Kb"; panelWrapper.Controls.Add(lbl);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("<div><br />"));
                RecreateSmallImages_Common(ref panelWrapper, _imgUrlPathFoto.Replace("~/", ""));
                panelWrapper.Controls.Add(new LiteralControl("</div>"));
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, subname).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, subname).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата подачи"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Конкурс"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Образовательное учреждение"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;
                string check;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; 
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy HH:mm"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Конкурс

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = EnumsHelper.GetCompetitionValueFromCode(oneStruct.CompetitionName);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 50)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 50) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Образовательное учреждение

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.EducationalOrganizationShort;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell(); //tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnFilesClean_Command_admin

        /// <summary>Событие нажатия на кнопку УДАЛИТЬ ЛИШНИЕ ФАЙЛЫ РАБОТ</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void lBtnFilesClean_Command_admin(object sender, CommandEventArgs e)
        {
            bool checker = true;

            try
            {
                WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
                CompetitionsWork work = new CompetitionsWork();
                if (!work.DeleteUnnecessaryFiles())
                {
                    warning.ShowWarning("ОШИБКА во время удаления лишних файлов работ. Попробуйте повторить..", _pag.Master);
                    checker = false;
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
                checker = false;
            }

            if (checker)
            {
                _pag.Response.Redirect(_pag.Request.RawUrl);
            }
        }

        #endregion
        #region lBtnResultDocsOnOff_Command_admin

        /*/// <summary>Событие нажатия на кнопку вкл./выкл. вывода таблиц с кнопками скачивания сертификатов и дипломов на сайте</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. результаты' или 'Вык. результаты'</param>
        private void lBtnResultDocsOnOff_Command_admin(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;

            if (stage == "Вкл. результаты")
            {
                #region Включение результаты

                ConfigFile cfg = new ConfigFile();
                if (!cfg.AddParam(Constants.ConfParamResultDocsOnOff, "1"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние вывода результирующих документов.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результаты";
                }

                #endregion
            }
            else if (stage == "Выкл. результаты")
            {
                #region Выключение результаты

                ConfigFile cfg = new ConfigFile();
                if (!cfg.AddParam(Constants.ConfParamResultDocsOnOff, "0"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние вывода результирующих документов.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результаты";
                }

                #endregion
            }
        }*/

        #endregion
        #region lBtnToArchive_Command_admin

        /// <summary>Событие кнопки переноса всех текущих заявок Конкурсов и их файлов в архив</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void lBtnToArchive_Command_admin(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass();
            warning.HideWarning(_pag.Master);

            CompetitionsWork_Arch work = new CompetitionsWork_Arch();
            work.MoveRequestsToArchive();

            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion

        #region Метод ConsoleCompetitionPanelAdmin_like()

        /// <summary>Метод возвращает панель управления заявками на конкурсы для Консоли управления.
        /// Javascript-файлы для метода находятся в файле adm_competitions.js</summary>
        /// <param name="rigths">права, с которыми вызывается страница управления заявками.
        /// <returns></returns>
        public Panel ConsoleCompetitionPanelAdmin_like(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            string competition = "";
            string subname = "";

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, subname).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, subname).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата подачи"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Конкурс"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Образовательное учреждение"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;
                string check;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitiononeadmin" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='" + new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy HH:mm"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Конкурс

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = EnumsHelper.GetCompetitionValueFromCode(oneStruct.CompetitionName);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 50)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 50) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Образовательное учреждение

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.EducationalOrganizationShort;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell(); //tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #endregion

        #region Метод ConsoleCompetitionPanel_editorPhoto()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorPhoto(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorPhoto;
            string competition = EnumsHelper.GetPhotoCode(Photo.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);
            
            #endregion

            #region Поиск
            
            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetPhotoCode(Photo.photo)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorPhoto);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetPhotoCode(Photo.photo));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetPhotoCode(Photo.photo)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorPhoto);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetPhotoCode(Photo.photo)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorPhoto);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add(EnumsHelper.GetPhotoValue(Photo.photo));
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorPhoto);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
           
            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Баллы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Итог"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Проверено"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "";
                string tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "waiting('Страница загружается. Подождите...', 1000); location.assign('/adm/competitionone" + (isArchive ? "arch": "") + ".aspx?num=" + oneStruct.Id + "');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Баллы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Points.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Итог

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetPointsPhotoGraphicText(oneStruct); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Проверено администратором (служебное поле)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string checkedAdmin = oneStruct.CheckedAdmin.ToString();
                        tmp = "";
                        if (checkedAdmin == "0")            //если заявка не проверена администратором, то..
                        {
                            tmp = "btnOff js_checkedAdminOnOff";
                        }
                        else if (checkedAdmin == "1")   //если проверена администратором, то..
                        {
                            tmp = "btnOn js_checkedAdminOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Проверена или нет администратором консоли'" +
                                                                " id='btnCheckedAdminOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + checkedAdmin + "' ></span>"));

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События
       
        #region lBtnOpenReq_Command_editorPhoto

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorPhoto(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetPhotoCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetPhotoCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionfoto/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorPhoto

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorPhoto(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.photo) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.photo) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorPhoto

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorPhoto(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.photo) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.photo) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorPhoto

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorPhoto(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.photo) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.photo) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorPhoto

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorPhoto(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.photo) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.photo) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorPhotoIzo()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorPhotoIzo(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";
            
            var writes = Writes.editorPhotoIzo;
            string competition = EnumsHelper.GetPhotoCode(Photo.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetPhotoCode(Photo.izo)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorPhotoIzo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetPhotoCode(Photo.izo));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetPhotoCode(Photo.izo)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorPhotoIzo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetPhotoCode(Photo.izo)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorPhotoIzo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";
                
                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add(EnumsHelper.GetPhotoValue(Photo.izo));
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorPhotoIzo);
                panelWrapper.Controls.Add(lBtn);


                #region Выбор возрастной категории

                var ddlIzoAgeCategory = (int?)_pag.Session["ddlIzoAgeCategorySelectedIndex"];

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add("Все");
                ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.mladshaya));
                ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.srednaya));
                ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.starshaya));
                ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.molodezh));
                ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY));
                ddl.ID = "DropDown_AgeCategory";
                ddl.Width = 150;
                ddl.SelectedIndexChanged += new EventHandler(ddlIzoAgeCategory_SelectedIndexChanged);
                if (ddlIzoAgeCategory != null) ddl.SelectedIndex = ddlIzoAgeCategory.Value;
                ddl.AutoPostBack = true;
                panelWrapper.Controls.Add(ddl);

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            #region Все фильтры

            //по возрастной категории
            if (ddl.SelectedValue != "Все" && !isArchive)
            { 
                for (var i = 0; i < structList.Count; i++)
                {
                    if (ddl.SelectedValue != CompetitionsWork.GetAgeCategory((CompetitionRequest)structList[i]))
                    {
                        structList.RemoveAt(i);
                        i--;
                    }
                }
            }
            #endregion

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Баллы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Итог"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Проверено"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Баллы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Points.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Итог

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetPointsIzoText(oneStruct); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Проверено администратором (служебное поле)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string checkedAdmin = oneStruct.CheckedAdmin.ToString();
                        tmp = "";
                        if (checkedAdmin == "0")            //если заявка не проверена администратором, то..
                        {
                            tmp = "btnOff js_checkedAdminOnOff";
                        }
                        else if (checkedAdmin == "1")   //если проверена администратором, то..
                        {
                            tmp = "btnOn js_checkedAdminOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Проверена или нет администратором консоли'" +
                                                                " id='btnCheckedAdminOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + checkedAdmin + "' ></span>"));

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region ddlIzoAgeCategory_SelectedIndexChanged
        protected void ddlIzoAgeCategory_SelectedIndexChanged(object sender, EventArgs e)
        {
            var index = ((DropDownList)sender).SelectedIndex;
            _pag.Session["ddlIzoAgeCategorySelectedIndex"] = index;
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion
        #region lBtnOpenReq_Command_editorPhotoIzo

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorPhotoIzo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetPhotoCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetPhotoCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionfoto/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorPhotoIzo

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorPhotoIzo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.izo) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.izo) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorPhotoIzo

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorPhotoIzo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.izo) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.izo) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorPhotoIzo

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorPhotoIzo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.izo) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.izo) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorPhotoIzo

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorPhotoIzo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.izo) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetPhotoCode(Photo.izo) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorPhotoCompGraphic()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorPhotoCompGraphic(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorPhotoCompGraphic;
            string competition = EnumsHelper.GetPhotoCode(Photo.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "";
            for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
            panelWrapper.Controls.Add(lbl);

            lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
            ConfigFile cfg = new ConfigFile();
            if (cfg.IsReqGettingOn(EnumsHelper.GetPhotoCode(Photo.computerGraphic)))
            {
                lBtn.Text = "Выкл. заявки";
            }
            else
            {
                lBtn.Text = "Вкл. заявки";
            }
            lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorPhotoCompGraphic);
            lBtn.CommandArgument = lBtn.Text;
            panelWrapper.Controls.Add(lBtn);

            #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetPhotoCode(Photo.computerGraphic));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetPhotoCode(Photo.computerGraphic)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorPhotoCompGraphic);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetPhotoCode(Photo.computerGraphic)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorPhotoCompGraphic);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in CompetitonWorkCommon.subnames_editorPhotoCompGraphic())
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorPhotoCompGraphic);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Баллы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Итог"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Проверено"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";
                       
                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Баллы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Points.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Итог

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetPointsPhotoGraphicText(oneStruct); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Проверено администратором (служебное поле)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string checkedAdmin = oneStruct.CheckedAdmin.ToString();
                        tmp = "";
                        if (checkedAdmin == "0")            //если заявка не проверена администратором, то..
                        {
                            tmp = "btnOff js_checkedAdminOnOff";
                        }
                        else if (checkedAdmin == "1")   //если проверена администратором, то..
                        {
                            tmp = "btnOn js_checkedAdminOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Проверена или нет администратором консоли'" +
                                                                " id='btnCheckedAdminOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + checkedAdmin + "' ></span>"));

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorPhotoCompGraphic

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorPhotoCompGraphic(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetPhotoCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetPhotoCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionfoto/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorPhotoCompGraphic

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorPhotoCompGraphic(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorPhotoCompGraphic())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorPhotoCompGraphic())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorPhotoCompGraphic

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorPhotoCompGraphic(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorPhotoCompGraphic())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_results_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorPhotoCompGraphic())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_results_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorPhotoCompGraphic

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorPhotoCompGraphic(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorPhotoCompGraphic())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_voiting_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorPhotoCompGraphic())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_voiting_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorPhotoCompGraphic

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorPhotoCompGraphic(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorPhotoCompGraphic())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_voitbtns_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorPhotoCompGraphic())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_voitbtns_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorDPI1()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorDPI1(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorDPI1;
            string competition = EnumsHelper.GetPhotoCode(Photo.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetPhotoCode(Photo.DPT1_hud_vyazanie)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorDPI1);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetPhotoCode(Photo.DPT1));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetPhotoCode(Photo.DPT1_hud_vyazanie)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorDPI1);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetPhotoCode(Photo.DPT1_hud_vyazanie)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorDPI1);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorDPI1);
                panelWrapper.Controls.Add(lBtn);

                #region Выбор возрастной категории

                var ddlDpi1AgeCategory = (int?)_pag.Session["ddlDpi1AgeCategorySelectedIndex"];

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add("Все");
                ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.mladshaya));
                ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.srednaya));
                ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.starshaya));
                ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.molodezh));
                ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY));
                ddl.ID = "DropDown_AgeCategory";
                ddl.Width = 150;
                ddl.SelectedIndexChanged += new EventHandler(ddlDpi1AgeCategory_SelectedIndexChanged);
                if (ddlDpi1AgeCategory != null) ddl.SelectedIndex = ddlDpi1AgeCategory.Value;
                ddl.AutoPostBack = true;
                panelWrapper.Controls.Add(ddl);

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            #region Все фильтры

            //по возрастной категории
            if (ddl.SelectedValue != "" && ddl.SelectedValue != "Все")
            {
                for (var i = 0; i < structList.Count; i++)
                {
                    if (ddl.SelectedValue != CompetitionsWork.GetAgeCategory((CompetitionRequest)structList[i]))
                    {
                        structList.RemoveAt(i);
                        i--;
                    }
                }
            }
            #endregion

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Баллы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Итог"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Проверено"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Баллы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Points.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Итог

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetPointsDPIText(oneStruct); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Проверено администратором (служебное поле)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string checkedAdmin = oneStruct.CheckedAdmin.ToString();
                        tmp = "";
                        if (checkedAdmin == "0")            //если заявка не проверена администратором, то..
                        {
                            tmp = "btnOff js_checkedAdminOnOff";
                        }
                        else if (checkedAdmin == "1")   //если проверена администратором, то..
                        {
                            tmp = "btnOn js_checkedAdminOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Проверена или нет администратором консоли'" +
                                                                " id='btnCheckedAdminOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + checkedAdmin + "' ></span>"));

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region ddlDpi1AgeCategory_SelectedIndexChanged
        protected void ddlDpi1AgeCategory_SelectedIndexChanged(object sender, EventArgs e)
        {
            var index = ((DropDownList)sender).SelectedIndex;
            _pag.Session["ddlDpi1AgeCategorySelectedIndex"] = index;
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion
        #region lBtnOpenReq_Command_editorDPI1

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorDPI1(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetPhotoCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetPhotoCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionfoto/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorDPI1

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorDPI1(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorDPI1())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorDPI1())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorDPI1

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorDPI1(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorDPI1())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_results_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorDPI1())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_results_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorDPI1

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorDPI1(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorDPI1())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_voiting_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorDPI1())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_voiting_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorDPI1

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorDPI1(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorDPI1())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_voitbtns_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorDPI1())
                {
                    if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_voitbtns_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion

        //Объединение DPT1 и DPT2
        //#region Метод ConsoleCompetitionPanel_editorDPI2()

        ///// <summary>Метод возвращает панель управления заявками для номинации</summary>
        ///// <returns></returns>
        //public Panel ConsoleCompetitionPanel_editorDPI2(bool isArchive = false)
        //{
        //    int elemInOnePage = 50;

        //    Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
        //    LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

        //    string srchString = _pag.Session["srchStrCompet"].ToString();
        //    int pageNum = (int)HttpContext.Current.Session["pagenum"];
        //    string pageNumSuffix = "";

        ////   string rightsCode = EnumsHelper.GetWritesCode(Writes.editorDPI2);
        ////    string rightsVal = EnumsHelper.GetWritesValue(Writes.editorDPI2);

        //    CompetitionsWork work = new CompetitionsWork();
        //    string what = EnumsHelper.GetPhotoCode(Photo.self);

        //#region ЗАГЛАВИЕ

        //Content_Title_Cons_Common(ref panelWrapper, isArchive);

        //#endregion

        //#region Поиск

        //Content_Search_Cons_Common(ref panelWrapper);

        //#endregion

        //#region Кнопка скачивания Таблицы данных по конкурсу

        //Content_TableData_Cons_Common(ref panelWrapper, what, subname, isArchive);

        //#endregion

        //#region Кнопка скачивания Таблицы оценочных листов для Жюри

        //Content_Scores_Cons_Common(ref panelWrapper, what, subname, isArchive);

        //#endregion

        //#region Кнопка получения e-mail всех конкурсантов

        //Content_Email_Cons_Common(ref panelWrapper, what, subname, isArchive);

        //#endregion

        //#region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

        //Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(Writes.editorPhotoCompGraphic), isArchive);

        //#endregion

        //    panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

        //    #region Кнопка вкл./выкл. кнопки приема заявок

        //    lbl = new Label(); lbl.CssClass = "lblFormPre";
        //    lbl.Text = "";
        //    for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
        //    panelWrapper.Controls.Add(lbl);

        //    lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
        //    lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
        //    ConfigFile cfg = new ConfigFile();
        //    if (cfg.IsReqGettingOn(EnumsHelper.GetPhotoCode(Photo.DPT2_batik)))
        //    {
        //        lBtn.Text = "Выкл. заявки";
        //    }
        //    else
        //    {
        //        lBtn.Text = "Вкл. заявки";
        //    }
        //    lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorDPI2);
        //    lBtn.CommandArgument = lBtn.Text;
        //    panelWrapper.Controls.Add(lBtn);

        //    #endregion
        //    #region Кнопка вкл./выкл. отображения панели результатов

        //    lbl = new Label(); lbl.CssClass = "lblFormPre";
        //    lbl.Text = "";
        //    for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
        //    panelWrapper.Controls.Add(lbl);

        //    lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
        //    lBtn.ToolTip = "Включить или выключить отображение панели результатов (для всех курируемых вами номинаций).";
        //    if (cfg.IsResultPanelOn(EnumsHelper.GetPhotoCode(Photo.DPT2_batik)))
        //    {
        //        lBtn.Text = "Выкл. результатов";
        //    }
        //    else
        //    {
        //        lBtn.Text = "Вкл. результатов";
        //    }
        //    lBtn.Command += new CommandEventHandler(lBtnResultOnOff_Command_editorDPI2);
        //    lBtn.CommandArgument = lBtn.Text;
        //    panelWrapper.Controls.Add(lBtn);

        //    #endregion
        //    #region Кнопка вкл./выкл. отображения панели голосования

        //    lbl = new Label(); lbl.CssClass = "lblFormPre";
        //    lbl.Text = "";
        //    for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
        //    panelWrapper.Controls.Add(lbl);

        //    lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
        //    lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
        //    if (cfg.IsVoitingPanelOn(EnumsHelper.GetPhotoCode(Photo.DPT2_batik)))
        //    {
        //        lBtn.Text = "Выкл. работы";
        //    }
        //    else
        //    {
        //        lBtn.Text = "Вкл. работы";
        //    }
        //    lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorDPI2);
        //    lBtn.CommandArgument = lBtn.Text;
        //    panelWrapper.Controls.Add(lBtn);

        //    #endregion
        //    #region Кнопка вкл./выкл. отображения кнопок голосования

        //    lbl = new Label(); lbl.CssClass = "lblFormPre";
        //    lbl.Text = "";
        //    for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
        //    panelWrapper.Controls.Add(lbl);

        //    lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
        //    lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
        //    if (cfg.IsVoitingBtnsOn(EnumsHelper.GetPhotoCode(Photo.DPT2_batik)))
        //    {
        //        lBtn.Text = "Выкл. голосование";
        //    }
        //    else
        //    {
        //        lBtn.Text = "Вкл. голосование";
        //    }
        //    lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorDPI2);
        //    lBtn.CommandArgument = lBtn.Text;
        //    panelWrapper.Controls.Add(lBtn);

        //    #endregion

        //    panelWrapper.Controls.Add(new LiteralControl("</div>"));

        //    #region Кнопка добавления новой заявки по конкурсу

        //    panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

        //    #region Выбор номинаций для отправки заявки

        //    lbl = new Label(); lbl.CssClass = "lblFormPre";
        //    lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

        //    ddl = new DropDownList(); ddl.CssClass = "btnSpec";
        //    foreach (string item in subnames_editorDPI2)
        //    {
        //        ddl.Items.Add(item);
        //    }
        //    ddl.ID = "DropDown_Subsection";
        //    ddl.Width = 250; 
        //    panelWrapper.Controls.Add(ddl);

        //    #endregion

        //    lbl = new Label(); lbl.CssClass = "lblFormPre";
        //    lbl.Text = "";
        //    for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
        //    panelWrapper.Controls.Add(lbl);

        //    lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
        //    lBtn.Text = "+ Добавить заявку";
        //    lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
        //    lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorDPI2);
        //    panelWrapper.Controls.Add(lBtn);

        //    #region Выбор возрастной категории

        //    var ddlDpi2AgeCategory = (int?)_pag.Session["ddlDpi2AgeCategorySelectedIndex"];

        //    lbl = new Label(); lbl.CssClass = "lblFormPre";
        //    lbl.Text = "";
        //    for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
        //    panelWrapper.Controls.Add(lbl);

        //    ddl = new DropDownList(); ddl.CssClass = "btnSpec";
        //    ddl.Items.Add("Все");
        //    ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.mladshaya));
        //    ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.srednaya));
        //    ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.starshaya));
        //    ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.molodezh));
        //    ddl.Items.Add(EnumsHelper.GetAgeCategoriesValue(AgeCategories.VNEKATEGORY));
        //    ddl.ID = "DropDown_AgeCategory";
        //    ddl.Width = 150;
        //    ddl.SelectedIndexChanged += new EventHandler(ddlDpi2AgeCategory_SelectedIndexChanged);
        //    if (ddlDpi2AgeCategory != null) ddl.SelectedIndex = ddlDpi2AgeCategory.Value;
        //    ddl.AutoPostBack = true;
        //    panelWrapper.Controls.Add(ddl);

        //    #endregion

        //    panelWrapper.Controls.Add(new LiteralControl("</div>"));

        //    #endregion

        //    #region Таблица конкурсантов

        //    List<CompetitionRequest> structList = new List<CompetitionRequest>();
        //    List<CompetitionRequest> tmpList;
        //    foreach (string subname in subnames_editorDPI2)
        //    {
        //        tmpList = work.GetSortedListOfRequests(what, srchString, subname);
        //        if (tmpList != null)
        //        {
        //            structList.AddRange(tmpList);
        //        }
        //    }

        //    #region Все фильтры

        //    //по возрастной категории
        //    if (ddl.SelectedValue != "Все")
        //    {
        //        for (var i = 0; i < structList.Count; i++)
        //        {
        //            if (ddl.SelectedValue != CompetitionsWork.GetAgeCategory(structList[i]))
        //            {
        //                structList.RemoveAt(i);
        //                i--;
        //            }
        //        }
        //    }
        //    #endregion

        //    var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
        //    var tblRow = new TableRow(); var tblCell = new TableCell();

        //    if (structList.Count > 0)  //если список хоть что-то содержит, то..
        //    {
        //принудительная сортировка
        //structList = structList.OrderBy(x => x.Id* -1).ToList();

        //        //добавим на страницу кнопки-ссылки на страницы продуктов
        //        tblRow = new TableRow(); tbl.Controls.Add(tblRow);
        //        tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

        //        #region Кнопки-ссылки на страницы

        //        var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
        //        tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

        //        #endregion

        //        int pageCounter = 1;
        //        int prodCounter = 0;

        //        tblRow = new TableRow(); tbl.Controls.Add(tblRow);
        //        tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
        //        lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
        //        lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

        //        #region Кнопка удаления всех выделенных галочками строк в таблице

        //Content_DelButton_Cons_Common(ref tblCell, isArchive);

        //        #endregion

        //        #region Шапка таблицы

        //        var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

        //        var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

        //        var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
        //        tblCell1.Controls.Add(chkBox);
        //        tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
        //        tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
        //        tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
        //        tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
        //        tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
        //        tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
        //        tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
        //        tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
        //        tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Баллы"; tblCell1.Controls.Add(lbl);
        //        tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Итог"; tblCell1.Controls.Add(lbl);
        //        tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Проверено"; tblCell1.Controls.Add(lbl);
        //        tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
        //        lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);

        //        #endregion

        //        #region Таблица

        //        TableRow tblRow2; TableCell tblCell2; Label lbl2;
        //        DateTime dt;
        //        string location = "", tmp = "";
        //        int countofstr = 0;

        //        foreach (CompetitionRequest oneStruct in structList)
        //        {
        //            prodCounter++;
        //            countofstr++;
        //            if (prodCounter > elemInOnePage)
        //            {
        //                prodCounter = 1;
        //                pageCounter++;
        //            }

        //            if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
        //            {
        //                 #region Код добавления одной строки

        //tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
        //                dt = new DateTime(oneStruct.DateReg);
        //location = "waiting('Страница загружается. Подождите...', 1000); location.assign('/adm/competitionone" + (isArchive? "arch": "") + ".aspx?num=" + oneStruct.Id + "');";
        //                #region Чекбоксы

        //                tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
        //                chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
        //                tblCell2.Controls.Add(chkBox);
        //                _objIdsList.Add(oneStruct);

        //                #endregion
        //                #region Номер заявки

        //                tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
        //                tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
        //                lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; 
        //                lbl2.Text = (oneStruct.IsApply? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;'>&nbsp;" : "") + oneStruct.Id.ToString();
        //                tblCell2.Controls.Add(lbl2);

        //                #endregion
        //                #region Дата подачи заявки

        //                tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
        //                tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
        //                dt = new DateTime(oneStruct.DateReg);
        //                lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

        //                #endregion
        //                #region Номинация

        //                tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
        //                tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
        //                lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
        //                tblCell2.Controls.Add(lbl2);

        //                #endregion
        //                #region Возраст

        //                tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
        //                tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
        //                lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
        //                tblCell2.Controls.Add(lbl2);

        //                #endregion
        //                #region Название работы

        //                tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
        //                tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
        //                lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
        //                if (oneStruct.WorkName.Length > 37)
        //                {
        //                    lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
        //                    lbl2.ToolTip = oneStruct.WorkName;
        //                }
        //                else
        //                {
        //                    lbl2.Text = oneStruct.WorkName;
        //                }

        //                tblCell2.Controls.Add(lbl2);

        //                #endregion
        //                #region Организация

        //                tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
        //                tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
        //                lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
        //                if (oneStruct.EducationalOrganizationShort.Length > 37)
        //                {
        //                    lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
        //                    lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
        //                }
        //                else
        //                {
        //                    lbl2.Text = oneStruct.EducationalOrganizationShort;
        //                }

        //                tblCell2.Controls.Add(lbl2);

        //                #endregion
        //                #region Ссылки

        //                tblCell2 = new TableCell();
        //                tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

        //                var linkList = new CompetitionsWork().GetLinkList(oneStruct);
        //                foreach (var el in linkList)
        //                {
        //                    tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
        //                }
        //                #endregion
        //                #region Голоса (за)

        //                tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
        //                tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
        //                lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

        //                #endregion
        //                #region Баллы

        //                tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
        //                tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
        //                lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Points.ToString(); tblCell2.Controls.Add(lbl2);

        //                #endregion
        //                #region Итог

        //                tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
        //                tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
        //                lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetPointsText(oneStruct); tblCell2.Controls.Add(lbl2);

        //                #endregion
        //                #region Проверено администратором (служебное поле)

        //                tblCell2 = new TableCell();
        //                tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
        //                string checkedAdmin = oneStruct.CheckedAdmin.ToString();
        //                tmp = "";
        //                if (checkedAdmin == "0")            //если заявка не проверена администратором, то..
        //                {
        //                    tmp = "btnOff js_checkedAdminOnOff";
        //                }
        //                else if (checkedAdmin == "1")   //если проверена администратором, то..
        //                {
        //                    tmp = "btnOn js_checkedAdminOnOff";
        //                }

        //                tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Проверена или нет администратором консоли'" +
        //                                                        " id='btnCheckedAdminOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
        //                                                        "' data-checker='" + checkedAdmin + "' ></span>"));

        //                #endregion
        //                #region Публикация (Отображение в панели голосования и в таблице результатов)

        //                tblCell2 = new TableCell();
        //                tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
        //                string check = oneStruct.Approved ? "1" : "0";
        //                tmp = "";
        //                if (check == "0")            //если отзыв не опубликован, то..
        //                {
        //                    tmp = "btnOff js_publishOnOff";
        //                }
        //                else if (check == "1")   //если опубликован, то..
        //                {
        //                    tmp = "btnOn js_publishOnOff";
        //                }

        //                tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
        //                                                        " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
        //                                                        "' data-checker='" + check + "' ></span>"));

        //                #endregion

        //                #endregion
        //            }
        //            else if (pageCounter > pageNum)
        //            {
        //                break;
        //            }

        //        }

        //        #endregion

        //        #region Кнопки-ссылки на страницы

        //        tblRow = new TableRow(); tbl.Controls.Add(tblRow);
        //        tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
        //        tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

        //        #endregion

        //        #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

        //        StringBuilder js = new StringBuilder();
        //        js.Append("<script type='text/javascript'> ");

        //        js.Append("var $mainChkBox = $('#main_chkbox'); ");
        //        js.Append("$mainChkBox.change(function() { ");
        //        js.Append("if(this.checked) { ");
        //        js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
        //        js.Append("} else { ");
        //        js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
        //        js.Append("} ");
        //        js.Append("}); ");

        //        js.Append("$('.allChcked input').each(function() { ");
        //        js.Append("$(this).change(function() { ");
        //        js.Append("if(!this.checked) { ");
        //        js.Append("$mainChkBox.prop('checked', false); ");
        //        js.Append("} ");
        //        js.Append("}); ");
        //        js.Append("}); ");

        //        js.Append("</script>");

        //        _pag.Controls.Add(new LiteralControl(js.ToString()));

        //        #endregion
        //    }
        //    else
        //    {
        //        if (srchString == "")
        //        {
        //            #region Надпись об отсутствии заявок

        //            tblRow = new TableRow(); tbl.Controls.Add(tblRow);
        //            tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
        //            lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
        //            lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

        //            #endregion
        //        }
        //        else
        //        {
        //            #region Надпись об отсутствии результатов поиска

        //            tblRow = new TableRow(); tbl.Controls.Add(tblRow);
        //            tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
        //            lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
        //            lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

        //            #endregion
        //        }
        //    }

        //    #endregion

        //    return panelWrapper;
        //}

        //#region События

        //#region ddlDpi2AgeCategory_SelectedIndexChanged
        //protected void ddlDpi2AgeCategory_SelectedIndexChanged(object sender, EventArgs e)
        //{
        //    var index = ((DropDownList)sender).SelectedIndex;
        //    _pag.Session["ddlDpi2AgeCategorySelectedIndex"] = index;
        //    _pag.Response.Redirect(_pag.Request.RawUrl);
        //}
        //#endregion
        //#region lBtnSiteEventSrch_Command_editorDPI2

        ///// <summary>Событие нажатия на кнопку НАЙТИ</summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //protected void lBtnSiteEventSrch_Command_editorDPI2(object sender, CommandEventArgs e)
        //{
        //    try
        //    {
        //        TextBox txtBox = (TextBox)_pag.FindControl("ctl00$ContentPlaceHolder1$txtBoxSrchEvent");
        //        _pag.Session["srchStrCompet"] = txtBox.Text;
        //    }
        //    catch (Exception ex)
        //    {
        //        DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
        //    }
        //    _pag.Response.Redirect(_pag.Request.RawUrl);
        //}

        //#endregion

        //#region lBtnOpenReq_Command_editorDPI2

        ///// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void lBtnOpenReq_Command_editorDPI2(object sender, CommandEventArgs e)
        //{
        //    WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
        //    string subCode = "";

        //    try
        //    {
        //        DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
        //        subCode = EnumsHelper.GetPhotoCodeFromValue(ddl.SelectedValue);
        //if (subCode == "")
        //{
        //    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
        //    if (subCodes.ElementAtOrDefault(0) != null) {
        //        subCode = EnumsHelper.GetPhotoCodeFromValue(subCodes[0]);
        //    }
        //}
        //    }
        //    catch (Exception ex)
        //    {
        //        DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
        //    }

        //    if (subCode != "")
        //    {
        //        _pag.Response.Redirect("~/sections/project/competitionfoto/reg.aspx?subname=" + subCode + "&ra=yes");
        //    }
        //}

        //#endregion
        //#region lBtnRegsOnOff_Command_editorDPI2

        ///// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        ///// <param name="sender"></param>
        ///// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        //private void lBtnRegsOnOff_Command_editorDPI2(object sender, CommandEventArgs e)
        //{
        //    WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

        //    string stage = e.CommandArgument.ToString();
        //    LinkButton lBtn = (LinkButton)sender;
        //    ConfigFile cfg = new ConfigFile();

        //    if (stage == "Вкл. заявки")
        //    {
        //        #region Включение

        //        bool err = false;
        //        foreach (string subname in subnames_editorDPI2)
        //        {
        //            if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_onoff", "on"))
        //            {
        //                err = true;
        //            }
        //        }
        //        if (err)
        //        {
        //            warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
        //        }
        //        else
        //        {
        //            lBtn.Text = "Выкл. заявки";
        //        }

        //        #endregion
        //    }
        //    else if (stage == "Выкл. заявки")
        //    {
        //        #region Выключение

        //        bool err = false;
        //        foreach (string subname in subnames_editorDPI2)
        //        {
        //            if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_onoff", "off"))
        //            {
        //                err = true;
        //            }
        //        }
        //        if (err)
        //        {
        //            warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
        //        }
        //        else
        //        {
        //            lBtn.Text = "Вкл. заявки";
        //        }

        //        #endregion
        //    }
        //}

        //#endregion
        //#region lBtnResultOnOff_Command_editorDPI2

        ///// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        ///// <param name="sender"></param>
        ///// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        //private void lBtnResultOnOff_Command_editorDPI2(object sender, CommandEventArgs e)
        //{
        //    WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

        //    string stage = e.CommandArgument.ToString();
        //    LinkButton lBtn = (LinkButton)sender;
        //    ConfigFile cfg = new ConfigFile();

        //    if (stage == "Вкл. результатов")
        //    {
        //        #region Включение

        //        bool err = false;
        //        foreach (string subname in subnames_editorDPI2)
        //        {
        //            if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_results_onoff", "on"))
        //            {
        //                err = true;
        //            }
        //        }
        //        if (err)
        //        {
        //            warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
        //        }
        //        else
        //        {
        //            lBtn.Text = "Выкл. результатов";
        //        }

        //        #endregion
        //    }
        //    else if (stage == "Выкл. результатов")
        //    {
        //        #region Выключение

        //        bool err = false;
        //        foreach (string subname in subnames_editorDPI2)
        //        {
        //            if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_results_onoff", "off"))
        //            {
        //                err = true;
        //            }
        //        }
        //        if (err)
        //        {
        //            warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
        //        }
        //        else
        //        {
        //            lBtn.Text = "Вкл. результатов";
        //        }

        //        #endregion
        //    }
        //}

        //#endregion
        //#region lBtnVoitingOnOff_Command_editorDPI2

        ///// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        ///// <param name="sender"></param>
        ///// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        //private void lBtnVoitingOnOff_Command_editorDPI2(object sender, CommandEventArgs e)
        //{
        //    WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

        //    string stage = e.CommandArgument.ToString();
        //    LinkButton lBtn = (LinkButton)sender;
        //    ConfigFile cfg = new ConfigFile();

        //    if (stage == "Вкл. работы")
        //    {
        //        #region Включение

        //        bool err = false;
        //        foreach (string subname in subnames_editorDPI2)
        //        {
        //            if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_voiting_onoff", "on"))
        //            {
        //                err = true;
        //            }
        //        }
        //        if (err)
        //        {
        //            warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
        //        }
        //        else
        //        {
        //            lBtn.Text = "Выкл. работы";
        //        }

        //        #endregion
        //    }
        //    else if (stage == "Выкл. работы")
        //    {
        //        #region Выключение

        //        bool err = false;
        //        foreach (string subname in subnames_editorDPI2)
        //        {
        //            if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_voiting_onoff", "off"))
        //            {
        //                err = true;
        //            }
        //        }
        //        if (err)
        //        {
        //            warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
        //        }
        //        else
        //        {
        //            lBtn.Text = "Вкл. работы";
        //        }

        //        #endregion
        //    }
        //}

        //#endregion
        //#region lBtnVoitingBtnsOnOff_Command_editorDPI2

        ///// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        ///// <param name="sender"></param>
        ///// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        //private void lBtnVoitingBtnsOnOff_Command_editorDPI2(object sender, CommandEventArgs e)
        //{
        //    WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

        //    string stage = e.CommandArgument.ToString();
        //    LinkButton lBtn = (LinkButton)sender;
        //    ConfigFile cfg = new ConfigFile();

        //    if (stage == "Вкл. голосование")
        //    {
        //        #region Включение

        //        bool err = false;
        //        foreach (string subname in subnames_editorDPI2)
        //        {
        //            if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_voitbtns_onoff", "on"))
        //            {
        //                err = true;
        //            }
        //        }
        //        if (err)
        //        {
        //            warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
        //        }
        //        else
        //        {
        //            lBtn.Text = "Выкл. голосование";
        //        }

        //        #endregion
        //    }
        //    else if (stage == "Выкл. голосование")
        //    {
        //        #region Выключение

        //        bool err = false;
        //        foreach (string subname in subnames_editorDPI2)
        //        {
        //            if (!cfg.AddParam(EnumsHelper.GetPhotoCodeFromValue(subname) + "_voitbtns_onoff", "off"))
        //            {
        //                err = true;
        //            }
        //        }
        //        if (err)
        //        {
        //            warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
        //        }
        //        else
        //        {
        //            lBtn.Text = "Вкл. голосование";
        //        }

        //        #endregion
        //    }
        //}

        //#endregion


        //#endregion

        //#endregion

        #region Метод ConsoleCompetitionPanel_editorTheatreHudSlovo()

        /// <summary>Метод возвращает панель управления заявками на конкурсы для Консоли управления.
        /// Javascript-файлы для метода находятся в файле adm_competitions.js</summary>
        /// <param name="rigths">права, с которыми вызывается страница управления заявками.
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorTheatreHudSlovo(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl;

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorTheatreHudSlovo;
            string competition = EnumsHelper.GetTheatreCode(Theatre.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetTheatreCode(Theatre.hudSlovo)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorTheatreHudSlovo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetTheatreCode(Theatre.hudSlovo));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetTheatreCode(Theatre.hudSlovo)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorTheatreHudSlovo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetTheatreCode(Theatre.hudSlovo)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorTheatreHudSlovo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorTheatreHudSlovo);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата подачи"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Автор и название произведения"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Результат"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "", check = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";
                       
                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Автор и название произведения

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        //#region Голоса (за)

                        //tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        //tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        //lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        //#endregion
                        #region Результат

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetResultDocumentForParticipant((CompetitionRequest)oneStruct, true); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorTheatreHudSlovo

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorTheatreHudSlovo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetTheatreCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetTheatreCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitiontheatre/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorTheatreHudSlovo

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorTheatreHudSlovo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetTheatreCode(Theatre.hudSlovo) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetTheatreCode(Theatre.hudSlovo) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorTheatreHudSlovo

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorTheatreHudSlovo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetTheatreCode(Theatre.hudSlovo) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetTheatreCode(Theatre.hudSlovo) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorTheatreHudSlovo

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorTheatreHudSlovo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetTheatreCode(Theatre.hudSlovo) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetTheatreCode(Theatre.hudSlovo) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorTheatreHudSlovo

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorTheatreHudSlovo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetTheatreCode(Theatre.hudSlovo) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetTheatreCode(Theatre.hudSlovo) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorTheatreInstrumZanr()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorTheatreInstrumZanr(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorTheatreInstrumZanr;
            string competition = EnumsHelper.GetTheatreCode(Theatre.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));
            
            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetTheatreCode(Theatre.insrumZanrAnsambli)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorTheatreInstrumZanr);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                var resultssubnames = new List<string>();
                foreach (var sb in data.Value)
                {
                    resultssubnames.Add(EnumsHelper.GetTheatreCodeFromValue(sb));
                }
                Content_Results_Common(ref panelWrapper, EnumsHelper.GetTheatreCode(Theatre.insrumZanrAnsambli), string.Join(";", resultssubnames));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetTheatreCode(Theatre.insrumZanrAnsambli)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorTheatreInstrumZanr);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetTheatreCode(Theatre.insrumZanrAnsambli)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorTheatreInstrumZanr);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorTheatreInstrumZanr);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "ФИО"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название номера"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Результат"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";
                        
                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region ФИО

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = oneStruct.GetFiosStr("<br/>");
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название номера

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Результат

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetResultDocumentForParticipant((CompetitionRequest)oneStruct, true); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorTheatreInstrumZanr

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorTheatreInstrumZanr(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetTheatreCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetTheatreCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitiontheatre/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorTheatreInstrumZanr

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorTheatreInstrumZanr(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreInstrumZanr())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreInstrumZanr())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorTheatreInstrumZanr

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorTheatreInstrumZanr(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreInstrumZanr())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_results_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreInstrumZanr())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_results_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorTheatreInstrumZanr

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorTheatreInstrumZanr(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreInstrumZanr())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voiting_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreInstrumZanr())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voiting_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorTheatreInstrumZanr

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorTheatreInstrumZanr(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreInstrumZanr())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voitbtns_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreInstrumZanr())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voitbtns_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
  
        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorTheatreVokal()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorTheatreVokal(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorTheatreVokal;
            string competition = EnumsHelper.GetTheatreCode(Theatre.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetTheatreCode(Theatre.vokalAkademVokal)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorTheatreVokal);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                var resultssubnames = new List<string>();
                foreach (var sb in data.Value)
                {
                    resultssubnames.Add(EnumsHelper.GetTheatreCodeFromValue(sb));
                }
                Content_Results_Common(ref panelWrapper, EnumsHelper.GetTheatreCode(Theatre.vokalAkademVokal), string.Join(";", resultssubnames));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetTheatreCode(Theatre.vokalAkademVokal)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorTheatreVokal);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetTheatreCode(Theatre.vokalAkademVokal)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorTheatreVokal);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorTheatreVokal);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "ФИО"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название номера"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Результат"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region ФИО

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = oneStruct.GetFiosStr("<br/>");
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название номера

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Результат

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetResultDocumentForParticipant((CompetitionRequest)oneStruct, true); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorTheatreVokal

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorTheatreVokal(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetTheatreCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetTheatreCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitiontheatre/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorTheatreVokal

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorTheatreVokal(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreVokal())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreVokal())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorTheatreVokal

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorTheatreVokal(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreVokal())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_results_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreVokal())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_results_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorTheatreVokal

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorTheatreVokal(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreVokal())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voiting_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreVokal())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voiting_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorTheatreVokal

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorTheatreVokal(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreVokal())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voitbtns_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreVokal())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voitbtns_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
     
        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorTheatre()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorTheatre(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorTheatre;
            string competition = EnumsHelper.GetTheatreCode(Theatre.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetTheatreCode(Theatre.teatrIskusLitMuzKom)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorTheatre);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                var resultssubnames = new List<string>();
                foreach (var sb in data.Value)
                {
                    resultssubnames.Add(EnumsHelper.GetTheatreCodeFromValue(sb));
                }
                Content_Results_Common(ref panelWrapper, EnumsHelper.GetTheatreCode(Theatre.teatrIskusLitMuzKom), string.Join(";", resultssubnames));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetTheatreCode(Theatre.teatrIskusLitMuzKom)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorTheatre);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetTheatreCode(Theatre.teatrIskusLitMuzKom)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorTheatre);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));
            
            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorTheatre);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorTheatre

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorTheatre(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetTheatreCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetTheatreCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitiontheatre/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorTheatre

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorTheatre(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatre())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatre())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorTheatre

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorTheatre(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatre())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_results_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatre())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_results_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorTheatre

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorTheatre(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatre())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voiting_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatre())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voiting_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorTheatre

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorTheatre(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatre())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voitbtns_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatre())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voitbtns_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
   
        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorTheatreHoreo()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorTheatreHoreo(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorTheatreHoreo;
            string competition = EnumsHelper.GetTheatreCode(Theatre.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetTheatreCode(Theatre.xoreoBalniyTanets)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorTheatreHoreo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                var resultssubnames = new List<string>();
                foreach (var sb in data.Value)
                {
                    resultssubnames.Add(EnumsHelper.GetTheatreCodeFromValue(sb));
                }
                Content_Results_Common(ref panelWrapper, EnumsHelper.GetTheatreCode(Theatre.xoreoBalniyTanets), string.Join(";", resultssubnames));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetTheatreCode(Theatre.xoreoBalniyTanets)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorTheatreHoreo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetTheatreCode(Theatre.xoreoBalniyTanets)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorTheatreHoreo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorTheatreHoreo);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorTheatreHoreo

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorTheatreHoreo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetTheatreCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetTheatreCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitiontheatre/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorTheatreHoreo

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorTheatreHoreo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreHoreo())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreHoreo())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorTheatreHoreo

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorTheatreHoreo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreHoreo())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_results_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreHoreo())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_results_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorTheatreHoreo

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorTheatreHoreo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreHoreo())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voiting_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreHoreo())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voiting_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorTheatreHoreo

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorTheatreHoreo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreHoreo())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voitbtns_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreHoreo())
                {
                    if (!cfg.AddParam(EnumsHelper.GetTheatreCodeFromValue(subname) + "_voitbtns_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
   
        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorTheatreModa()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorTheatreModa(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorTheatreModa;
            string competition = EnumsHelper.GetClothesCode(Clothes.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetClothesCode(Clothes.tmavtorcollect)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorTheatreModa);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                var resultssubnames = new List<string>();
                foreach (var sb in data.Value)
                {
                    resultssubnames.Add(EnumsHelper.GetClothesCodeFromValue(sb));
                }
                Content_Results_Common(ref panelWrapper, EnumsHelper.GetClothesCode(Clothes.tmavtorcollect), string.Join(";", resultssubnames));

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorTheatreModa);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название коллекции"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название коллектива"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название коллекции

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название коллектива

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.ClubsName.Length > 37)
                        {
                            lbl2.Text = oneStruct.ClubsName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.ClubsName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.ClubsName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorTheatreModa

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorTheatreModa(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetClothesCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetClothesCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitiontheatre/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorTheatreModa

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorTheatreModa(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreModa())
                {
                    if (!cfg.AddParam(EnumsHelper.GetClothesCodeFromValue(subname) + "_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreModa())
                {
                    if (!cfg.AddParam(EnumsHelper.GetClothesCodeFromValue(subname) + "_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorTheatreModa

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorTheatreModa(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreModa())
                {
                    if (!cfg.AddParam(EnumsHelper.GetClothesCodeFromValue(subname) + "_results_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreModa())
                {
                    if (!cfg.AddParam(EnumsHelper.GetClothesCodeFromValue(subname) + "_results_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
 
        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorLiterary()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorLiterary(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorLiterary;
            string competition = EnumsHelper.GetLiteraryCode(Literary.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetLiteraryCode(Literary.esse)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorLiterary);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetLiteraryCode(Literary.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetLiteraryCode(Literary.esse)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorLiterary);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetLiteraryCode(Literary.esse)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorLiterary);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorLiterary);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "ФИО"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Результат"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region ФИО

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.GetFiosStr("<br/>");
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Результат

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetResultDocumentForParticipant((CompetitionRequest)oneStruct, true); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorLiterary

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorLiterary(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetLiteraryCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetLiteraryCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionliterary/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorLiterary

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorLiterary(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorLiterary())
                {
                    if (!cfg.AddParam(EnumsHelper.GetLiteraryCodeFromValue(subname) + "_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorLiterary())
                {
                    if (!cfg.AddParam(EnumsHelper.GetLiteraryCodeFromValue(subname) + "_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorLiterary

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorLiterary(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorLiterary())
                {
                    if (!cfg.AddParam(EnumsHelper.GetLiteraryCodeFromValue(subname) + "_results_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorLiterary())
                {
                    if (!cfg.AddParam(EnumsHelper.GetLiteraryCodeFromValue(subname) + "_results_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorLiterary

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorLiterary(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorLiterary())
                {
                    if (!cfg.AddParam(EnumsHelper.GetLiteraryCodeFromValue(subname) + "_voiting_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorLiterary())
                {
                    if (!cfg.AddParam(EnumsHelper.GetLiteraryCodeFromValue(subname) + "_voiting_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorLiterary

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorLiterary(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorLiterary())
                {
                    if (!cfg.AddParam(EnumsHelper.GetLiteraryCodeFromValue(subname) + "_voitbtns_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorLiterary())
                {
                    if (!cfg.AddParam(EnumsHelper.GetLiteraryCodeFromValue(subname) + "_voitbtns_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorKultura()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorKultura(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorKultura;
            string competition = EnumsHelper.GetKulturaCode(Kultura.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetKulturaCode(Kultura.self)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorKultura);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetKulturaCode(Kultura.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetKulturaCode(Kultura.self)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorKultura);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetKulturaCode(Kultura.self)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorKultura);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу
            
                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorKultura);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Результат"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Результат

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetResultDocumentForParticipant((CompetitionRequest)oneStruct, true); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;

        }

        #region События

        #region lBtnOpenReq_Command_editorKultura

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorKultura(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetKulturaCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetKulturaCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionkultura/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorKultura

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorKultura(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKulturaCode(Kultura.self) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKulturaCode(Kultura.self) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

        }

        #endregion
        #region lBtnResultOnOff_Command_editorKultura

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorKultura(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKulturaCode(Kultura.self) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKulturaCode(Kultura.self) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorKultura

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorKultura(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKulturaCode(Kultura.self) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKulturaCode(Kultura.self) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorKultura

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorKultura(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();


            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKulturaCode(Kultura.self) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKulturaCode(Kultura.self) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }

            _pag.Response.Redirect(_pag.Request.RawUrl);

        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorSport()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorSport(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorSport;
            string competition = EnumsHelper.GetSportCode(Sport.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetSportCode(Sport.prostEdinoborstva)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorSport);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetSportCode(Sport.prostEdinoborstva));

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add(EnumsHelper.GetSportValue(Sport.prostEdinoborstva));
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorSport);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Клуб"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Наименование спортивного клуба (кружка)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.ClubsName.Length > 37)
                        {
                            lbl2.Text = oneStruct.ClubsName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.ClubsName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.ClubsName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorSport

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorSport(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetSportCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetSportCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionsport/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorSport

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorSport(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.prostEdinoborstva) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.prostEdinoborstva) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorSport

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorSport(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.prostEdinoborstva) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.prostEdinoborstva) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
   
        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorBoks()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorBoks(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorBoks;
            string competition = EnumsHelper.GetSportCode(Sport.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetSportCode(Sport.boks)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorBoks);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetSportCode(Sport.boks));

                #endregion
            }
            
            panelWrapper.Controls.Add(new LiteralControl("</div>"));
            
            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add(EnumsHelper.GetSportValue(Sport.boks));
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorBoks);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Клуб"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Наименование спортивного клуба (кружка)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.ClubsName.Length > 37)
                        {
                            lbl2.Text = oneStruct.ClubsName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.ClubsName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.ClubsName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorBoks

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorBoks(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetSportCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetSportCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionsport/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorBoks

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorBoks(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.boks) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.boks) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorBoks

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorBoks(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.boks) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.boks) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorKungfu()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorKungfu(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorKungfu;
            string competition = EnumsHelper.GetSportCode(Sport.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetSportCode(Sport.kungfu)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorKungfu);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetSportCode(Sport.kungfu));

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add(EnumsHelper.GetSportValue(Sport.kungfu));
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorKungfu);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Клуб"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Наименование спортивного клуба (кружка)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.ClubsName.Length > 37)
                        {
                            lbl2.Text = oneStruct.ClubsName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.ClubsName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.ClubsName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorKungfu

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorKungfu(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetSportCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetSportCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionsport/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorKungfu

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorKungfu(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.kungfu) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.kungfu) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorKungfu

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorKungfu(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.kungfu) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.kungfu) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorThekvo()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorThekvo(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorThekvo;
            string competition = EnumsHelper.GetSportCode(Sport.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetSportCode(Sport.thekvo)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorThekvo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetSportCode(Sport.thekvo));

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add(EnumsHelper.GetSportValue(Sport.thekvo));
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorThekvo);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Клуб"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "ФИО Тренера"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Кол-во участников"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                string[] tmpArr;
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Наименование спортивного клуба

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = oneStruct.ClubsName;

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region ФИО Тренера

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = oneStruct.ChiefFio;

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Кол-во участников

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        tmpArr = oneStruct.Fios.Split(new[] { '|' });
                        if (oneStruct.Fios == "") tmpArr = new string[] { };
                        lbl2.Text = tmpArr.Length.ToString();

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в турнире на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorThekvo

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorThekvo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetSportCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetSportCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionsport/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorThekvo

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorThekvo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.thekvo) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.thekvo) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorThekvo

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorThekvo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.thekvo) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.thekvo) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
 
        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorFootball()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorFootball(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorFootball;
            string competition = EnumsHelper.GetSportCode(Sport.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetSportCode(Sport.football)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorFootball);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetSportCode(Sport.football));

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add(EnumsHelper.GetSportValue(Sport.football));
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorFootball);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Клуб"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Руководитель"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Наименование спортивного клуба (команды)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.ClubsName.Length > 37)
                        {
                            lbl2.Text = oneStruct.ClubsName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.ClubsName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.ClubsName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region ФИО руководителя

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.ChiefFio;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorFootball

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorFootball(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetSportCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetSportCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionsport/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorFootball

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorFootball(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.football) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.football) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorFootball

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorFootball(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.football) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.football) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorBasketball()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorBasketball(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorBasketball;
            string competition = EnumsHelper.GetSportCode(Sport.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetSportCode(Sport.basketball)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorBasketball);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetSportCode(Sport.basketball));

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add(EnumsHelper.GetSportValue(Sport.basketball));
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorBasketball);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Клуб"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Руководитель"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Наименование спортивного клуба (команды)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.ClubsName.Length > 37)
                        {
                            lbl2.Text = oneStruct.ClubsName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.ClubsName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.ClubsName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region ФИО руководителя

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.ChiefFio;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorBasketball

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorBasketball(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetSportCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetSportCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionsport/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorBasketball

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorBasketball(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.basketball) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.basketball) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorBasketball

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorBasketball(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.basketball) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.basketball) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorVolleyball()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorVolleyball(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorVolleyball;
            string competition = EnumsHelper.GetSportCode(Sport.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetSportCode(Sport.volleyball)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorVolleyball);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetSportCode(Sport.volleyball));

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add(EnumsHelper.GetSportValue(Sport.volleyball));
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorVolleyball);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Клуб"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Руководитель"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='" + new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Наименование спортивного клуба (команды)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.ClubsName.Length > 37)
                        {
                            lbl2.Text = oneStruct.ClubsName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.ClubsName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.ClubsName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region ФИО руководителя

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.ChiefFio;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorBasketball

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorVolleyball(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetSportCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetSportCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionsport/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorBasketball

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorVolleyball(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.volleyball) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.volleyball) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorBasketball

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorVolleyball(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.volleyball) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.volleyball) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
 
        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorPaintball()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorPaintball(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorPaintball;
            string competition = EnumsHelper.GetSportCode(Sport.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetSportCode(Sport.stendStrelba)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorPaintball);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetSportCode(Sport.stendStrelba));

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add(EnumsHelper.GetSportValue(Sport.stendStrelba));
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorPaintball);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Клуб"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; 
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Наименование спортивного клуба (кружка)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.ClubsName.Length > 37)
                        {
                            lbl2.Text = oneStruct.ClubsName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.ClubsName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.ClubsName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorPaintball

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorPaintball(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetSportCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetSportCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionsport/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorPaintball

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorPaintball(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.stendStrelba) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.stendStrelba) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorPaintball

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorPaintball(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.stendStrelba) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.stendStrelba) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
  
        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorShahmaty()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorShahmaty(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorShahmaty;
            string competition = EnumsHelper.GetSportCode(Sport.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetSportCode(Sport.shahmaty)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorShahmaty);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetSportCode(Sport.shahmaty));

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add(EnumsHelper.GetSportValue(Sport.shahmaty));
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorShahmaty);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Клуб"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Наименование спортивного клуба (кружка)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.ClubsName.Length > 37)
                        {
                            lbl2.Text = oneStruct.ClubsName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.ClubsName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.ClubsName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorShahmaty

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorShahmaty(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetSportCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetSportCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionsport/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorShahmaty

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorShahmaty(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.shahmaty) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.shahmaty) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorShahmaty

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorShahmaty(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.shahmaty) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.shahmaty) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorShashky()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorShashky(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorShashky;
            string competition = EnumsHelper.GetSportCode(Sport.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetSportCode(Sport.shashki)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorShashky);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetSportCode(Sport.shashki));

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                ddl.Items.Add(EnumsHelper.GetSportValue(Sport.shashki));
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorShashky);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Клуб"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Наименование спортивного клуба (кружка)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.ClubsName.Length > 37)
                        {
                            lbl2.Text = oneStruct.ClubsName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.ClubsName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.ClubsName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorShashky

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorShashky(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetSportCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetSportCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionsport/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorShashky

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorShashky(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.shashki) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.shashki) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorShashky

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorShashky(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.shashki) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetSportCode(Sport.shashki) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorToponim()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorToponim(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorToponim;
            string competition = EnumsHelper.GetToponimCode(Toponim.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetToponimCode(Toponim.toponimika)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorToponim);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetToponimCode(Toponim.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                /*lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetToponimCode(Toponim.toponimika)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorToponim);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);*/

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                /*lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetToponimCode(Toponim.toponimika)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorToponim);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);*/

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            #region Кнопка добавления новой заявки по конкурсу

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

            #region Выбор номинаций для отправки заявки

            lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

            ddl = new DropDownList(); ddl.CssClass = "btnSpec";
            foreach (string item in data.Value)
            {
                ddl.Items.Add(item);
            }
            ddl.ID = "DropDown_Subsection";
            ddl.Width = 250;
            panelWrapper.Controls.Add(ddl);

            #endregion

            lbl = new Label(); lbl.CssClass = "lblFormPre";
            lbl.Text = "";
            for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
            panelWrapper.Controls.Add(lbl);

            lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            lBtn.Text = "+ Добавить заявку";
            lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
            lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorToponim);
            panelWrapper.Controls.Add(lBtn);

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            #endregion

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                /*tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);*/
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        /*tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);*/

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсе на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorToponim

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorToponim(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetToponimCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetToponimCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitiontoponim/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorToponim

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorToponim(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorToponim())
                {
                    if (!cfg.AddParam(EnumsHelper.GetToponimCodeFromValue(subname) + "_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorToponim())
                {
                    if (!cfg.AddParam(EnumsHelper.GetToponimCodeFromValue(subname) + "_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorToponim

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorToponim(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorToponim())
                {
                    if (!cfg.AddParam(EnumsHelper.GetToponimCodeFromValue(subname) + "_results_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in CompetitonWorkCommon.subnames_editorToponim())
                {
                    if (!cfg.AddParam(EnumsHelper.GetToponimCodeFromValue(subname) + "_results_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorToponim

        /*/// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorToponim(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                bool err = false;
                foreach (string subname in subnames_editorToponim)
                {
                    if (!cfg.AddParam(EnumsHelper.GetToponimCodeFromValue(subname) + "_voiting_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in subnames_editorToponim)
                {
                    if (!cfg.AddParam(EnumsHelper.GetToponimCodeFromValue(subname) + "_voiting_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
         _pag.Response.Redirect(_pag.Request.RawUrl);
        }*/

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorToponim

        /*/// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorToponim(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                bool err = false;
                foreach (string subname in subnames_editorToponim)
                {
                    if (!cfg.AddParam(EnumsHelper.GetToponimCodeFromValue(subname) + "_voitbtns_onoff", "on"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                bool err = false;
                foreach (string subname in subnames_editorToponim)
                {
                    if (!cfg.AddParam(EnumsHelper.GetToponimCodeFromValue(subname) + "_voitbtns_onoff", "off"))
                    {
                        err = true;
                    }
                }
                if (err)
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
         _pag.Response.Redirect(_pag.Request.RawUrl);
        }*/

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorRobotech()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorRobotech(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorRobotech;
            string competition = EnumsHelper.GetRobotechCode(Robotech.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetRobotechCode(Robotech.self)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorRobotech);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetRobotechCode(Robotech.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetRobotechCode(Robotech.self)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorRobotech);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetRobotechCode(Robotech.self)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorRobotech);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorRobotech);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название команды"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название команды

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.ClubsName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorRobotech

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorRobotech(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetRobotechCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetRobotechCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionrobotech/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorRobotech

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorRobotech(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetRobotechCode(Robotech.self) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetRobotechCode(Robotech.self) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
            
            //if (stage == "Вкл. заявки")
            //{
            //    #region Включение
            //    bool err = false;
            //    foreach (string subname in subnames_editorRobotech)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetRobotechCodeFromValue(subname) + "_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. заявки";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. заявки")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorRobotech)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetRobotechCodeFromValue(subname) + "_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. заявки";
            //    }

            //    #endregion
            //}
        }

        #endregion
        #region lBtnResultOnOff_Command_editorRobotech

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorRobotech(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetRobotechCode(Robotech.self) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetRobotechCode(Robotech.self) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. результатов")
            //{
            //    #region Включение

            //    bool err = false;
            //    foreach (string subname in subnames_editorRobotech)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetRobotechCodeFromValue(subname) + "_results_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. результатов";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. результатов")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorRobotech)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetRobotechCodeFromValue(subname) + "_results_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. результатов";
            //    }

            //    #endregion
            //}
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorRobotech

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorRobotech(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetRobotechCode(Robotech.self) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetRobotechCode(Robotech.self) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. работы")
            //{
            //    #region Включение

            //    bool err = false;
            //    foreach (string subname in subnames_editorRobotech)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetRobotechCodeFromValue(subname) + "_voiting_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. работы";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. работы")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorRobotech)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetRobotechCodeFromValue(subname) + "_voiting_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. работы";
            //    }

            //    #endregion
            //}
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorRobotech

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorRobotech(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetRobotechCode(Robotech.self) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetRobotechCode(Robotech.self) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. голосование")
            //{
            //    #region Включение

            //    bool err = false;
            //    foreach (string subname in subnames_editorRobotech)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetRobotechCodeFromValue(subname) + "_voitbtns_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. голосование";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. голосование")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorRobotech)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetRobotechCodeFromValue(subname) + "_voitbtns_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. голосование";
            //    }

            //    #endregion
            //}
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorVmesteSila()

        /// <summary>Метод возвращает панель управления заявками на конкурсы для Консоли управления.
        /// Javascript-файлы для метода находятся в файле adm_competitions.js</summary>
        /// <param name="rigths">права, с которыми вызывается страница управления заявками.
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorVmesteSila(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl;

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorVmesteSila;
            string competition = EnumsHelper.GetVmesteSilaCode(VmesteSila.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorVmesteSila);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetVmesteSilaCode(VmesteSila.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorVmesteSila);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorVmesteSila);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                var ddlVmesteSilaIndex = (int?)_pag.Session["ddlVmesteSilaSelectedIndex"];

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";
                //panelWrapper.Controls.Add(lbl);

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.SelectedIndexChanged += new EventHandler(ddlVmesteSila_SelectedIndexChanged);
                if (ddlVmesteSilaIndex != null) ddl.SelectedIndex = ddlVmesteSilaIndex.Value;
                ddl.Width = 250;
                ddl.AutoPostBack = true;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorVmesteSila);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата подачи"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Город"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Автор и название произведения"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Педагоги"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Результат"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Проверено"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "", check = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Город

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.City;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Автор и название произведения

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        //if (oneStruct.EducationalOrganizationShort.Length > 37)
                        //{
                        //    lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                        //    lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        //}
                        //else
                        //{
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        //}

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Педагоги

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";

                        var list = new CompetitionsWork().GetChiefsFiosPositionList(oneStruct);
                        var chiefs = new StringBuilder();
                        foreach (var l in list) {
                            chiefs.AppendFormat("{0}<br />", CompetitionsWork.FioReduce(l.Name));
                        }
                        lbl2.Text = chiefs.ToString();

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Результат

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Result.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Проверено администратором (служебное поле)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string checkedAdmin = oneStruct.CheckedAdmin.ToString();
                        tmp = "";
                        if (checkedAdmin == "0")            //если заявка не проверена администратором, то..
                        {
                            tmp = "btnOff js_checkedAdminOnOff";
                        }
                        else if (checkedAdmin == "1")   //если проверена администратором, то..
                        {
                            tmp = "btnOn js_checkedAdminOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Проверена или нет администратором консоли'" +
                                                                " id='btnCheckedAdminOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + checkedAdmin + "' ></span>"));

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region ddlVmesteSila_SelectedIndexChanged
        protected void ddlVmesteSila_SelectedIndexChanged(object sender, EventArgs e)
        {
            var index = ((DropDownList)sender).SelectedIndex;
            _pag.Session["ddlVmesteSilaSelectedIndex"] = index;
            //_pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion
        #region lBtnOpenReq_Command_editorVmesteSila

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorVmesteSila(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetVmesteSilaCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null) 
                    {
                        subCode = EnumsHelper.GetVmesteSilaCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionVmesteSila/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorVmesteSila

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorVmesteSila(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorVmesteSila

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorVmesteSila(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorVmesteSila

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorVmesteSila(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorVmesteSila

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorVmesteSila(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorVmesteSilaMakeUp()

        /// <summary>Метод возвращает панель управления заявками на конкурсы для Консоли управления.
        /// Javascript-файлы для метода находятся в файле adm_competitions.js</summary>
        /// <param name="rigths">права, с которыми вызывается страница управления заявками.
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorVmesteSilaMakeUp(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl;

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorVmesteSilaMakeUp;
            string competition = EnumsHelper.GetVmesteSilaCode(VmesteSila.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorVmesteSilaMakeUp);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetVmesteSilaCode(VmesteSila.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorVmesteSilaMakeUp);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorVmesteSilaMakeUp);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                var ddlVmesteSilaIndex = (int?)_pag.Session["ddlVmesteSilaSelectedIndex"];

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.SelectedIndexChanged += new EventHandler(ddlVmesteSilaMakeUp_SelectedIndexChanged);
                if (ddlVmesteSilaIndex != null) ddl.SelectedIndex = ddlVmesteSilaIndex.Value;
                ddl.Width = 250;
                ddl.AutoPostBack = true;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorVmesteSilaMakeUp);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата подачи"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Город"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Автор и название произведения"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "", check = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='" + new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Город

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.City;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Автор и название произведения

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        //if (oneStruct.EducationalOrganizationShort.Length > 37)
                        //{
                        //    lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                        //    lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        //}
                        //else
                        //{
                        lbl2.Text = oneStruct.EducationalOrganizationShort;
                        //}

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region ddlVmesteSila_SelectedIndexChanged
        protected void ddlVmesteSilaMakeUp_SelectedIndexChanged(object sender, EventArgs e)
        {
            var index = ((DropDownList)sender).SelectedIndex;
            _pag.Session["ddlVmesteSilaSelectedIndex"] = index;
            //_pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion
        #region lBtnOpenReq_Command_editorVmesteSila

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorVmesteSilaMakeUp(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetVmesteSilaCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetVmesteSilaCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionVmesteSila/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorVmesteSila

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorVmesteSilaMakeUp(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorVmesteSila

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorVmesteSilaMakeUp(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorVmesteSila

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorVmesteSilaMakeUp(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorVmesteSila

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorVmesteSilaMakeUp(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorVmesteSilaShair()

        /// <summary>Метод возвращает панель управления заявками на конкурсы для Консоли управления.
        /// Javascript-файлы для метода находятся в файле adm_competitions.js</summary>
        /// <param name="rigths">права, с которыми вызывается страница управления заявками.
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorVmesteSilaShair(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl;

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorVmesteSila;
            string competition = EnumsHelper.GetVmesteSilaCode(VmesteSila.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorVmesteSilaShair);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetVmesteSilaCode(VmesteSila.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorVmesteSilaShair);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetVmesteSilaCode(VmesteSila.self)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorVmesteSilaShair);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                var ddlVmesteSilaIndex = (int?)_pag.Session["ddlVmesteSilaSelectedIndex"];

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.SelectedIndexChanged += new EventHandler(ddlVmesteSilaShair_SelectedIndexChanged);
                if (ddlVmesteSilaIndex != null) ddl.SelectedIndex = ddlVmesteSilaIndex.Value;
                ddl.Width = 250;
                ddl.AutoPostBack = true;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorVmesteSilaShair);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата подачи"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Город"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Автор и название произведения"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "", check = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='" + new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Город

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.City;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Автор и название произведения

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        //if (oneStruct.EducationalOrganizationShort.Length > 37)
                        //{
                        //    lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                        //    lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        //}
                        //else
                        //{
                        lbl2.Text = oneStruct.EducationalOrganizationShort;
                        //}

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region ddlVmesteSilaShair_SelectedIndexChanged
        protected void ddlVmesteSilaShair_SelectedIndexChanged(object sender, EventArgs e)
        {
            var index = ((DropDownList)sender).SelectedIndex;
            _pag.Session["ddlVmesteSilaSelectedIndex"] = index;
            //_pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion
        #region lBtnOpenReq_Command_editorVmesteSilaShair

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorVmesteSilaShair(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetVmesteSilaCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetVmesteSilaCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionVmesteSila/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorVmesteSilaShair

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorVmesteSilaShair(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorVmesteSilaShair

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorVmesteSilaShair(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorVmesteSilaShair

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorVmesteSilaShair(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorVmesteSilaShair

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorVmesteSilaShair(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetVmesteSilaCode(VmesteSila.self) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorClothes()

        /// <summary>Метод возвращает панель управления заявками на конкурсы для Консоли управления.
        /// Javascript-файлы для метода находятся в файле adm_competitions.js</summary>
        /// <param name="rigths">права, с которыми вызывается страница управления заявками.
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorClothes(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl;

            var ddlClothesIndex = (int?)_pag.Session["ClothesIndex"];

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorClothes;
            string competition = EnumsHelper.GetClothesCode(Clothes.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetClothesCode(Clothes.self)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorClothes);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetClothesCode(Clothes.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetClothesCode(Clothes.self)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorClothes);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetClothesCode(Clothes.self)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorClothes);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.SelectedIndexChanged += new EventHandler(ddlClothes_SelectedIndexChanged);
                if (ddlClothesIndex != null) ddl.SelectedIndex = ddlClothesIndex.Value;
                ddl.Width = 250;
                ddl.AutoPostBack = true;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorClothes);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "ФИО"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возрастная категория"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region ФИО

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = oneStruct.GetFiosStr("<br/>");
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возрастная категория

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название номера

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region ddlClothes_SelectedIndexChanged
        protected void ddlClothes_SelectedIndexChanged(object sender, EventArgs e)
        {
            var index = ((DropDownList)sender).SelectedIndex;
            _pag.Session["ClothesIndex"] = index;
            //_pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion

        #region lBtnOpenReq_Command_editorClothes

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorClothes(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetClothesCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetClothesCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionClothes/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorClothes

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorClothes(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetClothesCode(Clothes.self) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetClothesCode(Clothes.self) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorClothes

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorClothes(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetClothesCode(Clothes.self) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetClothesCode(Clothes.self) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorClothes

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorClothes(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetClothesCode(Clothes.self) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetClothesCode(Clothes.self) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorClothes

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorClothes(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetClothesCode(Clothes.self) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetClothesCode(Clothes.self) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorMultimedia()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorMultimedia(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorMultimedia;
            string competition = EnumsHelper.GetMultimediaCode(Multimedia.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetMultimediaCode(Multimedia.self)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorMultimedia);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetMultimediaCode(Multimedia.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetMultimediaCode(Multimedia.self)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorMultimedia);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetMultimediaCode(Multimedia.self)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorMultimedia);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorMultimedia);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                //tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                //lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название команды"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название проекта"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название команды

                        //tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        //tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        //lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.ClubsName;
                        //tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название проекта

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorMultimedia

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorMultimedia(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetMultimediaCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetMultimediaCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionMultimedia/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorMultimedia

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorMultimedia(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetMultimediaCode(Multimedia.self) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetMultimediaCode(Multimedia.self) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. заявки")
            //{
            //    #region Включение
            //    bool err = false;
            //    foreach (string subname in subnames_editorMultimedia)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMultimediaCodeFromValue(subname) + "_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. заявки";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. заявки")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorMultimedia)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMultimediaCodeFromValue(subname) + "_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. заявки";
            //    }

            //    #endregion
            //}
        }

        #endregion
        #region lBtnResultOnOff_Command_editorMultimedia

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorMultimedia(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetMultimediaCode(Multimedia.self) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetMultimediaCode(Multimedia.self) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. результатов")
            //{
            //    #region Включение

            //    bool err = false;
            //    foreach (string subname in subnames_editorMultimedia)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMultimediaCodeFromValue(subname) + "_results_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. результатов";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. результатов")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorMultimedia)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMultimediaCodeFromValue(subname) + "_results_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. результатов";
            //    }

            //    #endregion
            //}
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorMultimedia

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorMultimedia(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetMultimediaCode(Multimedia.self) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetMultimediaCode(Multimedia.self) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. работы")
            //{
            //    #region Включение

            //    bool err = false;
            //    foreach (string subname in subnames_editorMultimedia)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMultimediaCodeFromValue(subname) + "_voiting_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. работы";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. работы")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorMultimedia)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMultimediaCodeFromValue(subname) + "_voiting_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. работы";
            //    }

            //    #endregion
            //}
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorMultimedia

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorMultimedia(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetMultimediaCode(Multimedia.self) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetMultimediaCode(Multimedia.self) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. голосование")
            //{
            //    #region Включение

            //    bool err = false;
            //    foreach (string subname in subnames_editorMultimedia)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMultimediaCodeFromValue(subname) + "_voitbtns_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. голосование";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. голосование")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorMultimedia)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMultimediaCodeFromValue(subname) + "_voitbtns_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. голосование";
            //    }

            //    #endregion
            //}
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorKorablik()

        /// <summary>Метод возвращает панель управления заявками на конкурсы для Консоли управления.
        /// Javascript-файлы для метода находятся в файле adm_competitions.js</summary>
        /// <param name="rigths">права, с которыми вызывается страница управления заявками.
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorKorablik(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl;

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorKorablik;
            string competition = EnumsHelper.GetKorablikCode(Korablik.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetKorablikCode(Korablik.self)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorKorablik);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetKorablikCode(Korablik.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetKorablikCode(Korablik.self)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorKorablik);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetKorablikCode(Korablik.self)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorKorablik);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                var ddlKorablikIndex = (int?)_pag.Session["ddlKorablikSelectedIndex"];

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.SelectedIndexChanged += new EventHandler(ddlKorablik_SelectedIndexChanged);
                if (ddlKorablikIndex != null) ddl.SelectedIndex = ddlKorablikIndex.Value;
                ddl.Width = 250;
                ddl.AutoPostBack = true;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorKorablik);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата подачи"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Город"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраcтная категория"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Автор и название произведения"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Результат"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "", check = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Город

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.City;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возрастная категория

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Автор и название произведения

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Результат

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetResultDocumentForParticipant((CompetitionRequest)oneStruct, true); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region ddlKorablik_SelectedIndexChanged
        protected void ddlKorablik_SelectedIndexChanged(object sender, EventArgs e)
        {
            var index = ((DropDownList)sender).SelectedIndex;
            _pag.Session["ddlKorablikSelectedIndex"] = index;
            //_pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion
        #region lBtnOpenReq_Command_editorKorablik

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorKorablik(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetKorablikCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetKorablikCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionKorablik/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorKorablik

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorKorablik(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorKorablik

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorKorablik(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorKorablik

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorKorablik(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorKorablik

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorKorablik(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorKorablikVokal()

        /// <summary>Метод возвращает панель управления заявками на конкурсы для Консоли управления.
        /// Javascript-файлы для метода находятся в файле adm_competitions.js</summary>
        /// <param name="rigths">права, с которыми вызывается страница управления заявками.
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorKorablikVokal(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl;

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorKorablikVokal;
            string competition = EnumsHelper.GetKorablikCode(Korablik.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.vokal)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorKorablikVokal);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.vokal));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.vokal)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorKorablikVokal);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.vokal)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorKorablikVokal);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                var ddlKorablikIndex = (int?)_pag.Session["ddlKorablikSelectedIndex"];

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.SelectedIndexChanged += new EventHandler(ddlKorablikVokal_SelectedIndexChanged);
                if (ddlKorablikIndex != null) ddl.SelectedIndex = ddlKorablikIndex.Value;
                ddl.Width = 250;
                ddl.AutoPostBack = true;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorKorablikVokal);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата подачи"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Город"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраcтная категория"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Автор и название произведения"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Результат"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "", check = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='" + new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Город

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.City;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возрастная категория

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Автор и название произведения

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Результат

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetResultDocumentForParticipant((CompetitionRequest)oneStruct, true); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region ddlKorablikVokal_SelectedIndexChanged
        protected void ddlKorablikVokal_SelectedIndexChanged(object sender, EventArgs e)
        {
            var index = ((DropDownList)sender).SelectedIndex;
            _pag.Session["ddlKorablikSelectedIndex"] = index;
            //_pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion
        #region lBtnOpenReq_Command_editorKorablikVokal

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorKorablikVokal(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetKorablikCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetKorablikCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionKorablik/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorKorablikVokal

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorKorablikVokal(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.vokal) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.vokal) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorKorablikVokal

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorKorablikVokal(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.vokal) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.vokal) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorKorablikVokal

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorKorablikVokal(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.vokal) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.vokal) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorKorablikVokal

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorKorablikVokal(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.vokal) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.vokal) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorKorablikHoreo()

        /// <summary>Метод возвращает панель управления заявками на конкурсы для Консоли управления.
        /// Javascript-файлы для метода находятся в файле adm_competitions.js</summary>
        /// <param name="rigths">права, с которыми вызывается страница управления заявками.
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorKorablikHoreo(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl;

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorKorablikHoreo;
            string competition = EnumsHelper.GetKorablikCode(Korablik.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.horeographia)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorKorablikHoreo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.horeographia));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.horeographia)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorKorablikHoreo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.horeographia)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorKorablikHoreo);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                var ddlKorablikIndex = (int?)_pag.Session["ddlKorablikSelectedIndex"];

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.SelectedIndexChanged += new EventHandler(ddlKorablik_SelectedIndexChangedHoreo);
                if (ddlKorablikIndex != null) ddl.SelectedIndex = ddlKorablikIndex.Value;
                ddl.Width = 250;
                ddl.AutoPostBack = true;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorKorablikHoreo);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата подачи"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Город"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраcтная категория"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Автор и название произведения"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Результат"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "", check = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='" + new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Город

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.City;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возрастная категория

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Автор и название произведения

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Результат

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetResultDocumentForParticipant((CompetitionRequest)oneStruct, true); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region ddlKorablik_SelectedIndexChangedHoreo
        protected void ddlKorablik_SelectedIndexChangedHoreo(object sender, EventArgs e)
        {
            var index = ((DropDownList)sender).SelectedIndex;
            _pag.Session["ddlKorablikSelectedIndex"] = index;
            //_pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion
        #region lBtnOpenReq_Command_editorKorablikHoreo

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorKorablikHoreo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetKorablikCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetKorablikCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionKorablik/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorKorablikHoreo

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorKorablikHoreo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.horeographia) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.horeographia) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorKorablikHoreo

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorKorablikHoreo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.horeographia) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.horeographia) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorKorablikHoreo

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorKorablikHoreo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.horeographia) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.horeographia) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorKorablikHoreo

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorKorablikHoreo(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.horeographia) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKorablikCode(Korablik.self) + EnumsHelper.GetKorablikCode(Korablik.horeographia) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorCrimroute()

        /// <summary>Метод возвращает панель управления заявками на конкурсы для Консоли управления.
        /// Javascript-файлы для метода находятся в файле adm_competitions.js</summary>
        /// <param name="rigths">права, с которыми вызывается страница управления заявками.
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorCrimroute(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl;

            var ddlCrimrouteIndex = (int?)_pag.Session["CrimrouteIndex"];

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorCrimroute;
            string competition = EnumsHelper.GetCrimrouteCode(Crimroute.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetCrimrouteCode(Crimroute.self)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorCrimroute);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetCrimrouteCode(Crimroute.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetCrimrouteCode(Crimroute.self)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorCrimroute);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetCrimrouteCode(Crimroute.self)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorCrimroute);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.SelectedIndexChanged += new EventHandler(ddlCrimroute_SelectedIndexChanged);
                if (ddlCrimrouteIndex != null) ddl.SelectedIndex = ddlCrimrouteIndex.Value;
                ddl.Width = 250;
                ddl.AutoPostBack = true;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorCrimroute);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "ФИО"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возрастная категория"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region ФИО

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = oneStruct.GetFiosStr("<br/>");
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возрастная категория

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название номера

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region ddlCrimroute_SelectedIndexChanged
        protected void ddlCrimroute_SelectedIndexChanged(object sender, EventArgs e)
        {
            var index = ((DropDownList)sender).SelectedIndex;
            _pag.Session["CrimrouteIndex"] = index;
            //_pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion
        #region lBtnOpenReq_Command_editorCrimroute

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorCrimroute(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetCrimrouteCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetCrimrouteCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionCrimroute/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorCrimroute

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorCrimroute(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetCrimrouteCode(Crimroute.self) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetCrimrouteCode(Crimroute.self) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnResultOnOff_Command_editorCrimroute

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorCrimroute(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetCrimrouteCode(Crimroute.self) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetCrimrouteCode(Crimroute.self) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorCrimroute

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorCrimroute(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetCrimrouteCode(Crimroute.self) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetCrimrouteCode(Crimroute.self) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorCrimroute

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorCrimroute(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetCrimrouteCode(Crimroute.self) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetCrimrouteCode(Crimroute.self) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorMathbattle()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorMathbattle(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorMathbattle;
            string competition = EnumsHelper.GetMathbattleCode(Mathbattle.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetMathbattleCode(Mathbattle.self)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorMathbattle);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetMathbattleCode(Mathbattle.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                //lbl = new Label(); lbl.CssClass = "lblFormPre";
                //lbl.Text = "";
                //for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                //panelWrapper.Controls.Add(lbl);

                //lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                //lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                //if (cfg.IsVoitingPanelOn(EnumsHelper.GetMathbattleCode(Mathbattle.self)))
                //{
                //    lBtn.Text = "Выкл. работы";
                //}
                //else
                //{
                //    lBtn.Text = "Вкл. работы";
                //}
                //lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorMathbattle);
                //lBtn.CommandArgument = lBtn.Text;
                //panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                //lbl = new Label(); lbl.CssClass = "lblFormPre";
                //lbl.Text = "";
                //for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                //panelWrapper.Controls.Add(lbl);

                //lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                //lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                //if (cfg.IsVoitingBtnsOn(EnumsHelper.GetMathbattleCode(Mathbattle.self)))
                //{
                //    lBtn.Text = "Выкл. голосование";
                //}
                //else
                //{
                //    lBtn.Text = "Вкл. голосование";
                //}
                //lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorMathbattle);
                //lBtn.CommandArgument = lBtn.Text;
                //panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorMathbattle);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название команды"; tblCell1.Controls.Add(lbl);
                //tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                //lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название команды

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.ClubsName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        //tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        //tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        //lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        //if (oneStruct.WorkName.Length > 37)
                        //{
                        //    lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                        //    lbl2.ToolTip = oneStruct.WorkName;
                        //}
                        //else
                        //{
                        //    lbl2.Text = oneStruct.WorkName;
                        //}

                        //tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorMathbattle

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorMathbattle(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetMathbattleCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetMathbattleCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionMathbattle/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorMathbattle

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorMathbattle(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetMathbattleCode(Mathbattle.self) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetMathbattleCode(Mathbattle.self) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. заявки")
            //{
            //    #region Включение
            //    bool err = false;
            //    foreach (string subname in subnames_editorMathbattle)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMathbattleCodeFromValue(subname) + "_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. заявки";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. заявки")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorMathbattle)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMathbattleCodeFromValue(subname) + "_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. заявки";
            //    }

            //    #endregion
            //}
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorMathbattle

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorMathbattle(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetMathbattleCode(Mathbattle.self) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetMathbattleCode(Mathbattle.self) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. работы")
            //{
            //    #region Включение

            //    bool err = false;
            //    foreach (string subname in subnames_editorMathbattle)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMathbattleCodeFromValue(subname) + "_voiting_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. работы";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. работы")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorMathbattle)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMathbattleCodeFromValue(subname) + "_voiting_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. работы";
            //    }

            //    #endregion
            //}
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorMathbattle

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorMathbattle(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetMathbattleCode(Mathbattle.self) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetMathbattleCode(Mathbattle.self) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. голосование")
            //{
            //    #region Включение

            //    bool err = false;
            //    foreach (string subname in subnames_editorMathbattle)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMathbattleCodeFromValue(subname) + "_voitbtns_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. голосование";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. голосование")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorMathbattle)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetMathbattleCodeFromValue(subname) + "_voitbtns_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. голосование";
            //    }

            //    #endregion
            //}
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorKosmos()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorKosmos(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorKosmos;
            string competition = EnumsHelper.GetKosmosCode(Kosmos.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetKosmosCode(Kosmos.self)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorKosmos);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetKosmosCode(Kosmos.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                //lbl = new Label(); lbl.CssClass = "lblFormPre";
                //lbl.Text = "";
                //for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                //panelWrapper.Controls.Add(lbl);

                //lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                //lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                //if (cfg.IsVoitingPanelOn(EnumsHelper.GetKosmosCode(Kosmos.self)))
                //{
                //    lBtn.Text = "Выкл. работы";
                //}
                //else
                //{
                //    lBtn.Text = "Вкл. работы";
                //}
                //lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorKosmos);
                //lBtn.CommandArgument = lBtn.Text;
                //panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                //lbl = new Label(); lbl.CssClass = "lblFormPre";
                //lbl.Text = "";
                //for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                //panelWrapper.Controls.Add(lbl);

                //lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                //lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                //if (cfg.IsVoitingBtnsOn(EnumsHelper.GetKosmosCode(Kosmos.self)))
                //{
                //    lBtn.Text = "Выкл. голосование";
                //}
                //else
                //{
                //    lBtn.Text = "Вкл. голосование";
                //}
                //lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorKosmos);
                //lBtn.CommandArgument = lBtn.Text;
                //panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorKosmos);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов


            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Возраст"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название команды"; tblCell1.Controls.Add(lbl);
                //tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                //lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='"+ new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Возраст

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = CompetitionsWork.GetAgeCategory(oneStruct);
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название команды

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.ClubsName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        //tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        //tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        //lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        //if (oneStruct.WorkName.Length > 37)
                        //{
                        //    lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                        //    lbl2.ToolTip = oneStruct.WorkName;
                        //}
                        //else
                        //{
                        //    lbl2.Text = oneStruct.WorkName;
                        //}
                        //
                        //tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;
        }

        #region События

        #region lBtnOpenReq_Command_editorKosmos

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorKosmos(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetKosmosCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetKosmosCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionKosmos/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorKosmos

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorKosmos(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKosmosCode(Kosmos.self) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKosmosCode(Kosmos.self) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. заявки")
            //{
            //    #region Включение
            //    bool err = false;
            //    foreach (string subname in subnames_editorKosmos)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetKosmosCodeFromValue(subname) + "_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. заявки";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. заявки")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorKosmos)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetKosmosCodeFromValue(subname) + "_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. заявки";
            //    }

            //    #endregion
            //}
        }

        #endregion
        #region lBtnResultOnOff_Command_editorKosmos

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorKosmos(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKosmosCode(Kosmos.self) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKosmosCode(Kosmos.self) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. результатов")
            //{
            //    #region Включение

            //    bool err = false;
            //    foreach (string subname in subnames_editorKosmos)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetKosmosCodeFromValue(subname) + "_results_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. результатов";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. результатов")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorKosmos)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetKosmosCodeFromValue(subname) + "_results_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. результатов";
            //    }

            //    #endregion
            //}
        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorKosmos

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorKosmos(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKosmosCode(Kosmos.self) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKosmosCode(Kosmos.self) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. работы")
            //{
            //    #region Включение

            //    bool err = false;
            //    foreach (string subname in subnames_editorKosmos)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetKosmosCodeFromValue(subname) + "_voiting_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. работы";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. работы")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorKosmos)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetKosmosCodeFromValue(subname) + "_voiting_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. работы";
            //    }

            //    #endregion
            //}
        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorKosmos

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorKosmos(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetKosmosCode(Kosmos.self) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetKosmosCode(Kosmos.self) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

            //if (stage == "Вкл. голосование")
            //{
            //    #region Включение

            //    bool err = false;
            //    foreach (string subname in subnames_editorKosmos)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetKosmosCodeFromValue(subname) + "_voitbtns_onoff", "on"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Выкл. голосование";
            //    }

            //    #endregion
            //}
            //else if (stage == "Выкл. голосование")
            //{
            //    #region Выключение

            //    bool err = false;
            //    foreach (string subname in subnames_editorKosmos)
            //    {
            //        if (!cfg.AddParam(EnumsHelper.GetKosmosCodeFromValue(subname) + "_voitbtns_onoff", "off"))
            //        {
            //            err = true;
            //        }
            //    }
            //    if (err)
            //    {
            //        warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
            //    }
            //    else
            //    {
            //        lBtn.Text = "Вкл. голосование";
            //    }

            //    #endregion
            //}
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionPanel_editorScience()

        /// <summary>Метод возвращает панель управления заявками для номинации</summary>
        /// <returns></returns>
        public Panel ConsoleCompetitionPanel_editorScience(bool isArchive = false)
        {
            int elemInOnePage = 50;

            Panel panelWrapper = new Panel(); Label lbl = new Label(); Image img = new Image(); TextBox txtBox = new TextBox();
            LinkButton lBtn = new LinkButton(); DropDownList ddl = new DropDownList();

            int pageNum = (int)HttpContext.Current.Session["pagenum"];
            string pageNumSuffix = "";

            var writes = Writes.editorScience;
            string competition = EnumsHelper.GetScienceCode(Science.self);
            var data = new CompetitionsWork().GetCompetitionSubsectionByWrites(writes, isArchive);

            #region ЗАГЛАВИЕ

            Content_Title_Cons_Common(ref panelWrapper, isArchive);

            #endregion

            #region Поиск

            Content_Search_Cons_Common(ref panelWrapper);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсу

            Content_TableData_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы оценочных листов для Жюри

            Content_Scores_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка получения e-mail всех конкурсантов

            Content_Email_Cons_Common(ref panelWrapper, competition, data.Value, isArchive);

            #endregion

            #region Кнопка скачивания Таблицы данных по конкурсам для МЭШ

            Content_Mesh_Cons_Common(ref panelWrapper, EnumsHelper.GetWritesValue(writes), isArchive);

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 272px;'>"));

            if (!isArchive)
            {
                #region Кнопка вкл./выкл. кнопки приема заявок

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок приема заявок (для всех курируемых вами номинаций).";
                ConfigFile cfg = new ConfigFile();
                if (cfg.IsReqGettingOn(EnumsHelper.GetScienceCode(Science.self)))
                {
                    lBtn.Text = "Выкл. заявки";
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }
                lBtn.Command += new CommandEventHandler(lBtnRegsOnOff_Command_editorScience);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопки вкл./выкл. отображения панели результатов

                Content_Results_Common(ref panelWrapper, EnumsHelper.GetScienceCode(Science.self));

                #endregion
                #region Кнопка вкл./выкл. отображения панели голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение панели голосования и отображения работ (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingPanelOn(EnumsHelper.GetScienceCode(Science.self)))
                {
                    lBtn.Text = "Выкл. работы";
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingOnOff_Command_editorScience);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
                #region Кнопка вкл./выкл. отображения кнопок голосования

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 5; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.ToolTip = "Включить или выключить отображение кнопок голосования на панелях с работами (для всех курируемых вами номинаций).";
                if (cfg.IsVoitingBtnsOn(EnumsHelper.GetScienceCode(Science.self)))
                {
                    lBtn.Text = "Выкл. голосование";
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }
                lBtn.Command += new CommandEventHandler(lBtnVoitingBtnsOnOff_Command_editorScience);
                lBtn.CommandArgument = lBtn.Text;
                panelWrapper.Controls.Add(lBtn);

                #endregion
            }

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            if (!isArchive)
            {
                #region Кнопка добавления новой заявки по конкурсу

                panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 10px 0px 0px 0px;'>"));

                #region Выбор номинаций для отправки заявки

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "Выберите номинацию:&nbsp;&nbsp;";

                ddl = new DropDownList(); ddl.CssClass = "btnSpec";
                foreach (string item in data.Value)
                {
                    ddl.Items.Add(item);
                }
                ddl.ID = "DropDown_Subsection";
                ddl.Width = 250;
                panelWrapper.Controls.Add(ddl);

                #endregion

                lbl = new Label(); lbl.CssClass = "lblFormPre";
                lbl.Text = "";
                for (int i = 0; i < 2; i++) { lbl.Text += "&nbsp;"; }
                panelWrapper.Controls.Add(lbl);

                lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
                lBtn.Text = "+ Добавить заявку";
                lBtn.ToolTip = "Выберите номинацию из списка и нажмите на эту кнопку, чтобы создать новую заявку";
                lBtn.Command += new CommandEventHandler(lBtnOpenReq_Command_editorScience);
                panelWrapper.Controls.Add(lBtn);

                panelWrapper.Controls.Add(new LiteralControl("</div>"));

                #endregion
            }

            #region Таблица конкурсантов

            var structList = new List<object>();
            var srchString = _pag.Session["srchStrCompet"].ToString();

            if (!isArchive)
                structList = new CompetitionsWork().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();
            else
                structList = new CompetitionsWork_Arch().GetSortedListOfRequests(competition, srchString, data.Value).Cast<object>().ToList();

            var tbl = new Table(); tbl.CssClass = "tblMain"; panelWrapper.Controls.Add(tbl);
            var tblRow = new TableRow(); var tblCell = new TableCell();

            if (structList.Count > 0)  //если список хоть что-то содержит, то..
            {
                //принудительная сортировка
                structList = structList.OrderBy(x => ((CompetitionRequest)x).Id * -1).ToList();

                //добавим на страницу кнопки-ссылки на страницы продуктов
                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);

                #region Кнопки-ссылки на страницы

                var pageBtns = new PagePanelClass(structList.Count, elemInOnePage, pageNumSuffix);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("0"));

                #endregion

                int pageCounter = 1;
                int prodCounter = 0;

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                lbl = new Label(); lbl.CssClass = "lblPredislovie1"; lbl.Text = "Всего заявок: "; tblCell.Controls.Add(lbl);
                lbl = new Label(); lbl.CssClass = "lblPosleslovie"; lbl.Text = structList.Count.ToString(); tblCell.Controls.Add(lbl);

                #region Кнопка удаления всех выделенных галочками строк в таблице

                Content_DelButton_Cons_Common(ref tblCell, isArchive);

                #endregion

                #region Шапка таблицы

                var tbl1 = new Table(); tbl1.CssClass = "tblSub"; tblCell.Controls.Add(tbl1);

                var tblRow1 = new TableRow(); tbl1.Controls.Add(tblRow1);

                var tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                CheckBox chkBox = new CheckBox(); chkBox.ID = "main_chkbox";
                tblCell1.Controls.Add(chkBox);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "№ заявки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Дата"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Номинация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Название работы"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Организация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Ссылки"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Голоса(за)"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Публикация"; tblCell1.Controls.Add(lbl);
                tblCell1 = new TableCell(); tblCell1.CssClass = "tblSubCellHead tblSubCellHead1"; tblRow1.Controls.Add(tblCell1);
                lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Text = "Заметки куратора"; tblCell1.Controls.Add(lbl);

                #endregion

                #region Таблица

                TableRow tblRow2; TableCell tblCell2; Label lbl2;
                DateTime dt;
                string location = "", tmp = "";
                int countofstr = 0;

                foreach (CompetitionRequest oneStruct in structList)
                {
                    prodCounter++;
                    countofstr++;
                    if (prodCounter > elemInOnePage)
                    {
                        prodCounter = 1;
                        pageCounter++;
                    }

                    if (pageCounter == pageNum)           //если эта та самая страница продуктов, которую нужно вывести, то выводим её
                    {
                        #region Код добавления одной строки

                        tblRow2 = new TableRow(); tblRow2.CssClass = "tblRow_adm"; tbl1.Controls.Add(tblRow2);
                        dt = new DateTime(oneStruct.DateReg);
                        location = "window.open('/adm/competitionone" + (isArchive ? "arch" : "") + ".aspx?num=" + oneStruct.Id + "', '_blank');";

                        #region Чекбоксы

                        tblCell2 = new TableCell(); tblCell2.CssClass = "tblSubCell"; tblRow2.Controls.Add(tblCell2);
                        chkBox = new CheckBox(); chkBox.ID = "chkbox_" + oneStruct.Id; chkBox.CssClass = "allChcked";
                        tblCell2.Controls.Add(chkBox);
                        _objIdsList.Add(oneStruct);

                        #endregion
                        #region Номер заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        lbl2.Text = (oneStruct.IsApply ? "<img src='../../../images/galochka.png' style='position:relative;top:2px;width:16px;height:16px;' title='" + new DateTime(oneStruct.DateApply).ToString("dd.MM.yyyy HH:mm:ss") + "'>&nbsp;" : "") + oneStruct.Id.ToString();
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Дата подачи заявки

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        dt = new DateTime(oneStruct.DateReg);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = dt.ToString("dd.MM.yyyy"); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Номинация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.SubsectionName;
                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Название работы

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.WorkName.Length > 37)
                        {
                            lbl2.Text = oneStruct.WorkName.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.WorkName;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.WorkName;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Организация

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.EducationalOrganizationShort.Length > 37)
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.EducationalOrganizationShort;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.EducationalOrganizationShort;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Ссылки

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);

                        var linkList = new CompetitionsWork().GetLinkList(oneStruct);
                        foreach (var el in linkList)
                        {
                            tblCell2.Controls.Add(new LiteralControl("<a class='lBtnsUniverse hlinkHover' target='_blank' href='" + el.Value + "' style='font-size:12px'>ссылка" + el.Key.ToString() + "</a><br/>"));
                        }

                        #endregion
                        #region Голоса (за)

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl"; lbl2.Text = oneStruct.Likes.ToString(); tblCell2.Controls.Add(lbl2);

                        #endregion
                        #region Публикация (Отображение в панели голосования и в таблице результатов)

                        tblCell2 = new TableCell();
                        tblCell2.CssClass = "tblSubCell tblSubCell1"; tblRow2.Controls.Add(tblCell2);
                        string check = oneStruct.Approved ? "1" : "0";
                        tmp = "";
                        if (check == "0")            //если отзыв не опубликован, то..
                        {
                            tmp = "btnOff js_publishOnOff";
                        }
                        else if (check == "1")   //если опубликован, то..
                        {
                            tmp = "btnOn js_publishOnOff";
                        }

                        tblCell2.Controls.Add(new LiteralControl("<span class='" + tmp + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                                " id='btnPublishOnOff_" + countofstr + "' data-index='" + countofstr + "' data-reqid='" + oneStruct.Id +
                                                                "' data-checker='" + check + "' ></span>"));

                        #endregion
                        #region Заметки куратора

                        tblCell2 = new TableCell(); tblCell2.Attributes.Add("onclick", location);
                        tblCell2.CssClass = "tblSubCell tblSubCell1 txtAlignLeft"; tblRow2.Controls.Add(tblCell2);
                        lbl2 = new Label(); lbl2.CssClass = "lblTxtTbl";
                        if (oneStruct.Results.Length > 37)
                        {
                            lbl2.Text = oneStruct.Results.Substring(0, 37) + " ...";
                            lbl2.ToolTip = oneStruct.Results;
                        }
                        else
                        {
                            lbl2.Text = oneStruct.Results;
                        }

                        tblCell2.Controls.Add(lbl2);

                        #endregion

                        #endregion
                    }
                    else if (pageCounter > pageNum)
                    {
                        break;
                    }

                }

                #endregion

                #region Кнопки-ссылки на страницы

                tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                tblCell.Controls.Add(pageBtns.GetPageBtnsTbl("1"));

                #endregion

                #region Добавлени Javascript для работы чекбокса выделения/снятия выделения со всех строк в таблице

                StringBuilder js = new StringBuilder();
                js.Append("<script type='text/javascript'> ");

                js.Append("var $mainChkBox = $('#main_chkbox'); ");
                js.Append("$mainChkBox.change(function() { ");
                js.Append("if(this.checked) { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = true; }); ");
                js.Append("} else { ");
                js.Append("$('.allChcked input').each(function(){ this.checked = false; }); ");
                js.Append("} ");
                js.Append("}); ");

                js.Append("$('.allChcked input').each(function() { ");
                js.Append("$(this).change(function() { ");
                js.Append("if(!this.checked) { ");
                js.Append("$mainChkBox.prop('checked', false); ");
                js.Append("} ");
                js.Append("}); ");
                js.Append("}); ");

                js.Append("</script>");

                _pag.Controls.Add(new LiteralControl(js.ToString()));

                #endregion
            }
            else
            {
                if (srchString == "")
                {
                    #region Надпись об отсутствии заявок

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>Заявки на участие в конкурсах на данный момент отсутствуют.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
                else
                {
                    #region Надпись об отсутствии результатов поиска

                    tblRow = new TableRow(); tbl.Controls.Add(tblRow);
                    tblCell = new TableCell(); tblCell.CssClass = "tblMainCell"; tblRow.Controls.Add(tblCell);
                    lbl = new Label(); lbl.CssClass = "lblTxtTblHead"; lbl.Font.Italic = true; lbl.Font.Size = 12;
                    lbl.Text = "<br/>По вашему запросу не найдено заявок.."; tblCell.Controls.Add(lbl);

                    #endregion
                }
            }

            #endregion

            return panelWrapper;

        }

        #region События

        #region lBtnOpenReq_Command_editorScience

        /// <summary>Событие нажатия на кнопку открытия страницы регистрации новой заявки</summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void lBtnOpenReq_Command_editorScience(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            string subCode = "";

            try
            {
                DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
                subCode = EnumsHelper.GetScienceCodeFromValue(ddl.SelectedValue);
                if (subCode == "")
                {
                    var subCodes = ddl.SelectedValue.Split(new[] { ':' });
                    if (subCodes.ElementAtOrDefault(0) != null)
                    {
                        subCode = EnumsHelper.GetScienceCodeFromValue(subCodes[0]);
                    }
                }
            }
            catch (Exception ex)
            {
                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());
            }

            if (subCode != "")
            {
                _pag.Response.Redirect("~/sections/project/competitionscience/reg.aspx?subname=" + subCode + "&ra=yes");
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }

        #endregion
        #region lBtnRegsOnOff_Command_editorScience

        /// <summary>Событие нажатия на кнопку вкл./выкл. приёма заявок на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnRegsOnOff_Command_editorScience(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. заявки")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetScienceCode(Science.self) + "_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. заявки";
                }

                #endregion
            }
            else if (stage == "Выкл. заявки")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetScienceCode(Science.self) + "_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. заявки";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

        }

        #endregion
        #region lBtnResultOnOff_Command_editorScience

        /// <summary>Событие нажатия на кнопку вкл./выкл. панели с результатами (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnResultOnOff_Command_editorScience(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. результатов")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetScienceCode(Science.self) + "_results_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. результатов";
                }

                #endregion
            }
            else if (stage == "Выкл. результатов")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetScienceCode(Science.self) + "_results_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. результатов";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

        }

        #endregion
        #region lBtnVoitingOnOff_Command_editorScience

        /// <summary>Событие нажатия на кнопку вкл./выкл. отображения панелей голосования и отображения работ на сайте (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingOnOff_Command_editorScience(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();

            if (stage == "Вкл. работы")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetScienceCode(Science.self) + "_voiting_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. работы";
                }

                #endregion
            }
            else if (stage == "Выкл. работы")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetScienceCode(Science.self) + "_voiting_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. работы";
                }

                #endregion
            }
            _pag.Response.Redirect(_pag.Request.RawUrl);

        }

        #endregion
        #region lBtnVoitingBtnsOnOff_Command_editorScience

        /// <summary>Событие нажатия на кнопку вкл./выкл. кнопок голосования в панели голосования (сразу по нескольким номинациям, которыми управляет данный админ)</summary>
        /// <param name="sender"></param>
        /// <param name="e">'Вкл. заявки' или 'Выкл. заявки'</param>
        private void lBtnVoitingBtnsOnOff_Command_editorScience(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);

            string stage = e.CommandArgument.ToString();
            LinkButton lBtn = (LinkButton)sender;
            ConfigFile cfg = new ConfigFile();


            if (stage == "Вкл. голосование")
            {
                #region Включение

                if (!cfg.AddParam(EnumsHelper.GetScienceCode(Science.self) + "_voitbtns_onoff", "on"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Выкл. голосование";
                }

                #endregion
            }
            else if (stage == "Выкл. голосование")
            {
                #region Выключение

                if (!cfg.AddParam(EnumsHelper.GetScienceCode(Science.self) + "_voitbtns_onoff", "off"))
                {
                    warning.ShowWarning("ВНИМАНИЕ. Не удалось изменить состояние отображения кнопки приема заявок.", _pag.Master); return;
                }
                else
                {
                    lBtn.Text = "Вкл. голосование";
                }

                #endregion
            }

            _pag.Response.Redirect(_pag.Request.RawUrl);

        }

        #endregion

        #endregion

        #endregion
        #endregion

        #region Карточка заявки

        #region Метод ConsoleCompetitionOnePanel(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            if (rights == EnumsHelper.GetWritesValue(Writes.admin))
            {
                panelWrapper = ConsoleCompetitionOnePanel_admin(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorPhoto))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorPhoto(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorPhotoIzo))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorPhotoIzo(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorPhotoCompGraphic))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorPhotoCompGraphic(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorDPI1))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorDPI1(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorDPI2))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorDPI2(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreHudSlovo))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorTheatreHudSlovo(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreInstrumZanr))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorTheatreInstrumZanr(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreVokal))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorTheatreVokal(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatre))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorTheatre(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreHoreo))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorTheatreHoreo(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreModa))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorTheatreModa(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorLiterary))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorLiterary(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKultura))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorKultura(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorSport))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorSport(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorBoks))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorBoks(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKungfu))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorKungfu(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorThekvo))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorThekvo(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorFootball))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorFootball(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorBasketball))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorBasketball(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorVolleyball))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorVolleyball(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorPaintball))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorPaintball(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorShahmaty))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorShahmaty(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorShashky))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorShashky(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorToponim))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorToponim(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorRobotech))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorRobotech(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorVmesteSila))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorVmesteSila(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorClothes))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorClothes(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorMultimedia))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorMultimedia(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKorablik))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorKorablik(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKorablikVokal))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorKorablikVokal(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKorablikHoreo))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorKorablikHoreo(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorCrimroute))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorCrimroute(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorMathbattle))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorMathbattle(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKosmos))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorKosmos(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorScience))
            {
                panelWrapper = ConsoleCompetitionOnePanel_editorScience(requestNum, rights);
            }
            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_admin(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_admin(string requestNum, string rights, bool ext = false)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsadmin.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights, ext);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Баллы и Итог
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Баллы / Итог</td><td class='tdValue_co'>"));

            //var txtBox = new TextBox(); txtBox.CssClass = "txtBoxUniverse_adm"; txtBox.Width = 150; txtBox.TextMode = TextBoxMode.SingleLine;
            //txtBox.Text = req.Points.ToString(); txtBox.ID = "Points";
            //txtBox.ToolTip = "Баллы (от 0 до 36)";
            //panelWrapper.Controls.Add(txtBox);

            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                             req.Id + "' data-fieldname='Points' " +
                                             "style='width: 170px; height: 23px;' placeholder='Баллы' value='" + req.Points + "' min='0' max='100'/>"));

            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 250px;'>" + CompetitionsWork.GetResultDocumentForParticipant(req, true) + "</span>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и Номинация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName) + "</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номинация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='SubsectionName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.SubsectionName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Фактический адрес образовательной организации

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Фактический адрес образовательной организации</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Addr' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Addr +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Коллектив (спортклуб, кружок)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Коллектив (спортклуб, кружок)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Место проведения тренировок спортивного клуба

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Место проведения тренировок спортивного клуба</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Addr1' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Addr1 +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2, true);

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких авторов коллекции

            if (req.AthorsFios.Count > 0)
            {
                for (int i = 0; i < req.AthorsFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО автора</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='AthorsFios' data-position='" + i + "' " +
                                                                 "style='width: 501px; height: 23px;'>" + req.AthorsFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelAthor' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ АВТОРОВ КОЛЛЕКЦИЙ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового автора</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAthorFio' class='inputsAddParty placeHolder_co' type='text' style='width: 501px; height: 23px;' value='' placeholder='ФИО автора' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddAthor' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить автора</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Хронометраж

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Хронометраж</td><td class='tdValue_co'>"));
            
            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                           "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                           req.Id + "' data-fieldname='Timing_min' " +
                                           "style='width: 100px; height: 23px;' placeholder='минуты' value='" + req.Timing_min + "' min='0' />"));
            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                           "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                           req.Id + "' data-fieldname='Timing_sec' " +
                                           "style='width: 100px; height: 23px;' placeholder='секунды' value='" + req.Timing_sec + "' min='0' />"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            
            #endregion
            #region Техническое сопровождение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Техническое сопровождение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='TechnicalInfo' " +
                                                         "style='width: 880px; height: 100px;'>" + req.TechnicalInfo + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарии к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Структурное подразделение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Структурное подразделение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Division' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Division +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
           
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких руководителей

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность


                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                            "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                            req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                            "style='width: 200px; height: 23px;'>" + (req.ChiefPositions.Count > i ? req.ChiefPositions[i] : "") +
                                                            "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion

            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Медицинская страховка

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Медицинская страховка</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Количество участников в конкурсе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество участников в конкурсе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='PartyCount' " +
                                                         "style='width: 880px; height: 23px;'>" + req.PartyCount +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1, true);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorPhoto(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorPhoto(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Баллы и Итог
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Баллы / Итог</td><td class='tdValue_co'>"));

            //var txtBox = new TextBox(); txtBox.CssClass = "txtBoxUniverse_adm"; txtBox.Width = 150; txtBox.TextMode = TextBoxMode.SingleLine;
            //txtBox.Text = req.Points.ToString(); txtBox.ID = "Points";
            //txtBox.ToolTip = "Баллы (от 0 до 36)";
            //panelWrapper.Controls.Add(txtBox);

            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                             req.Id + "' data-fieldname='Points' " +
                                             "style='width: 170px; height: 23px;' placeholder='Баллы (от 21 до 45)' value='" + req.Points + "' min='21' max='45'/>"));

            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 250px;'>" + CompetitionsWork.GetPointsPhotoGraphicText(req) + "</span>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
          
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion

            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorPhotoIzo(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorPhotoIzo(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            //#region Кнопка сохранить
            //panelWrapper.Controls.Add(new LiteralControl("<div style='width: 200px; float: left; padding: 0px 0px 5px 0px;'>"));

            //LinkButton lBtn = new LinkButton(); lBtn.CssClass = "btnSpec";
            //lBtn.Text = "Сохранить"; lBtn.ToolTip = "Сохранить изменения";
            //lBtn.CommandArgument = req.Id.ToString();
            //lBtn.Command += (lBtnUpdateRequest_Command);
            //panelWrapper.Controls.Add(lBtn);

            //panelWrapper.Controls.Add(new LiteralControl("</div>"));

            //#endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Баллы и Итог
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Баллы / Итог</td><td class='tdValue_co'>"));

            //var txtBox = new TextBox(); txtBox.CssClass = "txtBoxUniverse_adm"; txtBox.Width = 150; txtBox.TextMode = TextBoxMode.SingleLine;
            //txtBox.Text = req.Points.ToString(); txtBox.ID = "Points";
            //txtBox.ToolTip = "Баллы (от 0 до 36)";
            //panelWrapper.Controls.Add(txtBox);

            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                             req.Id + "' data-fieldname='Points' " +
                                             "style='width: 170px; height: 23px;' placeholder='Баллы (от 0 до 36)' value='" + req.Points + "' min='0' max='100'/>"));

            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 250px;'>" + CompetitionsWork.GetPointsIzoText(req) + "</span>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название коллектива (если есть)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorPhotoCompGraphic(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorPhotoCompGraphic(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Баллы и Итог
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Баллы / Итог</td><td class='tdValue_co'>"));

            //var txtBox = new TextBox(); txtBox.CssClass = "txtBoxUniverse_adm"; txtBox.Width = 150; txtBox.TextMode = TextBoxMode.SingleLine;
            //txtBox.Text = req.Points.ToString(); txtBox.ID = "Points";
            //txtBox.ToolTip = "Баллы (от 0 до 36)";
            //panelWrapper.Controls.Add(txtBox);

            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                             req.Id + "' data-fieldname='Points' " +
                                             "style='width: 170px; height: 23px;' placeholder='Баллы (от 21 до 45)' value='" + req.Points + "' min='21' max='45'/>"));

            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 250px;'>" + CompetitionsWork.GetPointsPhotoGraphicText(req) + "</span>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorDPI1(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorDPI1(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Баллы и Итог
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Баллы / Итог</td><td class='tdValue_co'>"));

            //var txtBox = new TextBox(); txtBox.CssClass = "txtBoxUniverse_adm"; txtBox.Width = 150; txtBox.TextMode = TextBoxMode.SingleLine;
            //txtBox.Text = req.Points.ToString(); txtBox.ID = "Points";
            //txtBox.ToolTip = "Баллы (от 0 до 36)";
            //panelWrapper.Controls.Add(txtBox);

            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                             req.Id + "' data-fieldname='Points' " +
                                             "style='width: 170px; height: 23px;' placeholder='Баллы (от 0 до 36)' value='" + req.Points + "' min='0' max='100'/>"));

            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 250px;'>" + CompetitionsWork.GetPointsDPIText(req) + "</span>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
          
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название коллектива (если есть)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorDPI2(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorDPI2(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Баллы и Итог
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Баллы / Итог</td><td class='tdValue_co'>"));

            //var txtBox = new TextBox(); txtBox.CssClass = "txtBoxUniverse_adm"; txtBox.Width = 150; txtBox.TextMode = TextBoxMode.SingleLine;
            //txtBox.Text = req.Points.ToString(); txtBox.ID = "Points";
            //txtBox.ToolTip = "Баллы (от 0 до 36)";
            //panelWrapper.Controls.Add(txtBox);

            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                             req.Id + "' data-fieldname='Points' " +
                                             "style='width: 170px; height: 23px;' placeholder='Баллы (от 0 до 33)' value='" + req.Points + "' min='0' max='100'/>"));

            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 250px;'>" + CompetitionsWork.GetPointsDPIText(req) + "</span>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorTheatreHudSlovo(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorTheatreHudSlovo(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Публикация (Отображение в панели голосования и в таблице результатов)

            string check = req.Approved ? "1" : "0";
            str = "";
            if (check == "0")               // если заявка не опубликована, то..
            {
                str = "btnPublishOnOff_Off";
            }
            else if (check == "1")          // если опубликован, то..
            {
                str = "btnPublishOnOff_On";
            }

            panelWrapper.Controls.Add(new LiteralControl("<span class='" + str + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                    " id='btnPublishOnOff' data-reqid='" + req.Id + "' data-checker='" + check + "' ></span>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion

            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Автор и название произведения

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Автор и название произведения</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Техническое сопровождение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Техническое сопровождение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='TechnicalInfo' " +
                                                         "style='width: 880px; height: 100px;'>" + req.TechnicalInfo + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование группы, кружка, коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование группы, кружка, коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorTheatreInstrumZanr(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorTheatreInstrumZanr(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion

            #region Публикация (Отображение в панели голосования и в таблице результатов)

            string check = req.Approved ? "1" : "0";
            str = "";
            if (check == "0")               // если заявка не опубликована, то..
            {
                str = "btnPublishOnOff_Off";
            }
            else if (check == "1")          // если опубликован, то..
            {
                str = "btnPublishOnOff_On";
            }

            panelWrapper.Controls.Add(new LiteralControl("<span class='" + str + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                    " id='btnPublishOnOff' data-reqid='" + req.Id + "' data-checker='" + check + "' ></span>"));

            #endregion

            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" +  req.AgeСategory +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название номера

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название номера</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Хронометраж

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Хронометраж</td><td class='tdValue_co'>"));

            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                           "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                           req.Id + "' data-fieldname='Timing_min' " +
                                           "style='width: 100px; height: 23px;' placeholder='минуты' value='" + req.Timing_min + "' min='0' />"));
            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                           "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                           req.Id + "' data-fieldname='Timing_sec' " +
                                           "style='width: 100px; height: 23px;' placeholder='секунды' value='" + req.Timing_sec + "' min='0' />"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название ансамбля, коллектива, объединения

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название ансамбля, коллектива, объединения</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }
        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorTheatreVokal(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorTheatreVokal(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Публикация (Отображение в панели голосования и в таблице результатов)

            string check = req.Approved ? "1" : "0";
            str = "";
            if (check == "0")               // если заявка не опубликована, то..
            {
                str = "btnPublishOnOff_Off";
            }
            else if (check == "1")          // если опубликован, то..
            {
                str = "btnPublishOnOff_On";
            }

            panelWrapper.Controls.Add(new LiteralControl("<span class='" + str + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                    " id='btnPublishOnOff' data-reqid='" + req.Id + "' data-checker='" + check + "' ></span>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + req.AgeСategory +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название номера

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название номера</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Хронометраж

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Хронометраж</td><td class='tdValue_co'>"));

            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                           "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                           req.Id + "' data-fieldname='Timing_min' " +
                                           "style='width: 100px; height: 23px;' placeholder='минуты' value='" + req.Timing_min + "' min='0' />"));
            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                           "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                           req.Id + "' data-fieldname='Timing_sec' " +
                                           "style='width: 100px; height: 23px;' placeholder='секунды' value='" + req.Timing_sec + "' min='0' />"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название ансамбля, коллектива, объединения

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название ансамбля, коллектива, объединения</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorTheatre(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorTheatre(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion

            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + req.AgeСategory +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
   
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorTheatreHoreo(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorTheatreHoreo(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Публикация (Отображение в панели голосования и в таблице результатов)

            string check = req.Approved ? "1" : "0";
            str = "";
            if (check == "0")               // если заявка не опубликована, то..
            {
                str = "btnPublishOnOff_Off";
            }
            else if (check == "1")          // если опубликован, то..
            {
                str = "btnPublishOnOff_On";
            }

            panelWrapper.Controls.Add(new LiteralControl("<span class='" + str + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                    " id='btnPublishOnOff' data-reqid='" + req.Id + "' data-checker='" + check + "' ></span>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + req.AgeСategory +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование ансамбля, труппы, театрального кружка

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование ансамбля, труппы, театрального кружка</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Количество участников в конкурсе

            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество участников в конкурсе</td><td class='tdValue_co'>"));
            //panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
            //                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
            //                                             req.Id + "' data-fieldname='PartyCount' " +
            //                                             "style='width: 100px; height: 23px;'>" + req.PartyCount +
            //                                             "</textarea>"));
            //panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorTheatreModa(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorTheatreModa(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion

            //if (req.SubsectionName == EnumsHelper.GetClothesValue(Clothes.tmcollectpokaz) 
            //    || req.SubsectionName == EnumsHelper.GetClothesValue(Clothes.tmavtorcollect))
            //{
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            //}

            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы/коллекции

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы/коллекции</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога (учителя) / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога (учителя)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога (учителя)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон педагога (учителя)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон педагога (учителя)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion

            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);
            
            #endregion

            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }
        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorLiterary(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorLiterary(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
           
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorKultura(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorKultura(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
          
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorSport(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorSport(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2, true);

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование спортивного клуба (кружка)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (кружка)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких руководителей

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность


                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                            "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                            req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                            "style='width: 200px; height: 23px;'>" + (req.ChiefPositions.Count > i ? req.ChiefPositions[i] : "") +
                                                            "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1, true);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorBoks(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorBoks(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория (Младшая, Средняя, Старшая, Молодежь, Смешанная)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2, true);

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование спортивного клуба (кружка)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (кружка)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких руководителей

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность


                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                            "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                            req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                            "style='width: 200px; height: 23px;'>" + (req.ChiefPositions.Count > i ? req.ChiefPositions[i] : "") +
                                                            "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1, true);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorKungfu(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorKungfu(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2, true);

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Вес
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newWeight' class='inputsAddParty placeHolder_co' type='text' style='width: 50px; height: 23px;' value='' placeholder='ВЕС' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование спортивного клуба (кружка)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (кружка)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких руководителей

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность


                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                            "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                            req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                            "style='width: 200px; height: 23px;'>" + (req.ChiefPositions.Count > i ? req.ChiefPositions[i] : "") +
                                                            "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1, true);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorThekvo(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorThekvo(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            /*panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));*/

            #endregion
            
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + 
                                                         " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возрастная категория / Весовая категория / Квалификация / Программа выступления / Результат

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                List<string[]> list = req.GetFioBirthAgecatWeightKvalifProgamResult_All();

                for (int i = 0; i < list.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Участник</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 270px; height: 23px;'>" + list[i][0] +
                                                                 "</textarea>"));

                    #endregion
                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + list[i][1] +
                                                             "</textarea>"));

                    #endregion
                    #region Возрастная категория

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                             req.Id + "' data-fieldname='AgeСategories' data-position='" + i + "' " +
                                                             "style='width: 150px; height: 23px;'>" + list[i][2] +
                                                             "</textarea>"));

                    #endregion
                    #region Весовая категория

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                             req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                             "style='width: 70px; height: 23px;'>" + list[i][3] +
                                                             "</textarea>"));

                    #endregion
                    #region Квалификация

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                             req.Id + "' data-fieldname='Kvalifications' data-position='" + i + "' " +
                                                             "style='width: 70px; height: 23px;'>" + list[i][4] +
                                                             "</textarea>"));

                    #endregion

                    // Разрыв
                    panelWrapper.Controls.Add(new LiteralControl("<div style='padding: 5px 0px 0px 0px'></div>"));

                    #region Программа выступления

                    //panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                             req.Id + "' data-fieldname='Programms' data-position='" + i + "' " +
                                                             "style='width: 150px; height: 23px;'>" + list[i][5] +
                                                             "</textarea>"));

                    #endregion
                    #region Результат

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' placeholder='Результат'" +
                                                                 "class='txtBoxUniverseAsyncEdit_adm placeHolder_co js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Results' data-position='" + i + "' " +
                                                                 "style='width: 150px; height: 23px;'>" + list[i][6] +
                                                                 "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("<span style='display: inline-block; width: 520px;'></span>"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty_Ext' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            #region ФИО

            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' " +
                                                         "type='text' style='width: 250px; height: 23px;' value='' placeholder='Фамилия Имя Отчество' />"));
            
            #endregion
            #region Дата рождения

            panelWrapper.Controls.Add(new LiteralControl("&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' " +
                                                         "type='text' style='width: 90px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAgeCategory' class='inputsAddParty placeHolder_co' " +
                                                         "type='text' style='width: 140px; height: 23px;' value='' placeholder='Возраст-я' />"));

            #endregion
            #region Весовая категория

            panelWrapper.Controls.Add(new LiteralControl("&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newWeight' class='inputsAddParty placeHolder_co' " +
                                                         "type='text' style='width: 60px; height: 23px;' value='' placeholder='Вес-я' />"));

            #endregion
            #region Квалификация

            panelWrapper.Controls.Add(new LiteralControl("&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newKvalif' class='inputsAddParty placeHolder_co' " +
                                                         "type='text' style='width: 80px; height: 23px;' value='' placeholder='Квалиф-я' />"));

            #endregion
            #region Программа выступления

            panelWrapper.Controls.Add(new LiteralControl("&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newProgrm' class='inputsAddParty placeHolder_co' " +
                                                         "type='text' style='width: 140px; height: 23px;' value='' placeholder='Программа' />"));

            #endregion

            #region Кнопка добавления

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 5px 0px 0px 0px; text-align: right;'>"));

            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty_Ext' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование спортивного клуба (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО тренера (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО тренера (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #region События

        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorFootball(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorFootball(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование спортивного клуба (команды)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (команды)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Место проведения тренировок спортивного клуба

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Место проведения тренировок спортивного клуба</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Addr1' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Addr1 +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких руководителей

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность


                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                            "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                            req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                            "style='width: 200px; height: 23px;'>" + (req.ChiefPositions.Count > i ? req.ChiefPositions[i] : "") +
                                                            "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие соблюдать положение

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorBasketball(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorBasketball(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория (Младшая, Средняя, Старшая, Молодежь, Смешанная)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
           
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование спортивного клуба (команды)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (команды)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Место проведения тренировок спортивного клуба

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Место проведения тренировок спортивного клуба</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Addr1' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Addr1 +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких руководителей

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность


                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                            "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                            req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                            "style='width: 200px; height: 23px;'>" + (req.ChiefPositions.Count > i ? req.ChiefPositions[i] : "") +
                                                            "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие соблюдать положение

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorVolleyball(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorVolleyball(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion

            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория (Младшая, Средняя, Старшая, Молодежь, Смешанная)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование спортивного клуба (команды)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (команды)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Место проведения тренировок спортивного клуба

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Место проведения тренировок спортивного клуба</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Addr1' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Addr1 +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких руководителей

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность


                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                            "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                            req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                            "style='width: 200px; height: 23px;'>" + (req.ChiefPositions.Count > i ? req.ChiefPositions[i] : "") +
                                                            "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие соблюдать положение

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorPaintball(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorPaintball(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория (Младшая, Средняя, Старшая, Молодежь, Смешанная)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование спортивного клуба (кружка)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (кружка)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких руководителей

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность


                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                            "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                            req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                            "style='width: 200px; height: 23px;'>" + (req.ChiefPositions.Count > i ? req.ChiefPositions[i] : "") +
                                                            "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion

            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorShahmaty(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorShahmaty(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion

            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория (Младшая, Средняя, Старшая, Молодежь, Смешанная)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование спортивного клуба (кружка)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (кружка)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких руководителей

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность


                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                            "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                            req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                            "style='width: 200px; height: 23px;'>" + (req.ChiefPositions.Count > i ? req.ChiefPositions[i] : "") +
                                                            "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorShashky(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorShashky(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория (Младшая, Средняя, Старшая, Молодежь, Смешанная)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование спортивного клуба (кружка)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (кружка)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких руководителей

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность


                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                            "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                            req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                            "style='width: 200px; height: 23px;'>" + (req.ChiefPositions.Count > i ? req.ChiefPositions[i] : "") +
                                                            "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorToponim(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorToponim(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
           
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorRobotech(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorRobotech(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название команды

            /*panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название команды</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));*/

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
           
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorVmesteSila(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorVmesteSila(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Публикация (Отображение в панели голосования и в таблице результатов)

            string check = req.Approved ? "1" : "0";
            str = "";
            if (check == "0")               // если заявка не опубликована, то..
            {
                str = "btnPublishOnOff_Off";
            }
            else if (check == "1")          // если опубликован, то..
            {
                str = "btnPublishOnOff_On";
            }

            panelWrapper.Controls.Add(new LiteralControl("<span class='" + str + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                    " id='btnPublishOnOff' data-reqid='" + req.Id + "' data-checker='" + check + "' ></span>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());


            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название номера

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название номера</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            //#region Техническое сопровождение

            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Техническое сопровождение</td><td class='tdValue_co'>"));
            //panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
            //                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='TechnicalInfo' " +
            //                                             "style='width: 880px; height: 100px;'>" + req.TechnicalInfo + "</textarea>"));
            //panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            //#endregion
            #region Наименование группы, кружка, коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование группы, кружка, коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorClothes(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorClothes(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Публикация (Отображение в панели голосования и в таблице результатов)

            string check = req.Approved ? "1" : "0";
            str = "";
            if (check == "0")               // если заявка не опубликована, то..
            {
                str = "btnPublishOnOff_Off";
            }
            else if (check == "1")          // если опубликован, то..
            {
                str = "btnPublishOnOff_On";
            }

            panelWrapper.Controls.Add(new LiteralControl("<span class='" + str + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                    " id='btnPublishOnOff' data-reqid='" + req.Id + "' data-checker='" + check + "' ></span>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива	

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование группы, кружка, коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorMultimedia(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorMultimedia(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
           
            #region Название проекта

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название проекта</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion

            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            //Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorKorablik(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorKorablik(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Публикация (Отображение в панели голосования и в таблице результатов)

            string check = req.Approved ? "1" : "0";
            str = "";
            if (check == "0")               // если заявка не опубликована, то..
            {
                str = "btnPublishOnOff_Off";
            }
            else if (check == "1")          // если опубликован, то..
            {
                str = "btnPublishOnOff_On";
            }

            panelWrapper.Controls.Add(new LiteralControl("<span class='" + str + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                    " id='btnPublishOnOff' data-reqid='" + req.Id + "' data-checker='" + check + "' ></span>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion

            #region Изменение номинации

            var hf = new HiddenField();
            hf.ID = "HiddenField_ReqId";
            hf.Value = req.Id.ToString();
            panelWrapper.Controls.Add(hf);

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номинация</td>"));
            panelWrapper.Controls.Add(new LiteralControl("<td class='tdValue_co'>"));
            var ddl = new DropDownList(); ddl.CssClass = "btnSpec";
            ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.hudSlovo));
            ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.vokalAnsambli));
            ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.vokalMalieFormi));
            ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.vokalSolo));
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = true;
            ddl.AutoPostBack = true;
            ddl.SelectedIndexChanged += new EventHandler(OnSelectedSubsectionIndexChanged);
            ddl.Width = 300;
            ddl.SelectedValue = req.SubsectionName;
            panelWrapper.Controls.Add(ddl);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion 

            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion

            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория (Младшая, Средняя, Старшая, Молодежь, Смешанная)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование ансамбля, труппы, театрального кружка

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование ансамбля, труппы, театрального кружка</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Техническое сопровождение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Техническое сопровождение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='TechnicalInfo' " +
                                                         "style='width: 880px; height: 100px;'>" + req.TechnicalInfo + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
           
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            //#region Количество голосов ЗА

            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            //#endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }


        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorKorablikVokal(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorKorablikVokal(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Публикация (Отображение в панели голосования и в таблице результатов)

            string check = req.Approved ? "1" : "0";
            str = "";
            if (check == "0")               // если заявка не опубликована, то..
            {
                str = "btnPublishOnOff_Off";
            }
            else if (check == "1")          // если опубликован, то..
            {
                str = "btnPublishOnOff_On";
            }

            panelWrapper.Controls.Add(new LiteralControl("<span class='" + str + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                    " id='btnPublishOnOff' data-reqid='" + req.Id + "' data-checker='" + check + "' ></span>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion

            #region Изменение номинации

            var hf = new HiddenField();
            hf.ID = "HiddenField_ReqId";
            hf.Value = req.Id.ToString();
            panelWrapper.Controls.Add(hf);

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номинация</td>"));
            panelWrapper.Controls.Add(new LiteralControl("<td class='tdValue_co'>"));
            var ddl = new DropDownList(); ddl.CssClass = "btnSpec";
            ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.vokalAnsambli));
            ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.vokalMalieFormi));
            ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.vokalSolo));
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = true;
            ddl.AutoPostBack = true;
            ddl.SelectedIndexChanged += new EventHandler(OnSelectedSubsectionIndexChanged);
            ddl.Width = 300;
            ddl.SelectedValue = req.SubsectionName;
            panelWrapper.Controls.Add(ddl);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion 

            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion

            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория (Младшая, Средняя, Старшая, Молодежь, Смешанная)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование ансамбля, труппы, театрального кружка

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование ансамбля, труппы, театрального кружка</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Техническое сопровождение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Техническое сопровождение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='TechnicalInfo' " +
                                                         "style='width: 880px; height: 100px;'>" + req.TechnicalInfo + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            //#region Количество голосов ЗА

            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            //#endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #region События

        protected void OnSelectedSubsectionIndexChanged(object sender, EventArgs e)
        {
            DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
            HiddenField reqId = (HiddenField)_pag.FindControl("ctl00$ContentPlaceHolder1$HiddenField_ReqId");

            CompetitionsWork work = new CompetitionsWork();
            int res = work.UpdateField(reqId.Value, "SubsectionName", ddl.SelectedItem.Text);
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorKorablikHoreo(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorKorablikHoreo(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Публикация (Отображение в панели голосования и в таблице результатов)

            string check = req.Approved ? "1" : "0";
            str = "";
            if (check == "0")               // если заявка не опубликована, то..
            {
                str = "btnPublishOnOff_Off";
            }
            else if (check == "1")          // если опубликован, то..
            {
                str = "btnPublishOnOff_On";
            }

            panelWrapper.Controls.Add(new LiteralControl("<span class='" + str + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                    " id='btnPublishOnOff' data-reqid='" + req.Id + "' data-checker='" + check + "' ></span>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion

            #region Изменение номинации

            var hf = new HiddenField();
            hf.ID = "HiddenField_ReqId";
            hf.Value = req.Id.ToString();
            panelWrapper.Controls.Add(hf);

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номинация</td>"));
            panelWrapper.Controls.Add(new LiteralControl("<td class='tdValue_co'>"));
            var ddl = new DropDownList(); ddl.CssClass = "btnSpec";
            ddl.Items.Add(EnumsHelper.GetKorablikValue(Korablik.horeographia));
            ddl.ID = "DropDown_Subsection";
            ddl.Enabled = true;
            ddl.AutoPostBack = true;
            ddl.SelectedIndexChanged += new EventHandler(OnSelectedSubsectionIndexChangedHoreo);
            ddl.Width = 300;
            ddl.SelectedValue = req.SubsectionName;
            panelWrapper.Controls.Add(ddl);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion 

            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion

            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория (Младшая, Средняя, Старшая, Молодежь, Смешанная)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion

            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование ансамбля, труппы, театрального кружка

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование ансамбля, труппы, театрального кружка</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Техническое сопровождение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Техническое сопровождение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='TechnicalInfo' " +
                                                         "style='width: 880px; height: 100px;'>" + req.TechnicalInfo + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            //#region Количество голосов ЗА

            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            //#endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #region События

        protected void OnSelectedSubsectionIndexChangedHoreo(object sender, EventArgs e)
        {
            DropDownList ddl = (DropDownList)_pag.FindControl("ctl00$ContentPlaceHolder1$DropDown_Subsection");
            HiddenField reqId = (HiddenField)_pag.FindControl("ctl00$ContentPlaceHolder1$HiddenField_ReqId");

            CompetitionsWork work = new CompetitionsWork();
            int res = work.UpdateField(reqId.Value, "SubsectionName", ddl.SelectedItem.Text);
            _pag.Response.Redirect(_pag.Request.RawUrl);
        }
        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorCrimroute(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorCrimroute(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Публикация (Отображение в панели голосования и в таблице результатов)

            string check = req.Approved ? "1" : "0";
            str = "";
            if (check == "0")               // если заявка не опубликована, то..
            {
                str = "btnPublishOnOff_Off";
            }
            else if (check == "1")          // если опубликован, то..
            {
                str = "btnPublishOnOff_On";
            }

            panelWrapper.Controls.Add(new LiteralControl("<span class='" + str + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                    " id='btnPublishOnOff' data-reqid='" + req.Id + "' data-checker='" + check + "' ></span>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория (Младшая, Средняя, Старшая, Молодежь, Смешанная)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование группы, кружка, коллектива	

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование группы, кружка, коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion

            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorMathbattle(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorMathbattle(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            //cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td>" +
                //"<td class='tdValue_co'>" + cName + "</td>" +
                "</tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название команды

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название команды</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            //panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
            //                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
            //                                             req.Id + "' data-fieldname='WorkName' " +
            //                                             "style='width: 880px; height: 23px;'>" + req.WorkName +
            //                                             "</textarea>"));
            //panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorKosmos(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorKosmos(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            //cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td>" +
                //"<td class='tdValue_co'>" + cName + "</td>" +
                "</tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория (Младшая, Средняя, Старшая, Молодежь, Смешанная)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название команды

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название команды</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            //panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
            //                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
            //                                             req.Id + "' data-fieldname='WorkName' " +
            //                                             "style='width: 880px; height: 23px;'>" + req.WorkName +
            //                                             "</textarea>"));
            //panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
           
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_editorScience(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_editorScience(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            CompetitionsWork work = new CompetitionsWork();
            CompetitionRequest req = work.GetOneRequest(requestNum);
            if (req == null) return panelWrapper;
            if (req.CompetitionName == "") return panelWrapper;
            string str = "";

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке и к следующей заявке

            Content_PrevNext_Common(ref panelWrapper, req, rights);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопка приема заявки

            Content_RequestApply_Common(ref panelWrapper, req);

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            Content_Result_Common(ref panelWrapper, req);

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория (Младшая, Средняя, Старшая, Молодежь, Смешанная)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
           
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            Content_Links_Cons_Common(ref panelWrapper, ref req);

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            _context.Session[EnumsHelper.GetSessionFromCompetitionCode(req.CompetitionName)] = req;

            return panelWrapper;
        }

        #endregion

        #endregion

        #endregion

        #region Работа с архивными заявками

        #region Метод ConsoleCompetitionOnePanel_Arch(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по архивной заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            if (rights == EnumsHelper.GetWritesValue(Writes.admin))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_admin(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorPhoto))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorPhoto(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorPhotoIzo))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorPhotoIzo(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorPhotoCompGraphic))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorPhotoCompGraphic(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorDPI1))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorDPI1(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorDPI2))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorDPI2(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreHudSlovo))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorTheatreHudSlovo(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreInstrumZanr))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorTheatreInstrumZanr(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreVokal))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorTheatreVokal(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatre))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorTheatre(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreHoreo))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorTheatreHoreo(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorTheatreModa))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorTheatreModa(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorLiterary))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorLiterary(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKultura))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorKultura(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorSport))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorSport(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKungfu))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorKungfu(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorThekvo))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorThekvo(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorFootball))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorFootball(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorPaintball))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorPaintball(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorShahmaty))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorShahmaty(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorShashky))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorShashky(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorToponim))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorToponim(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorRobotech))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorRobotech(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorVmesteSila))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorVmesteSila(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorClothes))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorClothes(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorMultimedia))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorMultimedia(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKorablik) || rights == EnumsHelper.GetWritesValue(Writes.editorKorablikVokal) || rights ==  EnumsHelper.GetWritesValue(Writes.editorKorablikHoreo))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorKorablik(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorCrimroute))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorCrimroute(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorMathbattle))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorMathbattle(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorKosmos))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorKosmos(requestNum, rights);
            }
            else if (rights == EnumsHelper.GetWritesValue(Writes.editorScience))
            {
                panelWrapper = ConsoleCompetitionOnePanel_Arch_editorScience(requestNum, rights);
            }
            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_admin(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по архивной заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_admin(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName) + "</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номинация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='SubsectionName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.SubsectionName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;'>" + req.AgeСategory +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Количество участников I отборочного тура (по заявке)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество участников I отборочного тура (по заявке)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='PartyCount' " +
                                                         "style='width: 880px; height: 23px;'>" + req.PartyCount +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Фактический адрес образовательной организации

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Фактический адрес образовательной организации</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Addr' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Addr +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Коллектив (спортклуб, кружок)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Коллектив (спортклуб, кружок)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Место проведения тренировок спортивного клуба

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Место проведения тренировок спортивного клуба</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Addr1' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Addr1 +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст / (Вес - если спортивный конкурс)

            if (req.CompetitionName == EnumsHelper.GetSportCode(Sport.self))  //если спортивный конкурс
            {
                #region Код

                if (req.Fio != "")  //если есть индивидуальные данные в завлении
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст / Вес</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion
                    #region Вес

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Weight' " +
                                                             "style='width: 50px; height: 23px;'>" + req.Weight +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст / Вес</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion
                        #region Вес

                        if (i <= Weights.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + Weights[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
            }
            else                                //если любой другой конкурс
            {
                #region Код

                if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            if (req.SubsectionName == EnumsHelper.GetSportValue(Sport.prostEdinoborstva))  //если спортивный конкурс (Простейшие единоборства)
            {
                //Вес
                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<input id='js_newWeight' class='inputsAddParty placeHolder_co' type='text' style='width: 50px; height: 23px;' value='' placeholder='ВЕС' />"));
            }

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких авторов коллекции

            if (req.AthorsFios.Count > 0)
            {
                for (int i = 0; i < req.AthorsFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО автора</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='AthorsFios' data-position='" + i + "' " +
                                                                 "style='width: 501px; height: 23px;'>" + req.AthorsFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelAthor' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ АВТОРОВ КОЛЛЕКЦИЙ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового автора</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAthorFio' class='inputsAddParty placeHolder_co' type='text' style='width: 501px; height: 23px;' value='' placeholder='ФИО автора' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddAthor' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить автора</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Хронометраж

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Хронометраж</td><td class='tdValue_co'>"));

            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                           "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                           req.Id + "' data-fieldname='Timing_min' " +
                                           "style='width: 100px; height: 23px;' placeholder='минуты' value='" + req.Timing_min + "' min='0' />"));
            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                           "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                           req.Id + "' data-fieldname='Timing_sec' " +
                                           "style='width: 100px; height: 23px;' placeholder='секунды' value='" + req.Timing_sec + "' min='0' />"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Техническое сопровождение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Техническое сопровождение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='TechnicalInfo' " +
                                                         "style='width: 880px; height: 100px;'>" + req.TechnicalInfo + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарии к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких руководителей

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = "";
            if (req.CompetitionName == EnumsHelper.GetPhotoCode(Photo.self))
            {
                fileUrlPath = _imgUrlPathFoto.Replace("~/", "");
            }
            else if (req.CompetitionName == EnumsHelper.GetLiteraryCode(Literary.self))
            {
                fileUrlPath = _imgUrlPathLiterary.Replace("~/", "");
            }
            else if (req.CompetitionName == EnumsHelper.GetTheatreCode(Theatre.self))
            {
                fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");     //на самом деле для этого конкурса эта переменная не применяется, так как там прямые ссылки на ролики в ютубе
            }
            else if (req.CompetitionName == EnumsHelper.GetKulturaCode(Kultura.self))
            {
                fileUrlPath = _imgUrlPathKultura.Replace("~/", "");
            }
            else if (req.CompetitionName == EnumsHelper.GetSportCode(Sport.self))
            {
                fileUrlPath = _imgUrlPathSport.Replace("~/", "");
            }
            else if (req.CompetitionName == EnumsHelper.GetToponimCode(Toponim.self))
            {
                fileUrlPath = _imgUrlPathToponim.Replace("~/", "");
            }
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Медицинская страховка

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Медицинская страховка</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События

        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorPhoto(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по архивной заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorPhoto(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст / (Вес - если спортивный конкурс)

            if (req.CompetitionName == EnumsHelper.GetSportCode(Sport.self))  //если спортивный конкурс
            {
                #region Код

                if (req.Fio != "")  //если есть индивидуальные данные в завлении
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion
                    #region Вес

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Weight' " +
                                                             "style='width: 50px; height: 23px;'>" + req.Weight +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion
                        #region Вес

                        if (i <= Weights.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + Weights[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
            }
            else                                //если любой другой конкурс
            {
                #region Код

                if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментариq к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathFoto.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorPhotoIzo(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по архивной заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorPhotoIzo(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст / (Вес - если спортивный конкурс)

            if (req.CompetitionName == EnumsHelper.GetSportCode(Sport.self))  //если спортивный конкурс
            {
                #region Код

                if (req.Fio != "")  //если есть индивидуальные данные в завлении
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion
                    #region Вес

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Weight' " +
                                                             "style='width: 50px; height: 23px;'>" + req.Weight +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion
                        #region Вес

                        if (i <= Weights.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + Weights[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
            }
            else                                //если любой другой конкурс
            {
                #region Код

                if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментариq к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathFoto.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorPhotoCompGraphic(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по архивной заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorPhotoCompGraphic(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст / (Вес - если спортивный конкурс)

            if (req.CompetitionName == EnumsHelper.GetSportCode(Sport.self))  //если спортивный конкурс
            {
                #region Код

                if (req.Fio != "")  //если есть индивидуальные данные в завлении
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion
                    #region Вес

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Weight' " +
                                                             "style='width: 50px; height: 23px;'>" + req.Weight +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion
                        #region Вес

                        if (i <= Weights.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + Weights[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
            }
            else                                //если любой другой конкурс
            {
                #region Код

                if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарий к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathFoto.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorDPI1(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по архивной заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorDPI1(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст / (Вес - если спортивный конкурс)

            if (req.CompetitionName == EnumsHelper.GetSportCode(Sport.self))  //если спортивный конкурс
            {
                #region Код

                if (req.Fio != "")  //если есть индивидуальные данные в завлении
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion
                    #region Вес

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Weight' " +
                                                             "style='width: 50px; height: 23px;'>" + req.Weight +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion
                        #region Вес

                        if (i <= Weights.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + Weights[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
            }
            else                                //если любой другой конкурс
            {
                #region Код

                if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарий к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathFoto.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorDPI2(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по архивной заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorDPI2(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст / (Вес - если спортивный конкурс)

            if (req.CompetitionName == EnumsHelper.GetSportCode(Sport.self))  //если спортивный конкурс
            {
                #region Код

                if (req.Fio != "")  //если есть индивидуальные данные в завлении
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion
                    #region Вес

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Weight' " +
                                                             "style='width: 50px; height: 23px;'>" + req.Weight +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion
                        #region Вес

                        if (i <= Weights.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + Weights[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                                 "style='width: 50px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
            }
            else                                //если любой другой конкурс
            {
                #region Код

                if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарий к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathFoto.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorTheatreHudSlovo(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorTheatreHudSlovo(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Автор и название произведения

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Автор и название произведения</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Техническое сопровождение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Техническое сопровождение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='TechnicalInfo' " +
                                                         "style='width: 880px; height: 100px;'>" + req.TechnicalInfo + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарии к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование группы, кружка, коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование группы, кружка, коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События

        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorTheatreInstrumZanr(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorTheatreInstrumZanr(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке

            LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnPrevious";
            lBtn.ToolTip = "открыть предыдущую заявку";
            lBtn.CommandArgument = req.Id.ToString();
            lBtn.Command += (lBtnToPreviousReq_TheatreInstrumZanr_Arch);
            lBtn.OnClientClick = "waiting('Идёт переход к предыдущей архивной заявке. Подождите..', 500);";
            panelWrapper.Controls.Add(lBtn);

            #endregion
            #region Кнопка Перехода к следующей заявке

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnNext";
            lBtn.ToolTip = "открыть следующую заявку";
            lBtn.CommandArgument = req.Id.ToString();
            lBtn.Command += (lBtnToNextReq_TheatreInstrumZanr_Arch);
            lBtn.OnClientClick = "waiting('Идёт переход к следующей архивной заявке. Подождите..', 500);";
            panelWrapper.Controls.Add(lBtn);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название номера

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название номера</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Хронометраж

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Хронометраж</td><td class='tdValue_co'>"));

            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                           "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                           req.Id + "' data-fieldname='Timing_min' " +
                                           "style='width: 100px; height: 23px;' placeholder='минуты' value='" + req.Timing_min + "' min='0' />"));
            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                           "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                           req.Id + "' data-fieldname='Timing_sec' " +
                                           "style='width: 100px; height: 23px;' placeholder='секунды' value='" + req.Timing_sec + "' min='0' />"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название ансамбля, коллектива, объединения

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название ансамбля, коллектива, объединения</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарии к номеру

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии к номеру</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            if (req.ChiefFio.Trim() != "" && req.ChiefFio.Trim().ToUpper() != "НЕТ")
            {
                #region ФИО педагога

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога (для совместимости со старыми заявками)</td><td class='tdValue_co'>"));
                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefFio' " +
                                                             "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                             "</textarea>"));
                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
                #region Должность педагога

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность педагога (для совместимости со старыми заявками)</td><td class='tdValue_co'>"));
                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPosition' " +
                                                             "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                             "</textarea>"));
                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События

        #region Событие lBtnToPreviousReq_TheatreInstrumZanr_Arch

        /// <summary>Нажатие на кнопку перехода к предыдущей архивной заявке</summary>
        /// <param name="sender"></param>
        /// <param name="e">id текущей открытой Заявки</param>
        protected void lBtnToPreviousReq_TheatreInstrumZanr_Arch(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            long reqId = StringToNum.ParseLong(e.CommandArgument.ToString());
            if (reqId == -1)
            {
                warning.ShowWarning("Неправильный id Заявки..", _pag.Master);
                return;
            }

            CompetitionsWork_Arch work = new CompetitionsWork_Arch();
            List<CompetitionRequest_Arch> structList = new List<CompetitionRequest_Arch>();
            List<CompetitionRequest_Arch> tmpList;
            string compName = EnumsHelper.GetTheatreCode(Theatre.self);

            foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreInstrumZanr())
            {
                tmpList = work.SelectWhere(new[] { "_id" }, new[] { "CompetitionName", "SubsectionName" }, new[] { compName, subname });
                if (tmpList != null)
                {
                    structList.AddRange(tmpList);
                }
            }
            structList = structList.OrderBy(x => x.Id * -1).ToList();

            if (structList.Count == 0)  //проверка-подстраховка
            {
                return;
            }

            int indexCurrent = structList.FindIndex(x => x.Id == reqId);
            if (indexCurrent >= structList.Count - 1)
            {
                warning.ShowWarning("Это первая заявка, перед ней больше нет заявок..", _pag.Master);
                return;
            }

            long needId = 0;
            bool err = false;
            try
            {
                needId = structList[indexCurrent + 1].Id;
            }
            catch (Exception ex)
            {
                #region Код

                err = true;

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());

                #endregion
            }

            if (!err)
            {
                _pag.Response.Redirect("~/adm/competitiononearch.aspx?num=" + needId);
            }
        }

        #endregion
        #region Событие lBtnToNextReq_TheatreInstrumZanr_Arch

        /// <summary>Нажатие на кнопку перехода к следующей архивной заявке</summary>
        /// <param name="sender"></param>
        /// <param name="e">id текущей открытой Заявки</param>
        protected void lBtnToNextReq_TheatreInstrumZanr_Arch(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            long reqId = StringToNum.ParseLong(e.CommandArgument.ToString());
            if (reqId == -1)
            {
                warning.ShowWarning("Неправильный id Заявки..", _pag.Master);
                return;
            }

            CompetitionsWork_Arch work = new CompetitionsWork_Arch();
            List<CompetitionRequest_Arch> structList = new List<CompetitionRequest_Arch>();
            List<CompetitionRequest_Arch> tmpList;
            string compName = EnumsHelper.GetTheatreCode(Theatre.self);

            foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreInstrumZanr())
            {
                tmpList = work.SelectWhere(new[] { "_id" }, new[] { "CompetitionName", "SubsectionName" }, new[] { compName, subname });
                if (tmpList != null)
                {
                    structList.AddRange(tmpList);
                }
            }
            structList = structList.OrderBy(x => x.Id * -1).ToList();

            if (structList.Count == 0)  //проверка-подстраховка
            {
                return;
            }

            int indexCurrent = structList.FindIndex(x => x.Id == reqId);
            if (indexCurrent == 0)
            {
                warning.ShowWarning("Это последняя заявка, после неё больше нет заявок..", _pag.Master);
                return;
            }

            long needId = 0;
            bool err = false;
            try
            {
                needId = structList[indexCurrent - 1].Id;
            }
            catch (Exception ex)
            {
                #region Код

                err = true;

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());

                #endregion
            }

            if (!err)
            {
                _pag.Response.Redirect("~/adm/competitiononearch.aspx?num=" + needId);
            }
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorTheatreVokal(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorTheatreVokal(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке

            LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnPrevious";
            lBtn.ToolTip = "открыть предыдущую заявку";
            lBtn.CommandArgument = req.Id.ToString();
            lBtn.Command += (lBtnToPreviousReq_TheatreVokal_Arch);
            lBtn.OnClientClick = "waiting('Идёт переход к предыдущей архивной заявке. Подождите..', 500);";
            panelWrapper.Controls.Add(lBtn);

            #endregion
            #region Кнопка Перехода к следующей заявке

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnNext";
            lBtn.ToolTip = "открыть следующую заявку";
            lBtn.CommandArgument = req.Id.ToString();
            lBtn.Command += (lBtnToNextReq_TheatreVokal_Arch);
            lBtn.OnClientClick = "waiting('Идёт переход к следующей архивной заявке. Подождите..', 500);";
            panelWrapper.Controls.Add(lBtn);

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название номера

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название номера</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Хронометраж

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Хронометраж</td><td class='tdValue_co'>"));

            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                           "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                           req.Id + "' data-fieldname='Timing_min' " +
                                           "style='width: 100px; height: 23px;' placeholder='минуты' value='" + req.Timing_min + "' min='0' />"));
            panelWrapper.Controls.Add(new LiteralControl("<input name='' type='number' " +
                                           "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                           req.Id + "' data-fieldname='Timing_sec' " +
                                           "style='width: 100px; height: 23px;' placeholder='секунды' value='" + req.Timing_sec + "' min='0' />"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название ансамбля, коллектива, объединения

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название ансамбля, коллектива, объединения</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарии к номеру

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии к номеру</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            if (req.ChiefFio.Trim() != "" && req.ChiefFio.Trim().ToUpper() != "НЕТ")
            {
                #region ФИО педагога

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога (для совместимости со старыми заявками)</td><td class='tdValue_co'>"));
                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefFio' " +
                                                             "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                             "</textarea>"));
                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
                #region Должность педагога

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность педагога (для совместимости со старыми заявками)</td><td class='tdValue_co'>"));
                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPosition' " +
                                                             "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                             "</textarea>"));
                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События

        
        #region Событие lBtnToPreviousReq_TheatreVokal_Arch

        /// <summary>Нажатие на кнопку перехода к предыдущей архивной заявке</summary>
        /// <param name="sender"></param>
        /// <param name="e">id текущей открытой Заявки</param>
        protected void lBtnToPreviousReq_TheatreVokal_Arch(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            long reqId = StringToNum.ParseLong(e.CommandArgument.ToString());
            if (reqId == -1)
            {
                warning.ShowWarning("Неправильный id Заявки..", _pag.Master);
                return;
            }

            CompetitionsWork_Arch work = new CompetitionsWork_Arch();
            List<CompetitionRequest_Arch> structList = new List<CompetitionRequest_Arch>();
            List<CompetitionRequest_Arch> tmpList;
            string compName = EnumsHelper.GetTheatreCode(Theatre.self);

            foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreVokal())
            {
                tmpList = work.SelectWhere(new[] { "_id" }, new[] { "CompetitionName", "SubsectionName" }, new[] { compName, subname });
                if (tmpList != null)
                {
                    structList.AddRange(tmpList);
                }
            }
            structList = structList.OrderBy(x => x.Id * -1).ToList();

            if (structList.Count == 0)  //проверка-подстраховка
            {
                return;
            }

            int indexCurrent = structList.FindIndex(x => x.Id == reqId);
            if (indexCurrent >= structList.Count - 1)
            {
                warning.ShowWarning("Это первая заявка, перед ней больше нет заявок..", _pag.Master);
                return;
            }

            long needId = 0;
            bool err = false;
            try
            {
                needId = structList[indexCurrent + 1].Id;
            }
            catch (Exception ex)
            {
                #region Код

                err = true;

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());

                #endregion
            }

            if (!err)
            {
                _pag.Response.Redirect("~/adm/competitiononearch.aspx?num=" + needId);
            }
        }

        #endregion
        #region Событие lBtnToNextReq_TheatreVokal_Arch

        /// <summary>Нажатие на кнопку перехода к следующей архивной заявке</summary>
        /// <param name="sender"></param>
        /// <param name="e">id текущей открытой Заявки</param>
        protected void lBtnToNextReq_TheatreVokal_Arch(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            long reqId = StringToNum.ParseLong(e.CommandArgument.ToString());
            if (reqId == -1)
            {
                warning.ShowWarning("Неправильный id Заявки..", _pag.Master);
                return;
            }

            CompetitionsWork_Arch work = new CompetitionsWork_Arch();
            List<CompetitionRequest_Arch> structList = new List<CompetitionRequest_Arch>();
            List<CompetitionRequest_Arch> tmpList;
            string compName = EnumsHelper.GetTheatreCode(Theatre.self);

            foreach (string subname in CompetitonWorkCommon.subnames_editorTheatreVokal())
            {
                tmpList = work.SelectWhere(new[] { "_id" }, new[] { "CompetitionName", "SubsectionName" }, new[] { compName, subname });
                if (tmpList != null)
                {
                    structList.AddRange(tmpList);
                }
            }
            structList = structList.OrderBy(x => x.Id * -1).ToList();

            if (structList.Count == 0)  //проверка-подстраховка
            {
                return;
            }

            int indexCurrent = structList.FindIndex(x => x.Id == reqId);
            if (indexCurrent == 0)
            {
                warning.ShowWarning("Это последняя заявка, после неё больше нет заявок..", _pag.Master);
                return;
            }

            long needId = 0;
            bool err = false;
            try
            {
                needId = structList[indexCurrent - 1].Id;
            }
            catch (Exception ex)
            {
                #region Код

                err = true;

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());

                #endregion
            }

            if (!err)
            {
                _pag.Response.Redirect("~/adm/competitiononearch.aspx?num=" + needId);
            }
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorTheatre(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorTheatre(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Название коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Дата рождения
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарий к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorTheatreHoreo(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorTheatreHoreo(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Количество участников I отборочного тура (по заявке)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество участников I отборочного тура (по заявке)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='PartyCount' " +
                                                         "style='width: 880px; height: 23px;'>" + req.PartyCount +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование ансамбля, труппы, театрального кружка

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование ансамбля, труппы, театрального кружка</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События метода ConsoleCompetitionOnePanel_Arch_editorTheatreHoreo

    
        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorTheatreModa(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorTheatreModa(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            if (req.SubsectionName == EnumsHelper.GetClothesValue(Clothes.tmavtorcollect))
            {
                #region Название коллекции

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название коллекции</td><td class='tdValue_co'>"));
                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='WorkName' " +
                                                             "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                             "</textarea>"));
                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
                #region Панель отображения нескольких авторов коллекции

                if (req.AthorsFios.Count > 0)
                {
                    for (int i = 0; i < req.AthorsFios.Count; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО автора коллекции</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='AthorsFios' data-position='" + i + "' " +
                                                                     "style='width: 501px; height: 23px;'>" + req.AthorsFios[i] +
                                                                     "</textarea>"));

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelAthor' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }
                }

                #endregion
                #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ АВТОРОВ КОЛЛЕКЦИЙ

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового автора</td><td class='tdValue_co'>"));

                //ФИО
                panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAthorFio' class='inputsAddParty placeHolder_co' type='text' style='width: 501px; height: 23px;' value='' placeholder='ФИО автора' />"));

                //Кнопка добавления
                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddAthor' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить автора</span>"));

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }
            if (req.SubsectionName == EnumsHelper.GetClothesValue(Clothes.tmcollectpokaz) 
                || req.SubsectionName == EnumsHelper.GetClothesValue(Clothes.tmnetradicmaterial) 
                || req.SubsectionName == EnumsHelper.GetClothesValue(Clothes.tmissledovproject))
            {
                #region Название коллекции

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название коллекции</td><td class='tdValue_co'>"));
                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='WorkName' " +
                                                             "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                             "</textarea>"));
                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }
            if (req.SubsectionName == EnumsHelper.GetClothesValue(Clothes.tmindividpokaz))
            {
                #region ФИО / Дата рождения / Возраст

                if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
                {
                    #region Код

                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fio' " +
                                                                 "style='width: 500px; height: 23px;'>" + req.Fio +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Age' " +
                                                             "style='width: 100px; height: 23px;'>" + req.Age +
                                                             "</textarea>"));

                    #endregion
                    #region Возраст

                    DateTime dtTmp;
                    if (DateTime.TryParse(req.Age, out dtTmp))
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                    #endregion
                }

                if (req.Fios != "")  //если есть групповые данные в заявлении
                {
                    #region Код

                    string[] Fios = req.Fios.Split(new[] { '|' });
                    string[] Agies = req.Agies.Split(new[] { '|' });
                    string[] Weights = req.Weights.Split(new[] { '|' });
                    for (int i = 0; i < Fios.Length; i++)
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                        #region ФИО

                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                     req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                     "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                     "</textarea>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                        #region Дата рождения

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                                 "</textarea>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                                 "style='width: 100px; height: 23px;'>" + "" +
                                                                 "</textarea>"));
                        }

                        #endregion
                        #region Возраст

                        if (i <= Agies.Length - 1)  //подстраховка
                        {
                            DateTime dtTmp;
                            if (DateTime.TryParse(Agies[i], out dtTmp))
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                            }
                            else
                            {
                                panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                            }
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                        }

                        #endregion

                        #region Кнопка УДАЛИТЬ

                        panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                        panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                        #endregion

                        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                    }

                    #endregion
                }

                #endregion
                #region Название работы

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='WorkName' " +
                                                             "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                             "</textarea>"));
                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Образовательная организация

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganizationShort' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganizationShort +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Федеральный округ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Федеральный округ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='District' " +
                                                         "style='width: 880px; height: 23px;'>" + req.District +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Регион

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Район

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Район</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='Area' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Area +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            #endregion

            #region Город
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' disabled='disabled' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарий

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога (учителя) / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога (учителя)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога (учителя)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон педагога (учителя)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон педагога (учителя)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События

   
        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorLiterary(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorLiterary(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарий к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathLiterary.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorKultura(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorKultura(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарий к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
       
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathKultura.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorSport(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorSport(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст / Вес

            if (req.Fio != "")  //если есть индивидуальные данные в завлении
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст / Вес</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion
                #region Вес

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Weight' " +
                                                         "style='width: 50px; height: 23px;'>" + req.Weight +
                                                         "</textarea>"));

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст / Вес</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion
                    #region Вес

                    if (i <= Weights.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                             "style='width: 50px; height: 23px;'>" + Weights[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                             "style='width: 50px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Вес
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newWeight' class='inputsAddParty placeHolder_co' type='text' style='width: 50px; height: 23px;' value='' placeholder='ВЕС' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование спортивного клуба (кружка)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (кружка)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorThekvo(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по архивной заявке</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorThekvo(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер / архивный номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " / " +
                                                         req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возрастная категория / Весовая категория / Квалификация / Программа выступления / Результат

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                List<string[]> list = req.GetFioBirthAgecatWeightKvalifProgamResult_All();

                for (int i = 0; i < list.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Участник</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 270px; height: 23px;'>" + list[i][0] +
                                                                 "</textarea>"));

                    #endregion
                    #region Дата рождения

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + list[i][1] +
                                                             "</textarea>"));

                    #endregion
                    #region Возрастная категория

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                             req.Id + "' data-fieldname='AgeСategories' data-position='" + i + "' " +
                                                             "style='width: 150px; height: 23px;'>" + list[i][2] +
                                                             "</textarea>"));

                    #endregion
                    #region Весовая категория

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                             req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                             "style='width: 70px; height: 23px;'>" + list[i][3] +
                                                             "</textarea>"));

                    #endregion
                    #region Квалификация

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                             req.Id + "' data-fieldname='Kvalifications' data-position='" + i + "' " +
                                                             "style='width: 70px; height: 23px;'>" + list[i][4] +
                                                             "</textarea>"));

                    #endregion

                    // Разрыв
                    panelWrapper.Controls.Add(new LiteralControl("<div style='padding: 5px 0px 0px 0px'></div>"));

                    #region Программа выступления

                    //panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                             req.Id + "' data-fieldname='Programms' data-position='" + i + "' " +
                                                             "style='width: 150px; height: 23px;'>" + list[i][5] +
                                                             "</textarea>"));

                    #endregion
                    #region Результат

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' placeholder='Результат'" +
                                                                 "class='txtBoxUniverseAsyncEdit_adm placeHolder_co js_txtBoxReqsGroup_Ext' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Results' data-position='" + i + "' " +
                                                                 "style='width: 150px; height: 23px;'>" + list[i][6] +
                                                                 "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("<span style='display: inline-block; width: 520px;'></span>"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty_Ext' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            #region ФИО

            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' " +
                                                         "type='text' style='width: 250px; height: 23px;' value='' placeholder='Фамилия Имя Отчество' />"));

            #endregion
            #region Дата рождения

            panelWrapper.Controls.Add(new LiteralControl("&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' " +
                                                         "type='text' style='width: 90px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            #endregion
            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAgeCategory' class='inputsAddParty placeHolder_co' " +
                                                         "type='text' style='width: 140px; height: 23px;' value='' placeholder='Возраст-я' />"));

            #endregion
            #region Весовая категория

            panelWrapper.Controls.Add(new LiteralControl("&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newWeight' class='inputsAddParty placeHolder_co' " +
                                                         "type='text' style='width: 60px; height: 23px;' value='' placeholder='Вес-я' />"));

            #endregion
            #region Квалификация

            panelWrapper.Controls.Add(new LiteralControl("&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newKvalif' class='inputsAddParty placeHolder_co' " +
                                                         "type='text' style='width: 80px; height: 23px;' value='' placeholder='Квалиф-я' />"));

            #endregion
            #region Программа выступления

            panelWrapper.Controls.Add(new LiteralControl("&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newProgrm' class='inputsAddParty placeHolder_co' " +
                                                         "type='text' style='width: 140px; height: 23px;' value='' placeholder='Программа' />"));

            #endregion

            #region Кнопка добавления

            panelWrapper.Controls.Add(new LiteralControl("<div style='margin: 5px 0px 0px 0px; text-align: right;'>"));

            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty_Ext' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</div>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование спортивного клуба (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО тренера (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО тренера (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События

        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorKungfu(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по архивной заявке</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorKungfu(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitions.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст / Вес

            if (req.Fio != "")  //если есть индивидуальные данные в завлении
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст / Вес</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion
                #region Вес

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Weight' " +
                                                         "style='width: 50px; height: 23px;'>" + req.Weight +
                                                         "</textarea>"));

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст / Вес</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion
                    #region Вес

                    if (i <= Weights.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                             "style='width: 50px; height: 23px;'>" + Weights[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Weights' data-position='" + i + "' " +
                                                             "style='width: 50px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Вес
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newWeight' class='inputsAddParty placeHolder_co' type='text' style='width: 50px; height: 23px;' value='' placeholder='ВЕС' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование спортивного клуба (кружка)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (кружка)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorFootball(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorFootball(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Фактический адрес образовательной организации (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Фактический адрес образовательной организации (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Addr' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Addr +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование спортивного клуба (команды)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (команды)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Место проведения тренировок спортивного клуба

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Место проведения тренировок спортивного клуба</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Addr1' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Addr1 +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие соблюдать положение

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorPaintball(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorPaintball(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование спортивного клуба (кружка)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (кружка)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorShahmaty(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorShahmaty(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование спортивного клуба (кружка)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (кружка)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorShashky(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorShashky(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование спортивного клуба (кружка)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование спортивного клуба (кружка)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Обязательство предоставления медсправки

            str = req.ProcMedicine ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Обязательство предоставления медсправки</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorToponim(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorToponim(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарий к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathToponim.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorRobotech(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorRobotech(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название команды

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название команды</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарии

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            /*string fileUrlPath = _imgUrlPathTheatre_arch.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";*/

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    //panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События

        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorVmesteSila(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorVmesteSila(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Автор и название произведения

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Автор и название произведения</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Техническое сопровождение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Техническое сопровождение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='TechnicalInfo' " +
                                                         "style='width: 880px; height: 100px;'>" + req.TechnicalInfo + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарии к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование группы, кружка, коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование группы, кружка, коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathVmesteSila.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События

        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorClothes(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorClothes(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Автор и название произведения

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Автор и название произведения</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Техническое сопровождение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Техническое сопровождение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='TechnicalInfo' " +
                                                         "style='width: 880px; height: 100px;'>" + req.TechnicalInfo + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарии к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование группы, кружка, коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование группы, кружка, коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathClothes.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События

        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorMultimedia(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorMultimedia(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Название команды

            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название команды</td><td class='tdValue_co'>"));
            //panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
            //                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
            //                                             req.Id + "' data-fieldname='ClubsName' " +
            //                                             "style='width: 880px; height: 23px;'>" + req.ClubsName +
            //                                             "</textarea>"));
            //panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название проекта

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название проекта</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарии

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Структурное подразделение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Структурное подразделение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Division' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Division +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathMultimedia.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td>"));
            for (int i = 0; i < req.Links.Count; i++)
            {
                if (i == 0)
                    panelWrapper.Controls.Add(new LiteralControl("<td class='tdValue_co'>"));
                else
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'></td><td class='tdValue_co'>"));

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                req.Id + "' data-fieldname='Links' data-position='" + i + "' " +
                                                                "style='width: 880px; height: 23px;'>" + req.Links[i] +
                                                                "</textarea>"));

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            }

            if (req.Links.Count > 0) panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'></td>"));
            panelWrapper.Controls.Add(new LiteralControl("<td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                req.Id + "' data-fieldname='Links' data-position='" + req.Links.Count + "' " +
                                                "style='width: 880px; height: 23px;'></textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorKorablik(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorKorablik(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по архивной заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region ФИО / Дата рождения / Возраст

            if (req.Fio != "" || req.Age != "")  //если есть индивидуальные данные в заявке
            {
                #region Код

                panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                #region ФИО

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                             req.Id + "' data-fieldname='Fio' " +
                                                             "style='width: 500px; height: 23px;'>" + req.Fio +
                                                             "</textarea>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                #region Дата рождения

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Age' " +
                                                         "style='width: 100px; height: 23px;'>" + req.Age +
                                                         "</textarea>"));

                #endregion
                #region Возраст

                DateTime dtTmp;
                if (DateTime.TryParse(req.Age, out dtTmp))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + req.Age + "</span>"));
                }

                #endregion

                #region Кнопка УДАЛИТЬ

                panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='-9' data-cname='" + req.CompetitionName + "'></span>"));

                #endregion

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

                #endregion
            }

            if (req.Fios != "")  //если есть групповые данные в заявлении
            {
                #region Код

                string[] Fios = req.Fios.Split(new[] { '|' });
                string[] Agies = req.Agies.Split(new[] { '|' });
                string[] Weights = req.Weights.Split(new[] { '|' });
                for (int i = 0; i < Fios.Length; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО(s) / Дата рожд. / Возраст</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Fios' data-position='" + i + "' " +
                                                                 "style='width: 500px; height: 23px;'>" + Fios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Дата рождения

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + Agies[i] +
                                                             "</textarea>"));
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='Agies' data-position='" + i + "' " +
                                                             "style='width: 100px; height: 23px;'>" + "" +
                                                             "</textarea>"));
                    }

                    #endregion
                    #region Возраст

                    if (i <= Agies.Length - 1)  //подстраховка
                    {
                        DateTime dtTmp;
                        if (DateTime.TryParse(Agies[i], out dtTmp))
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + CompetitionsWork.GetAgeFromBurth(dtTmp) + "</span>"));
                        }
                        else
                        {
                            panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + Agies[i] + "</span>"));
                        }
                    }
                    else
                    {
                        panelWrapper.Controls.Add(new LiteralControl("<span class='age' style='width: 50px;'>" + "" + "</span>"));
                    }

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelParty' data-reqid='" + req.Id + "' data-position='" + i + "' data-cname='" + req.CompetitionName + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }

                #endregion
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ УЧАСТНИКОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового участника</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newFio' class='inputsAddParty placeHolder_co' type='text' style='width: 500px; height: 23px;' value='' placeholder='Фамилия Имя (Отчество)' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Возраст
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newAge' class='inputsAddParty placeHolder_co' type='text' style='width: 100px; height: 23px;' value='' placeholder='ДД.ММ.ГГГГ' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddParty' class='btnSpec' data-reqid='" + req.Id + "' data-cname='" + req.CompetitionName + "'>+ Добавить участника</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Автор и название произведения

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Автор и название произведения</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Техническое сопровождение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Техническое сопровождение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='TechnicalInfo' " +
                                                         "style='width: 880px; height: 100px;'>" + req.TechnicalInfo + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарии к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Наименование группы, кружка, коллектива

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование группы, кружка, коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathKorablik.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            if (req.Links.Count > 0)
            {
                if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                                 req.Id + "' data-fieldname='Links' " +
                                                                 "style='width: 880px; height: 23px;'>" + req.Links[0] +
                                                                 "</textarea>"));
                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События

        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorCrimroute(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorCrimroute(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Кнопка Перехода к предыдущей заявке

            LinkButton lBtn = new LinkButton(); lBtn.CssClass = "lBtnPrevious";
            lBtn.ToolTip = "открыть предыдущую заявку";
            lBtn.CommandArgument = req.Id.ToString();
            lBtn.Command += (lBtnToPreviousReq_Arch_Crimroute);
            lBtn.OnClientClick = "waiting('Идёт переход к предыдущей заявке. Подождите..', 500);";
            panelWrapper.Controls.Add(lBtn);

            #endregion
            #region Кнопка Перехода к следующей заявке

            lBtn = new LinkButton(); lBtn.CssClass = "lBtnNext";
            lBtn.ToolTip = "открыть следующую заявку";
            lBtn.CommandArgument = req.Id.ToString();
            lBtn.Command += (lBtnToNextReq_Arch_Crimroute);
            lBtn.OnClientClick = "waiting('Идёт переход к следующей заявке. Подождите..', 500);";
            panelWrapper.Controls.Add(lBtn);

            #endregion
            #region Публикация (Отображение в панели голосования и в таблице результатов)

            string check = req.Approved ? "1" : "0";
            str = "";
            if (check == "0")               // если заявка не опубликована, то..
            {
                str = "btnPublishOnOff_Off";
            }
            else if (check == "1")          // если опубликован, то..
            {
                str = "btnPublishOnOff_On";
            }

            panelWrapper.Controls.Add(new LiteralControl("<span class='" + str + "' title='Опубликовать заявку в панели голосования и в таблице результатов'" +
                                                    " id='btnPublishOnOff' data-reqid='" + req.Id + "' data-checker='" + check + "' ></span>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion

            #region Возрастная категория

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Возрастная категория</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='AgeСategory' " +
                                                         "style='width: 880px; height: 23px;' disabled>" + CompetitionsWork.GetAgeCategory(req) +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Наименование группы, кружка, коллектива	

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Наименование группы, кружка, коллектива</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #region Комментарии к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Структурное подразделение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Структурное подразделение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Division' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Division +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон педагога

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон педагога</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathCrimroute.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "?dt=" + DateTime.Now.Ticks.ToString() + "'>ссылка" + counter + "</a>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td>"));
            for (int i = 0; i < req.Links.Count; i++)
            {
                if (i == 0)
                    panelWrapper.Controls.Add(new LiteralControl("<td class='tdValue_co'>"));
                else
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'></td><td class='tdValue_co'>"));

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                req.Id + "' data-fieldname='Links' data-position='" + i + "' " +
                                                                "style='width: 880px; height: 23px;'>" + req.Links[i] +
                                                                "</textarea>"));

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            }

            if (req.Links.Count > 0) panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'></td>"));
            panelWrapper.Controls.Add(new LiteralControl("<td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                req.Id + "' data-fieldname='Links' data-position='" + req.Links.Count + "' " +
                                                "style='width: 880px; height: 23px;'></textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События

        #region Событие lBtnToPreviousReq
        /// <summary>Нажатие на кнопку перехода к предыдущей заявке</summary>
        /// <param name="sender"></param>
        /// <param name="e">id текущей открытой Заявки</param>
        protected void lBtnToPreviousReq_Arch_Crimroute(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            long reqId = StringToNum.ParseLong(e.CommandArgument.ToString());
            if (reqId == -1)
            {
                warning.ShowWarning("Неправильный id Заявки..", _pag.Master);
                return;
            }

            var work = new CompetitionsWork_Arch();
            var structList = new List<CompetitionRequest_Arch>();
            List<CompetitionRequest_Arch> tmpList;
            string compName = EnumsHelper.GetCrimrouteCode(Crimroute.self);

            //foreach (string subname in subnames_editorCrimrouteInstrumZanr)
            //{
            tmpList = work.SelectWhere(new[] { "_id" }, new[] { "CompetitionName", "SubsectionName" }, new[] { compName, "" });
            if (tmpList != null)
            {
                structList.AddRange(tmpList);
            }
            //}
            structList = structList.OrderBy(x => x.Id * -1).ToList();

            if (structList.Count == 0)  //проверка-подстраховка
            {
                return;
            }

            int indexCurrent = structList.FindIndex(x => x.Id == reqId);
            if (indexCurrent >= structList.Count - 1)
            {
                warning.ShowWarning("Это первая заявка, перед ней больше нет заявок..", _pag.Master);
                return;
            }

            long needId = 0;
            bool err = false;
            try
            {
                needId = structList[indexCurrent + 1].Id;
            }
            catch (Exception ex)
            {
                #region Код

                err = true;

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());

                #endregion
            }

            if (!err)
            {
                _pag.Response.Redirect("~/adm/competitionone.aspx?num=" + needId);
            }
        }

        #endregion
        #region Событие lBtnToNextReq_hudSlovo

        /// <summary>Нажатие на кнопку перехода к следующей заявке</summary>
        /// <param name="sender"></param>
        /// <param name="e">id текущей открытой Заявки</param>
        protected void lBtnToNextReq_Arch_Crimroute(object sender, CommandEventArgs e)
        {
            WarnClass warning = new WarnClass(); warning.HideWarning(_pag.Master);
            long reqId = StringToNum.ParseLong(e.CommandArgument.ToString());
            if (reqId == -1)
            {
                warning.ShowWarning("Неправильный id Заявки..", _pag.Master);
                return;
            }

            var work = new CompetitionsWork_Arch();
            var structList = new List<CompetitionRequest_Arch>();
            List<CompetitionRequest_Arch> tmpList;
            string compName = EnumsHelper.GetCrimrouteCode(Crimroute.self);

            //foreach (string subname in subnames_editorCrimrouteInstrumZanr)
            //{
            tmpList = work.SelectWhere(new[] { "_id" }, new[] { "CompetitionName", "SubsectionName" }, new[] { compName, "" });
            if (tmpList != null)
            {
                structList.AddRange(tmpList);
            }
            //}
            structList = structList.OrderBy(x => x.Id * -1).ToList();

            if (structList.Count == 0)  //проверка-подстраховка
            {
                return;
            }

            int indexCurrent = structList.FindIndex(x => x.Id == reqId);
            if (indexCurrent == 0)
            {
                warning.ShowWarning("Это последняя заявка, после неё больше нет заявок..", _pag.Master);
                return;
            }

            long needId = 0;
            bool err = false;
            try
            {
                needId = structList[indexCurrent - 1].Id;
            }
            catch (Exception ex)
            {
                #region Код

                err = true;

                DebugLog.Log(ErrorEvents.err, GetType().Name, MethodBase.GetCurrentMethod().Name, "Текст исключения: " + ex.Message + ". Строка: " + new StackTrace(ex, true).GetFrame(0).GetFileLineNumber());

                #endregion
            }

            if (!err)
            {
                _pag.Response.Redirect("~/adm/competitionone.aspx?num=" + needId);
            }
        }

        #endregion

        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorMathbattle(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorMathbattle(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();
            
            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "") 
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            //cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td>" +
                //"<td class='tdValue_co'>" + cName + "</td>" +
                "</tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Название команды

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название команды</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            //panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
            //                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
            //                                             req.Id + "' data-fieldname='WorkName' " +
            //                                             "style='width: 880px; height: 23px;'>" + req.WorkName +
            //                                             "</textarea>"));
            //panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарии

            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии</td><td class='tdValue_co'>"));
            //panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
            //                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
            //                                             "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            //panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Структурное подразделение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Структурное подразделение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Division' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Division +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            /*string fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";*/

            //int counter = 1;
            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            //foreach (string link in req.Links)
            //{
            //    if (link.StartsWith("http"))
            //    {
            //        panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
            //    }
            //    else if (link != "")
            //    {
            //        //panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
            //    }
            //    else
            //    {
            //        panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
            //    }

            //    counter++;
            //}
            //panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            //if (req.Links.Count > 0)
            //{
            //    if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
            //    {
            //        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
            //        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
            //                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
            //                                                     req.Id + "' data-fieldname='Links' " +
            //                                                     "style='width: 880px; height: 23px;'>" + req.Links[0] +
            //                                                     "</textarea>"));
            //        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            //    }
            //}

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorKosmos(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorKosmos(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            //cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td>" +
                //"<td class='tdValue_co'>" + cName + "</td>" +
                "</tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Название команды

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название команды</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ClubsName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ClubsName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Название работы

            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            //panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
            //                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
            //                                             req.Id + "' data-fieldname='WorkName' " +
            //                                             "style='width: 880px; height: 23px;'>" + req.WorkName +
            //                                             "</textarea>"));
            //panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарии

            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарии</td><td class='tdValue_co'>"));
            //panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
            //                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
            //                                             "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            //panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Структурное подразделение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Структурное подразделение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Division' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Division +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region ФИО руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefFio' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefFio +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Должность руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Должность руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefPosition' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefPosition +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            /*string fileUrlPath = _imgUrlPathTheatre.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";*/

            //int counter = 1;
            //panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            //foreach (string link in req.Links)
            //{
            //    if (link.StartsWith("http"))
            //    {
            //        panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
            //    }
            //    else if (link != "")
            //    {
            //        //panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
            //    }
            //    else
            //    {
            //        panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
            //    }

            //    counter++;
            //}
            //panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            //if (req.Links.Count > 0)
            //{
            //    if (req.Links[0].StartsWith("http") || req.Links[0].StartsWith("\"http"))
            //    {
            //        panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td><td class='tdValue_co'>"));
            //        panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
            //                                                     "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
            //                                                     req.Id + "' data-fieldname='Links' " +
            //                                                     "style='width: 880px; height: 23px;'>" + req.Links[0] +
            //                                                     "</textarea>"));
            //        panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            //    }
            //}

            #endregion

            #endregion
            #region Количество голосов ЗА

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Количество голосов ЗА</td><td class='tdValue_co'>" + req.Likes + "</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #region События

        #endregion

        #endregion
        #region Метод ConsoleCompetitionOnePanel_Arch_editorScience(string requestNum, string rights)

        /// <summary>Метод возвращает страницу с полной информацией по заявке.
        /// Таблицы CSS для данного метода находятся в файле</summary>
        /// <param name="requestNum">id запроса</param>
        /// <param name="rights">права, с которыми вызывается страница управления заявками</param>
        /// <returns></returns>
        public Panel ConsoleCompetitionOnePanel_Arch_editorScience(string requestNum, string rights)
        {
            Panel panelWrapper = new Panel();

            var reqArch = new CompetitionsWork_Arch().GetOneRequest(requestNum);
            if (reqArch == null || reqArch.CompetitionName == "")
                return panelWrapper;

            var str = "";
            var req = CompetitionRequest_Arch.CopyFromArchReq(reqArch);

            #region Код формирования html-кода

            #region Кнопка НАЗАД

            panelWrapper.Controls.Add(new LiteralControl("<a class='lBtnBack' href='/adm/competitionsarch.aspx'></a>"));

            #endregion
            #region Заголовок

            panelWrapper.Controls.Add(new LiteralControl("<span class='lblSectionTitle'>Полная информация по заявке</span>"));

            #endregion

            #region Кнопки скачивания дипломов и сертификатов

            Content_Documents_Cons_Common(ref panelWrapper, req.Id.ToString());

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("<table id='tbl_co'>"));

            #region РЕЗУЛЬТАТ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>РЕЗУЛЬТАТ</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Result' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Result +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Конкурс и номинация

            string cName = EnumsHelper.GetCompetitionValueFromCode(req.CompetitionName);
            cName += " номинация: " + req.SubsectionName;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Конкурс</td><td class='tdValue_co'>" + cName + "</td></tr>"));

            #endregion
            #region Номер и дата заявки

            DateTime dt = new DateTime(req.DateReg);
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Номер и дата заявки</td><td class='tdValue_co'>" + req.Id + " от " + dt.ToString("dd.MM.yyyy HH:mm") + "</td></tr>"));

            #endregion
            #region Участники 2-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 2);

            #endregion
            #region Название работы

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Название работы</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='WorkName' " +
                                                         "style='width: 880px; height: 23px;'>" + req.WorkName +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Комментарий к работе

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Комментарий к работе</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" + req.Id + "' data-fieldname='WorkComment' " +
                                                         "style='width: 880px; height: 100px;'>" + req.WorkComment + "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Образовательная организация (полностью)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Образовательная организация (полностью)</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='EducationalOrganization' " +
                                                         "style='width: 880px; height: 23px;'>" + req.EducationalOrganization +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Структурное подразделение

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Структурное подразделение</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Division' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Division +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Регион, город

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Регион</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='Region' " +
                                                         "style='width: 880px; height: 23px;'>" + req.Region +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Город</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='City' " +
                                                         "style='width: 880px; height: 23px;'>" + req.City +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Панель отображения нескольких педагогов

            if (req.ChiefFios.Count > 0)
            {
                for (int i = 0; i < req.ChiefFios.Count; i++)
                {
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>ФИО педагога / Должность</td><td class='tdValue_co'>"));

                    #region ФИО

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                 "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                 req.Id + "' data-fieldname='ChiefFios' data-position='" + i + "' " +
                                                                 "style='width: 480px; height: 23px;'>" + req.ChiefFios[i] +
                                                                 "</textarea>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

                    #region Должность

                    panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                             "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                             req.Id + "' data-fieldname='ChiefPositions' data-position='" + i + "' " +
                                                             "style='width: 200px; height: 23px;'>" + (i < req.ChiefPositions.Count() ? req.ChiefPositions[i] : "") +
                                                             "</textarea>"));

                    #endregion

                    #region Кнопка УДАЛИТЬ

                    panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
                    panelWrapper.Controls.Add(new LiteralControl("<span class='btnPartyDel js_btnDelChief' data-reqid='" + req.Id + "' data-position='" + i + "'></span>"));

                    #endregion

                    panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
                }
            }

            #endregion
            #region ПАНЕЛЬ ДОБАВЛЕНИЯ НОВЫХ ПЕДАГОГОВ

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Добавьте нового педагога</td><td class='tdValue_co'>"));

            //ФИО
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefFio' class='inputsAddParty placeHolder_co' type='text' style='width: 480px; height: 23px;' value='' placeholder='ФИО педагога' />"));
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));

            //Должность
            panelWrapper.Controls.Add(new LiteralControl("<input id='js_newChiefPosition' class='inputsAddParty placeHolder_co' type='text' style='width: 200px; height: 23px;' value='' placeholder='Должность педагога' />"));

            //Кнопка добавления
            panelWrapper.Controls.Add(new LiteralControl("&nbsp;&nbsp;"));
            panelWrapper.Controls.Add(new LiteralControl("<span id='js_btnAddChief' class='btnSpec' data-reqid='" + req.Id + "'>+ Добавить педагога</span>"));

            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Электронная почта руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Электронная почта руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefEmail' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefEmail +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Контактный телефон руководителя

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Контактный телефон руководителя</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                         "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqs' data-reqid='" +
                                                         req.Id + "' data-fieldname='ChiefTelephone' " +
                                                         "style='width: 880px; height: 23px;'>" + req.ChiefTelephone +
                                                         "</textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Ссылки на материалы работ

            string fileUrlPath = _imgUrlPathScience.Replace("~/", "");
            string baseUrl = "https://" + _pag.Request.ServerVariables["SERVER_NAME"] + ":" +
                                    _pag.Request.ServerVariables["SERVER_PORT"] + "/";

            int counter = 1;
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Ссылки на материалы работ</td><td class='tdValue_co'>"));
            foreach (string link in req.Links)
            {
                if (link.StartsWith("http"))
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else if (link != "")
                {
                    panelWrapper.Controls.Add(new LiteralControl("<a target='_blank' href='" + baseUrl + fileUrlPath + link + "'>ссылка" + counter + "</a><br/>"));
                }
                else
                {
                    panelWrapper.Controls.Add(new LiteralControl("<p>Нет ссылки</p><br/>"));
                }

                counter++;
            }
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #region Строка редактирования ссылки (только для ссылок на ролики с ютуба)

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Правка ссылки</td>"));
            for (int i = 0; i < req.Links.Count; i++)
            {
                if (i == 0)
                    panelWrapper.Controls.Add(new LiteralControl("<td class='tdValue_co'>"));
                else
                    panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'></td><td class='tdValue_co'>"));

                panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                                "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                                req.Id + "' data-fieldname='Links' data-position='" + i + "' " +
                                                                "style='width: 880px; height: 23px;'>" + req.Links[i] +
                                                                "</textarea>"));

                panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));
            }

            if (req.Links.Count > 0) panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'></td>"));
            panelWrapper.Controls.Add(new LiteralControl("<td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl("<textarea name='' type='text' " +
                                                "class='txtBoxUniverseAsyncEdit_adm js_txtBoxReqsGroup' data-reqid='" +
                                                req.Id + "' data-fieldname='Links' data-position='" + req.Links.Count + "' " +
                                                "style='width: 880px; height: 23px;'></textarea>"));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            #endregion
            #region Опубликована

            str = req.Approved ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Опубликована на сайте</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на обработку ПДн

            str = req.PdnProcessing ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на обработку ПДн</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Согласие на публикацию

            str = req.PublicAgreement ? "ДА" : "НЕТ";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Согласие на публикацию</td><td class='tdValue_co'>" + str + "</td></tr>"));

            #endregion
            #region Кол-во участников отборочного тура

            panelWrapper.Controls.Add(new LiteralControl("<tr><td class='tdName_co'>Кол-во участников отборочного тура</td><td class='tdValue_co'>"));
            panelWrapper.Controls.Add(new LiteralControl(req.ProtocolPartyCount.ToString()));
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion
            #region Участники 1-го тура ФИО / Дата рождения / Возраст / Место учёбы / Класс с литерой

            Content_AddParty_Cons_Common(ref panelWrapper, ref req, 1);

            #endregion
            #region Протокол

            Content_AddProtocol_Common(ref panelWrapper, ref req);

            #endregion
            #region Заметки куратора

            Content_AddResults_Common(ref panelWrapper, ref req);

            #endregion
            #region Панель оповещения об успехе или об ошибке

            Panel panelWarning = new Panel(); panelWarning.CssClass = "divWarning_c"; panelWarning.ID = "panelWarning_c";
            panelWrapper.Controls.Add(new LiteralControl("<tr><td colspan=2 style='text-align: center;'>"));
            panelWrapper.Controls.Add(panelWarning);
            panelWrapper.Controls.Add(new LiteralControl("</td></tr>"));

            #endregion

            panelWrapper.Controls.Add(new LiteralControl("</table>"));

            #endregion

            return panelWrapper;
        }

        #endregion


        #endregion

        #endregion
    }

    #endregion
}